
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftCONORleftCONANDleftORleftXORleftANDleftEQNEleftGTGEQLTLEQleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMODrightTILDELNOTleftMEMBERACCESSINCREMENTDECREMENTIDENTIFIER INTCONST CHARCONST STRCONST MEMBERACCESS INCREMENT DECREMENT LNOT TILDE TIMES DIVIDE MOD PLUS MINUS LSHIFT RSHIFT EQUALS PLUSEQUAL MINUSEQUAL NEWLINE COMMENTDELIM COMMENTSLINE LT GT LEQ GEQ EQ NE LPAREN RPAREN LBRACE RBRACE LBRACKET RBRACKET COMMA TERMINATOR COLON AND XOR OR CONAND CONOR BREAK VOID PRIVATE IF CHAR OBJECT RETURN CLASS NEW PRINT ELSE PUBLIC USING INT CONTINUE TYPEOF WHILEstart : compilation_unit\n    compilation_unit : class_declarations\n    | using_directives class_declarations\n    using_directives : using_directive\n    | using_directives using_directive\n    using_directive : USING identifier TERMINATOR\n    class_declarations : class_declarations class_declaration\n    | class_declaration\n    class_declaration : modifiers CLASS identifier class_body TERMINATOR\n    | CLASS identifier class_body TERMINATOR\n    | CLASS identifier class_body\n    | modifiers CLASS identifier class_body\n    class_body : LBRACE class_member_declarations RBRACE\n    | LBRACE RBRACE\n    identifier : IDENTIFIER\n    class_member_declarations : class_member_declaration\n    | class_member_declarations class_member_declaration\n    class_member_declaration : field_declaration\n    | method_declaration\n    | constructor_declaration\n    | destructor_declaration\n    field_declaration : modifiers type variable_declarators TERMINATOR\n    | type variable_declarators TERMINATOR\n    type : reference_type\n    | type_parameter\n    reference_type : class_type\n                        | array_type\n    class_type : proper_identifier\n    | OBJECT\n    proper_identifier : prefix identifier\n    prefix : identifier MEMBERACCESS\n            | prefix identifier MEMBERACCESS\n    array_type : non_array_type LBRACKET RBRACKET\n    non_array_type : type\n    type_parameter : identifier\n    | predefined_type\n    variable_declarators : variable_declarator\n    | variable_declarators COMMA variable_declarator\n    variable_declarator : identifier\n    | identifier EQUALS variable_initializer\n    variable_initializer : expression\n    variable_initializer_list : variable_initializer\n                                | variable_initializer_list COMMA variable_initializer\n    method_declaration : method_header method_body\n    method_header : type member_name LPAREN fixed_parameters RPAREN\n                        | modifiers  type member_name LPAREN fixed_parameters RPAREN\n                        | type member_name LPAREN RPAREN\n                        | modifiers type member_name LPAREN RPAREN\n                        | VOID member_name LPAREN fixed_parameters RPAREN\n                        | modifiers  VOID member_name LPAREN fixed_parameters RPAREN\n                        | VOID member_name LPAREN RPAREN\n                        | modifiers VOID member_name LPAREN RPAREN\n    modifiers : modifier\n                                            | modifiers modifier\n    modifier : PUBLIC\n                                    | PRIVATE\n    member_name : identifier\n    method_body : block\n                    | TERMINATOR\n    fixed_parameters : fixed_parameter\n                                            | fixed_parameters COMMA fixed_parameter\n    fixed_parameter : type identifier default_argument\n                                            | type identifier\n    default_argument : EQUALS expression\n    constructor_declaration : constructor_declarator constructor_body\n    constructor_declarator : identifier LPAREN fixed_parameters RPAREN\n                                                            | identifier LPAREN  RPAREN\n    constructor_body : block\n                                            | TERMINATOR\n    destructor_declaration : TILDE identifier LPAREN RPAREN destructor_body\n    destructor_body : block\n                                            | TERMINATOR\n    block : LBRACE RBRACE\n            | LBRACE scope_marker statement_list RBRACE\n    scope_marker :\n    statement_list : statement\n                        | statement_list statement\n    statement : local_variable_declaration TERMINATOR\n    | embedded_statement\n    embedded_statement : block\n    | TERMINATOR\n    | statement_expression TERMINATOR\n    | if_statement\n    | iteration_statement\n    | print_statement\n    | break_statement\n    | return_statement\n     print_statement : PRINT LPAREN expression RPAREN TERMINATOR\n    break_statement : BREAK TERMINATOR\n    continue_statement : CONTINUE TERMINATOR\n    return_statement : RETURN TERMINATOR\n    | RETURN expression TERMINATOR\n    literal : INTCONST\n    | STRCONST\n    | CHARCONST\n    local_variable_declaration : type local_variable_declarators\n    local_variable_declarators : local_variable_declarator\n    | local_variable_declarators COMMA local_variable_declarator\n    local_variable_declarator : identifier\n    | identifier EQUALS local_variable_initializer\n    local_variable_initializer : expression\n    statement_expression : object_creation_expression\n    | assignment\n    | invocation_expression\n    | post_increment_expression\n    | post_decrement_expression\n    invocation_expression : primary_expression LPAREN argument_list RPAREN\n    | primary_expression LPAREN RPAREN\n    | identifier LPAREN RPAREN\n    | identifier LPAREN argument_list RPAREN\n    | proper_identifier LPAREN argument_list RPAREN\n    | proper_identifier LPAREN RPAREN\n    if_statement : if LPAREN expression RPAREN embedded_statement\n    | if LPAREN expression RPAREN embedded_statement else embedded_statement\n    if : IF\n    else : ELSE\n    iteration_statement : while LPAREN expression RPAREN embedded_statement\n    while : WHILE\n    expression : non_assignment_expression\n                    | assignment\n    assignment : unary_expression assignment_operator expression\n                    | identifier assignment_operator expression\n    assignment_operator : EQUALS\n    unary_expression : primary_expression\n                        | PLUS unary_expression\n                        | PLUS identifier\n                        | MINUS unary_expression\n                        | MINUS identifier\n                        | LNOT unary_expression\n                        | LNOT identifier\n                        | TILDE unary_expression\n                        | TILDE identifier\n    primary_expression : primary_no_array_creation_expression\n                            | array_creation_expression\n    primary_no_array_creation_expression : literal\n                                            | parenthesized_expression\n                                            | member_access\n                                            | element_access\n                                            | post_increment_expression\n                                            | invocation_expression\n                                            | post_decrement_expression\n                                            | object_creation_expression\n                                            | typeof_expression\n    parenthesized_expression : LPAREN expression RPAREN\n    member_access : primary_expression MEMBERACCESS identifier\n                                            | iMEMAi\n                                            | predefined_type MEMBERACCESS identifier\n    predefined_type : INT\n                                            | CHAR\n    element_access : primary_no_array_creation_expression LBRACKET expression_list RBRACKET\n                                            | identifier LBRACKET expression_list RBRACKET\n    expression_list : expression\n                                            | expression_list COMMA expression\n    post_increment_expression : primary_expression INCREMENT\n                                                                    | identifier INCREMENT\n    post_decrement_expression : primary_expression DECREMENT\n                                 | identifier DECREMENT\n    object_creation_expression : NEW type LPAREN argument_list RPAREN object_or_collection_initializer\n                                    | NEW type LPAREN argument_list RPAREN\n                                    | NEW type LPAREN RPAREN\n                                    | NEW type object_or_collection_initializer\n     argument_list : argument\n                      | argument_list COMMA argument\n     argument : expression\n    object_or_collection_initializer : object_initializer\n                                        | collection_initializer\n    object_initializer : LBRACE member_initializer_list RBRACE\n                            | LBRACE RBRACE\n                            | LBRACE member_initializer_list COMMA RBRACE\n    member_initializer_list : member_initializer\n                                | member_initializer_list COMMA member_initializer\n    member_initializer : identifier EQUALS initializer_value\n    initializer_value : expression\n                            | object_or_collection_initializer\n    collection_initializer : LBRACE element_initializer_list RBRACE\n                                | LBRACE element_initializer_list COMMA RBRACE\n    element_initializer_list : element_initializer\n                                | element_initializer_list COMMA element_initializer\n    element_initializer : non_assignment_expression\n                            | LBRACE expression_list RBRACE\n    array_creation_expression : NEW non_array_type LBRACKET expression RBRACKET\n    typeof_expression : TYPEOF LPAREN type RPAREN\n                        | TYPEOF LPAREN unbound_type_name RPAREN\n                        | TYPEOF LPAREN VOID RPAREN\n    unbound_type_name : iMEMAi\n                        | unbound_type_name MEMBERACCESS identifier\n    iMEMAi : identifier MEMBERACCESS identifier\n    non_assignment_expression : conditional_expression\n    conditional_expression : conditional_or_expression\n    conditional_or_expression : conditional_and_expression\n                                    | conditional_or_expression CONOR conditional_and_expression\n    conditional_and_expression : inclusive_or_expression\n                                    | conditional_and_expression CONAND inclusive_or_expression\n    inclusive_or_expression : exclusive_or_expression\n                                | inclusive_or_expression OR exclusive_or_expression\n    exclusive_or_expression : and_expression\n                                | exclusive_or_expression XOR and_expression\n    and_expression : equality_expression\n                        | and_expression AND equality_expression\n    equality_expression : relational_expression\n                            | equality_expression EQ relational_expression\n                            | equality_expression NE relational_expression\n     relational_expression : shift_expression\n                                | relational_expression LT shift_expression\n                                | relational_expression GT shift_expression\n                                | relational_expression LEQ shift_expression\n                                | relational_expression GEQ shift_expression\n    shift_expression : additive_expression\n                        | shift_expression LSHIFT additive_expression\n                        | shift_expression RSHIFT additive_expression\n    additive_expression : multiplicative_expression\n                            | additive_expression PLUS multiplicative_expression\n                            | additive_expression MINUS multiplicative_expression\n    multiplicative_expression : unary_expression\n                                | identifier\n                                | multiplicative_expression TIMES unary_expression\n                                | multiplicative_expression DIVIDE unary_expression\n                                | multiplicative_expression MOD unary_expression\n                                | multiplicative_expression TIMES identifier\n                                | multiplicative_expression DIVIDE identifier\n                                | multiplicative_expression MOD identifier\n    '
    
_lr_action_items = {end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'invocation_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[98,147,147,147,147,147,98,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,98,98,147,147,147,98,]),'class_declarations':([0,8,],[2,17,]),'variable_declarator':([45,69,88,],[63,63,174,]),'argument':([200,207,212,283,317,],[260,260,260,260,339,]),'unary_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[104,149,185,186,192,195,104,149,149,149,149,149,149,149,149,149,149,149,149,149,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,302,305,306,149,149,286,149,149,149,104,104,149,286,149,104,]),'member_name':([26,45,67,69,],[53,65,90,91,]),'object_or_collection_initializer':([220,348,352,],[280,357,364,]),'iMEMAi':([82,86,100,103,112,116,135,140,142,181,188,193,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[106,106,106,106,106,106,106,106,106,106,106,254,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'relational_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,236,241,257,278,279,283,317,320,334,347,348,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,288,289,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'conditional_or_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,257,278,279,283,317,320,334,347,348,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'element_initializer_list':([279,],[328,]),'conditional_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,257,278,279,283,317,320,334,347,348,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'class_type':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'collection_initializer':([220,348,352,],[281,281,281,]),'else':([344,],[354,]),'expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,257,278,283,317,320,334,348,],[164,218,221,250,251,262,264,266,262,271,272,262,275,264,315,327,262,262,340,264,359,]),'start':([0,],[12,]),'object_initializer':([220,348,352,],[282,282,282,]),'break_statement':([82,135,322,325,354,],[113,113,113,113,113,]),'type_parameter':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'scope_marker':([60,],[82,]),'member_access':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'statement_list':([82,],[135,]),'primary_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[120,162,162,162,162,162,120,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,120,120,162,162,162,120,]),'class_body':([16,24,],[22,51,]),'method_declaration':([23,48,],[27,27,]),'multiplicative_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,257,278,279,283,317,320,334,347,348,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,292,293,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'constructor_declaration':([23,48,],[31,31,]),'while':([82,135,322,325,354,],[126,126,126,126,126,]),'and_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,231,236,241,257,278,279,283,317,320,334,347,348,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,291,158,158,158,158,158,158,158,158,158,158,158,]),'argument_list':([200,207,212,283,],[261,268,273,336,]),'statement':([82,135,],[145,214,]),'constructor_body':([35,],[58,]),'if_statement':([82,135,322,325,354,],[131,131,131,131,131,]),'using_directive':([0,8,],[11,18,]),'iteration_statement':([82,135,322,325,354,],[132,132,132,132,132,]),'field_declaration':([23,48,],[37,37,]),'method_body':([49,],[72,]),'if':([82,135,322,325,354,],[136,136,136,136,136,]),'assignment_operator':([104,118,149,156,341,],[188,202,188,202,202,]),'default_argument':([97,],[182,]),'inclusive_or_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,236,257,278,279,283,317,320,334,347,348,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,296,169,169,169,169,169,169,169,169,169,]),'compilation_unit':([0,],[7,]),'destructor_declaration':([23,48,],[46,46,]),'fixed_parameter':([55,76,87,95,176,177,],[80,80,80,180,80,80,]),'additive_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,234,235,236,237,238,239,240,241,257,278,279,283,317,320,334,347,348,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,294,295,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'modifiers':([0,2,8,17,23,48,],[10,10,10,10,47,47,]),'member_initializer_list':([279,],[332,]),'statement_expression':([82,135,322,325,354,],[144,144,144,144,144,]),'prefix':([23,47,48,55,76,82,86,87,95,100,103,112,116,135,140,141,142,157,176,177,181,188,193,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'destructor_body':([146,],[223,]),'class_member_declaration':([23,48,],[34,70,]),'array_creation_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'identifier':([1,4,19,23,26,40,41,45,47,48,55,67,69,76,79,82,86,87,88,95,100,103,112,116,117,135,140,141,142,157,176,177,181,188,193,199,200,201,202,206,207,209,210,211,212,215,216,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,258,278,279,283,311,317,320,322,325,334,347,348,350,354,],[13,16,24,29,52,61,62,64,68,29,68,52,64,68,97,118,156,68,175,68,184,187,191,194,196,118,156,68,156,68,68,68,156,156,253,259,156,156,156,267,156,270,156,156,156,156,156,285,285,285,259,285,285,285,285,285,285,285,285,285,285,285,285,303,304,307,156,196,156,331,156,338,156,156,341,341,156,285,156,362,341,]),'post_increment_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[105,150,150,150,150,150,105,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,105,105,150,150,150,105,]),'local_variable_initializer':([257,],[314,]),'using_directives':([0,],[8,]),'local_variable_declaration':([82,135,],[108,108,]),'assignment':([82,86,135,140,142,181,188,200,201,202,207,210,211,212,215,216,257,278,283,317,320,322,325,334,348,354,],[109,151,109,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,109,109,151,151,109,]),'block':([35,49,82,135,146,322,325,354,],[59,73,110,110,225,110,110,110,]),'initializer_value':([348,],[358,]),'element_initializer':([279,347,],[330,356,]),'equality_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,230,231,236,241,257,278,279,283,317,320,334,347,348,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,290,154,154,154,154,154,154,154,154,154,154,154,154,]),'parenthesized_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'variable_initializer':([86,],[155,]),'array_type':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'local_variable_declarators':([117,],[197,]),'member_initializer':([279,350,],[333,360,]),'type':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[45,69,45,79,79,117,79,79,117,220,220,79,79,256,]),'embedded_statement':([82,135,322,325,354,],[119,119,342,344,365,]),'class_declaration':([0,2,8,17,],[5,15,5,15,]),'expression_list':([201,216,334,],[265,276,351,]),'typeof_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'modifier':([0,2,8,10,17,23,47,48,],[3,3,3,20,3,3,20,3,]),'exclusive_or_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,236,241,257,278,279,283,317,320,334,347,348,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,301,159,159,159,159,159,159,159,159,159,]),'non_array_type':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[30,30,30,30,30,30,30,30,30,219,219,30,30,30,]),'predefined_type':([23,47,48,55,76,82,86,87,95,100,103,112,116,135,140,141,142,157,176,177,181,188,193,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[32,32,32,32,32,125,160,32,32,160,160,160,160,125,160,32,160,32,32,32,160,160,32,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'literal':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'constructor_declarator':([23,48,],[35,35,]),'print_statement':([82,135,322,325,354,],[129,129,129,129,129,]),'return_statement':([82,135,322,325,354,],[130,130,130,130,130,]),'conditional_and_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,257,278,279,283,317,320,334,347,348,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,287,165,165,165,165,165,165,165,165,165,]),'local_variable_declarator':([117,258,],[198,316,]),'proper_identifier':([23,47,48,55,76,82,86,87,95,100,103,112,116,135,140,141,142,157,176,177,181,188,193,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[33,33,33,33,33,134,166,33,33,166,166,166,166,134,166,33,166,33,33,33,166,166,33,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'unbound_type_name':([193,],[255,]),'variable_declarators':([45,69,],[66,92,]),'post_decrement_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[133,153,153,153,153,153,133,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,133,133,153,153,153,133,]),'fixed_parameters':([55,76,87,176,177,],[77,93,172,246,248,]),'primary_no_array_creation_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'non_assignment_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,257,278,279,283,317,320,334,347,348,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,335,168,168,168,168,335,168,]),'element_access':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'reference_type':([23,47,48,55,76,82,87,95,135,141,157,176,177,193,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'object_creation_expression':([82,86,100,103,112,116,135,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,257,278,279,283,317,320,322,325,334,347,348,354,],[143,170,170,170,170,170,143,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,143,143,170,170,170,143,]),'class_member_declarations':([23,],[48,]),'method_header':([23,48,],[49,49,]),'shift_expression':([86,140,142,181,188,200,201,202,207,210,211,212,215,216,226,227,228,230,231,236,237,238,239,240,241,257,278,279,283,317,320,334,347,348,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,297,298,299,300,163,163,163,163,163,163,163,163,163,163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> compilation_unit','start',1,'p_start','parser.py',36),
  ('compilation_unit -> class_declarations','compilation_unit',1,'p_compilation_unit','parser.py',42),
  ('compilation_unit -> using_directives class_declarations','compilation_unit',2,'p_compilation_unit','parser.py',43),
  ('using_directives -> using_directive','using_directives',1,'p_using_directives','parser.py',55),
  ('using_directives -> using_directives using_directive','using_directives',2,'p_using_directives','parser.py',56),
  ('using_directive -> USING identifier TERMINATOR','using_directive',3,'p_using_directive','parser.py',67),
  ('class_declarations -> class_declarations class_declaration','class_declarations',2,'p_class_declarations','parser.py',75),
  ('class_declarations -> class_declaration','class_declarations',1,'p_class_declarations','parser.py',76),
  ('class_declaration -> modifiers CLASS identifier class_body TERMINATOR','class_declaration',5,'p_class_declaration','parser.py',85),
  ('class_declaration -> CLASS identifier class_body TERMINATOR','class_declaration',4,'p_class_declaration','parser.py',86),
  ('class_declaration -> CLASS identifier class_body','class_declaration',3,'p_class_declaration','parser.py',87),
  ('class_declaration -> modifiers CLASS identifier class_body','class_declaration',4,'p_class_declaration','parser.py',88),
  ('class_body -> LBRACE class_member_declarations RBRACE','class_body',3,'p_class_body','parser.py',107),
  ('class_body -> LBRACE RBRACE','class_body',2,'p_class_body','parser.py',108),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',121),
  ('class_member_declarations -> class_member_declaration','class_member_declarations',1,'p_class_member_declarations','parser.py',131),
  ('class_member_declarations -> class_member_declarations class_member_declaration','class_member_declarations',2,'p_class_member_declarations','parser.py',132),
  ('class_member_declaration -> field_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',143),
  ('class_member_declaration -> method_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',144),
  ('class_member_declaration -> constructor_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',145),
  ('class_member_declaration -> destructor_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',146),
  ('field_declaration -> modifiers type variable_declarators TERMINATOR','field_declaration',4,'p_field_declaration','parser.py',152),
  ('field_declaration -> type variable_declarators TERMINATOR','field_declaration',3,'p_field_declaration','parser.py',153),
  ('type -> reference_type','type',1,'p_type','parser.py',184),
  ('type -> type_parameter','type',1,'p_type','parser.py',185),
  ('reference_type -> class_type','reference_type',1,'p_reference_type','parser.py',191),
  ('reference_type -> array_type','reference_type',1,'p_reference_type','parser.py',192),
  ('class_type -> proper_identifier','class_type',1,'p_class_type','parser.py',199),
  ('class_type -> OBJECT','class_type',1,'p_class_type','parser.py',200),
  ('proper_identifier -> prefix identifier','proper_identifier',2,'p_proper_identifier','parser.py',211),
  ('prefix -> identifier MEMBERACCESS','prefix',2,'p_prefix','parser.py',227),
  ('prefix -> prefix identifier MEMBERACCESS','prefix',3,'p_prefix','parser.py',228),
  ('array_type -> non_array_type LBRACKET RBRACKET','array_type',3,'p_array_type','parser.py',243),
  ('non_array_type -> type','non_array_type',1,'p_non_array_type','parser.py',249),
  ('type_parameter -> identifier','type_parameter',1,'p_type_parameter','parser.py',255),
  ('type_parameter -> predefined_type','type_parameter',1,'p_type_parameter','parser.py',256),
  ('variable_declarators -> variable_declarator','variable_declarators',1,'p_variable_declarators','parser.py',271),
  ('variable_declarators -> variable_declarators COMMA variable_declarator','variable_declarators',3,'p_variable_declarators','parser.py',272),
  ('variable_declarator -> identifier','variable_declarator',1,'p_variable_declarator','parser.py',285),
  ('variable_declarator -> identifier EQUALS variable_initializer','variable_declarator',3,'p_variable_declarator','parser.py',286),
  ('variable_initializer -> expression','variable_initializer',1,'p_variable_initializer','parser.py',299),
  ('variable_initializer_list -> variable_initializer','variable_initializer_list',1,'p_variable_initializer_list','parser.py',321),
  ('variable_initializer_list -> variable_initializer_list COMMA variable_initializer','variable_initializer_list',3,'p_variable_initializer_list','parser.py',322),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration','parser.py',330),
  ('method_header -> type member_name LPAREN fixed_parameters RPAREN','method_header',5,'p_method_header','parser.py',370),
  ('method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN','method_header',6,'p_method_header','parser.py',371),
  ('method_header -> type member_name LPAREN RPAREN','method_header',4,'p_method_header','parser.py',372),
  ('method_header -> modifiers type member_name LPAREN RPAREN','method_header',5,'p_method_header','parser.py',373),
  ('method_header -> VOID member_name LPAREN fixed_parameters RPAREN','method_header',5,'p_method_header','parser.py',374),
  ('method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN','method_header',6,'p_method_header','parser.py',375),
  ('method_header -> VOID member_name LPAREN RPAREN','method_header',4,'p_method_header','parser.py',376),
  ('method_header -> modifiers VOID member_name LPAREN RPAREN','method_header',5,'p_method_header','parser.py',377),
  ('modifiers -> modifier','modifiers',1,'p_modifiers','parser.py',454),
  ('modifiers -> modifiers modifier','modifiers',2,'p_modifiers','parser.py',455),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','parser.py',466),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','parser.py',467),
  ('member_name -> identifier','member_name',1,'p_member_name','parser.py',480),
  ('method_body -> block','method_body',1,'p_method_body','parser.py',486),
  ('method_body -> TERMINATOR','method_body',1,'p_method_body','parser.py',487),
  ('fixed_parameters -> fixed_parameter','fixed_parameters',1,'p_fixed_parameters','parser.py',496),
  ('fixed_parameters -> fixed_parameters COMMA fixed_parameter','fixed_parameters',3,'p_fixed_parameters','parser.py',497),
  ('fixed_parameter -> type identifier default_argument','fixed_parameter',3,'p_fixed_parameter','parser.py',507),
  ('fixed_parameter -> type identifier','fixed_parameter',2,'p_fixed_parameter','parser.py',508),
  ('default_argument -> EQUALS expression','default_argument',2,'p_default_argument','parser.py',523),
  ('constructor_declaration -> constructor_declarator constructor_body','constructor_declaration',2,'p_constructor_declaration','parser.py',528),
  ('constructor_declarator -> identifier LPAREN fixed_parameters RPAREN','constructor_declarator',4,'p_constructor_declarator','parser.py',534),
  ('constructor_declarator -> identifier LPAREN RPAREN','constructor_declarator',3,'p_constructor_declarator','parser.py',535),
  ('constructor_body -> block','constructor_body',1,'p_constructor_body','parser.py',546),
  ('constructor_body -> TERMINATOR','constructor_body',1,'p_constructor_body','parser.py',547),
  ('destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body','destructor_declaration',5,'p_destructor_declaration','parser.py',556),
  ('destructor_body -> block','destructor_body',1,'p_destructor_body','parser.py',564),
  ('destructor_body -> TERMINATOR','destructor_body',1,'p_destructor_body','parser.py',565),
  ('block -> LBRACE RBRACE','block',2,'p_block','parser.py',573),
  ('block -> LBRACE scope_marker statement_list RBRACE','block',4,'p_block','parser.py',574),
  ('scope_marker -> <empty>','scope_marker',0,'p_scope_marker','parser.py',592),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',611),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',612),
  ('statement -> local_variable_declaration TERMINATOR','statement',2,'p_statement','parser.py',625),
  ('statement -> embedded_statement','statement',1,'p_statement','parser.py',626),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_statement','parser.py',635),
  ('embedded_statement -> TERMINATOR','embedded_statement',1,'p_embedded_statement','parser.py',636),
  ('embedded_statement -> statement_expression TERMINATOR','embedded_statement',2,'p_embedded_statement','parser.py',637),
  ('embedded_statement -> if_statement','embedded_statement',1,'p_embedded_statement','parser.py',638),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_statement','parser.py',639),
  ('embedded_statement -> print_statement','embedded_statement',1,'p_embedded_statement','parser.py',640),
  ('embedded_statement -> break_statement','embedded_statement',1,'p_embedded_statement','parser.py',641),
  ('embedded_statement -> return_statement','embedded_statement',1,'p_embedded_statement','parser.py',642),
  ('print_statement -> PRINT LPAREN expression RPAREN TERMINATOR','print_statement',5,'p_print_statement','parser.py',655),
  ('break_statement -> BREAK TERMINATOR','break_statement',2,'p_break_statement','parser.py',669),
  ('continue_statement -> CONTINUE TERMINATOR','continue_statement',2,'p_continue_statement','parser.py',710),
  ('return_statement -> RETURN TERMINATOR','return_statement',2,'p_return_statement','parser.py',716),
  ('return_statement -> RETURN expression TERMINATOR','return_statement',3,'p_return_statement','parser.py',717),
  ('literal -> INTCONST','literal',1,'p_literal','parser.py',734),
  ('literal -> STRCONST','literal',1,'p_literal','parser.py',735),
  ('literal -> CHARCONST','literal',1,'p_literal','parser.py',736),
  ('local_variable_declaration -> type local_variable_declarators','local_variable_declaration',2,'p_local_variable_declaration','parser.py',743),
  ('local_variable_declarators -> local_variable_declarator','local_variable_declarators',1,'p_local_variable_declarators','parser.py',771),
  ('local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator','local_variable_declarators',3,'p_local_variable_declarators','parser.py',772),
  ('local_variable_declarator -> identifier','local_variable_declarator',1,'p_local_variable_declarator','parser.py',782),
  ('local_variable_declarator -> identifier EQUALS local_variable_initializer','local_variable_declarator',3,'p_local_variable_declarator','parser.py',783),
  ('local_variable_initializer -> expression','local_variable_initializer',1,'p_local_variable_initializer','parser.py',799),
  ('statement_expression -> object_creation_expression','statement_expression',1,'p_statement_expression','parser.py',805),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','parser.py',806),
  ('statement_expression -> invocation_expression','statement_expression',1,'p_statement_expression','parser.py',807),
  ('statement_expression -> post_increment_expression','statement_expression',1,'p_statement_expression','parser.py',808),
  ('statement_expression -> post_decrement_expression','statement_expression',1,'p_statement_expression','parser.py',809),
  ('invocation_expression -> primary_expression LPAREN argument_list RPAREN','invocation_expression',4,'p_invocation_expression','parser.py',815),
  ('invocation_expression -> primary_expression LPAREN RPAREN','invocation_expression',3,'p_invocation_expression','parser.py',816),
  ('invocation_expression -> identifier LPAREN RPAREN','invocation_expression',3,'p_invocation_expression','parser.py',817),
  ('invocation_expression -> identifier LPAREN argument_list RPAREN','invocation_expression',4,'p_invocation_expression','parser.py',818),
  ('invocation_expression -> proper_identifier LPAREN argument_list RPAREN','invocation_expression',4,'p_invocation_expression','parser.py',819),
  ('invocation_expression -> proper_identifier LPAREN RPAREN','invocation_expression',3,'p_invocation_expression','parser.py',820),
  ('if_statement -> if LPAREN expression RPAREN embedded_statement','if_statement',5,'p_if_statement','parser.py',892),
  ('if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement','if_statement',7,'p_if_statement','parser.py',893),
  ('if -> IF','if',1,'p_if','parser.py',926),
  ('else -> ELSE','else',1,'p_else','parser.py',937),
  ('iteration_statement -> while LPAREN expression RPAREN embedded_statement','iteration_statement',5,'p_iteration_statement','parser.py',944),
  ('while -> WHILE','while',1,'p_while','parser.py',963),
  ('expression -> non_assignment_expression','expression',1,'p_expression','parser.py',973),
  ('expression -> assignment','expression',1,'p_expression','parser.py',974),
  ('assignment -> unary_expression assignment_operator expression','assignment',3,'p_assignment','parser.py',980),
  ('assignment -> identifier assignment_operator expression','assignment',3,'p_assignment','parser.py',981),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',1014),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',1022),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',1023),
  ('unary_expression -> PLUS identifier','unary_expression',2,'p_unary_expression','parser.py',1024),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',1025),
  ('unary_expression -> MINUS identifier','unary_expression',2,'p_unary_expression','parser.py',1026),
  ('unary_expression -> LNOT unary_expression','unary_expression',2,'p_unary_expression','parser.py',1027),
  ('unary_expression -> LNOT identifier','unary_expression',2,'p_unary_expression','parser.py',1028),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','parser.py',1029),
  ('unary_expression -> TILDE identifier','unary_expression',2,'p_unary_expression','parser.py',1030),
  ('primary_expression -> primary_no_array_creation_expression','primary_expression',1,'p_primary_expression','parser.py',1050),
  ('primary_expression -> array_creation_expression','primary_expression',1,'p_primary_expression','parser.py',1051),
  ('primary_no_array_creation_expression -> literal','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1057),
  ('primary_no_array_creation_expression -> parenthesized_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1058),
  ('primary_no_array_creation_expression -> member_access','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1059),
  ('primary_no_array_creation_expression -> element_access','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1060),
  ('primary_no_array_creation_expression -> post_increment_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1061),
  ('primary_no_array_creation_expression -> invocation_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1062),
  ('primary_no_array_creation_expression -> post_decrement_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1063),
  ('primary_no_array_creation_expression -> object_creation_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1064),
  ('primary_no_array_creation_expression -> typeof_expression','primary_no_array_creation_expression',1,'p_primary_no_array_creation_expression','parser.py',1065),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',1077),
  ('member_access -> primary_expression MEMBERACCESS identifier','member_access',3,'p_member_access','parser.py',1083),
  ('member_access -> iMEMAi','member_access',1,'p_member_access','parser.py',1084),
  ('member_access -> predefined_type MEMBERACCESS identifier','member_access',3,'p_member_access','parser.py',1085),
  ('predefined_type -> INT','predefined_type',1,'p_predefined_type','parser.py',1104),
  ('predefined_type -> CHAR','predefined_type',1,'p_predefined_type','parser.py',1105),
  ('element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET','element_access',4,'p_element_access','parser.py',1112),
  ('element_access -> identifier LBRACKET expression_list RBRACKET','element_access',4,'p_element_access','parser.py',1113),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',1157),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',1158),
  ('post_increment_expression -> primary_expression INCREMENT','post_increment_expression',2,'p_post_increment_expression','parser.py',1166),
  ('post_increment_expression -> identifier INCREMENT','post_increment_expression',2,'p_post_increment_expression','parser.py',1167),
  ('post_decrement_expression -> primary_expression DECREMENT','post_decrement_expression',2,'p_post_decrement_expression','parser.py',1177),
  ('post_decrement_expression -> identifier DECREMENT','post_decrement_expression',2,'p_post_decrement_expression','parser.py',1178),
  ('object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer','object_creation_expression',6,'p_object_creation_expression','parser.py',1189),
  ('object_creation_expression -> NEW type LPAREN argument_list RPAREN','object_creation_expression',5,'p_object_creation_expression','parser.py',1190),
  ('object_creation_expression -> NEW type LPAREN RPAREN','object_creation_expression',4,'p_object_creation_expression','parser.py',1191),
  ('object_creation_expression -> NEW type object_or_collection_initializer','object_creation_expression',3,'p_object_creation_expression','parser.py',1192),
  ('argument_list -> argument','argument_list',1,'p_argument_list','parser.py',1208),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list','parser.py',1209),
  ('argument -> expression','argument',1,'p_argument','parser.py',1221),
  ('object_or_collection_initializer -> object_initializer','object_or_collection_initializer',1,'p_object_or_collection_initializer','parser.py',1242),
  ('object_or_collection_initializer -> collection_initializer','object_or_collection_initializer',1,'p_object_or_collection_initializer','parser.py',1243),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','parser.py',1248),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','parser.py',1249),
  ('object_initializer -> LBRACE member_initializer_list COMMA RBRACE','object_initializer',4,'p_object_initializer','parser.py',1250),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','parser.py',1260),
  ('member_initializer_list -> member_initializer_list COMMA member_initializer','member_initializer_list',3,'p_member_initializer_list','parser.py',1261),
  ('member_initializer -> identifier EQUALS initializer_value','member_initializer',3,'p_member_initializer','parser.py',1269),
  ('initializer_value -> expression','initializer_value',1,'p_initializer_value','parser.py',1274),
  ('initializer_value -> object_or_collection_initializer','initializer_value',1,'p_initializer_value','parser.py',1275),
  ('collection_initializer -> LBRACE element_initializer_list RBRACE','collection_initializer',3,'p_collection_initializer','parser.py',1280),
  ('collection_initializer -> LBRACE element_initializer_list COMMA RBRACE','collection_initializer',4,'p_collection_initializer','parser.py',1281),
  ('element_initializer_list -> element_initializer','element_initializer_list',1,'p_element_initializer_list','parser.py',1289),
  ('element_initializer_list -> element_initializer_list COMMA element_initializer','element_initializer_list',3,'p_element_initializer_list','parser.py',1290),
  ('element_initializer -> non_assignment_expression','element_initializer',1,'p_element_initializer','parser.py',1298),
  ('element_initializer -> LBRACE expression_list RBRACE','element_initializer',3,'p_element_initializer','parser.py',1299),
  ('array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET','array_creation_expression',5,'p_array_creation_expression','parser.py',1308),
  ('typeof_expression -> TYPEOF LPAREN type RPAREN','typeof_expression',4,'p_typeof_expression','parser.py',1327),
  ('typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN','typeof_expression',4,'p_typeof_expression','parser.py',1328),
  ('typeof_expression -> TYPEOF LPAREN VOID RPAREN','typeof_expression',4,'p_typeof_expression','parser.py',1329),
  ('unbound_type_name -> iMEMAi','unbound_type_name',1,'p_unbound_type_name','parser.py',1335),
  ('unbound_type_name -> unbound_type_name MEMBERACCESS identifier','unbound_type_name',3,'p_unbound_type_name','parser.py',1336),
  ('iMEMAi -> identifier MEMBERACCESS identifier','iMEMAi',3,'p_iMEMAi','parser.py',1348),
  ('non_assignment_expression -> conditional_expression','non_assignment_expression',1,'p_non_assignment_expression','parser.py',1359),
  ('conditional_expression -> conditional_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',1366),
  ('conditional_or_expression -> conditional_and_expression','conditional_or_expression',1,'p_conditional_or_expression','parser.py',1372),
  ('conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression','conditional_or_expression',3,'p_conditional_or_expression','parser.py',1373),
  ('conditional_and_expression -> inclusive_or_expression','conditional_and_expression',1,'p_conditional_and_expression','parser.py',1404),
  ('conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression','conditional_and_expression',3,'p_conditional_and_expression','parser.py',1405),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',1438),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',1439),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',1470),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',1471),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',1502),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','parser.py',1503),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',1535),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',1536),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression','parser.py',1537),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',1593),
  ('relational_expression -> relational_expression LT shift_expression','relational_expression',3,'p_relational_expression','parser.py',1594),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression','parser.py',1595),
  ('relational_expression -> relational_expression LEQ shift_expression','relational_expression',3,'p_relational_expression','parser.py',1596),
  ('relational_expression -> relational_expression GEQ shift_expression','relational_expression',3,'p_relational_expression','parser.py',1597),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',1698),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',1699),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',1700),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',1733),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',1734),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',1735),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',1793),
  ('multiplicative_expression -> identifier','multiplicative_expression',1,'p_multiplicative_expression','parser.py',1794),
  ('multiplicative_expression -> multiplicative_expression TIMES unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1795),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1796),
  ('multiplicative_expression -> multiplicative_expression MOD unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1797),
  ('multiplicative_expression -> multiplicative_expression TIMES identifier','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1798),
  ('multiplicative_expression -> multiplicative_expression DIVIDE identifier','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1799),
  ('multiplicative_expression -> multiplicative_expression MOD identifier','multiplicative_expression',3,'p_multiplicative_expression','parser.py',1800),
]
