Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    PLUSEQUAL
    COMMENTSLINE
    MINUSEQUAL
    NEWLINE
    COMMENTDELIM

Grammar

Rule 0     S' -> start
Rule 1     start -> compilation_unit
Rule 2     compilation_unit -> class_declarations
Rule 3     compilation_unit -> using_directives class_declarations
Rule 4     using_directives -> using_directive
Rule 5     using_directives -> using_directives using_directive
Rule 6     using_directive -> USING identifier TERMINATOR
Rule 7     class_declarations -> class_declarations class_declaration
Rule 8     class_declarations -> class_declaration
Rule 9     class_declaration -> modifiers CLASS identifier class_body TERMINATOR
Rule 10    class_declaration -> CLASS identifier class_body TERMINATOR
Rule 11    class_declaration -> CLASS identifier class_body
Rule 12    class_declaration -> modifiers CLASS identifier class_body
Rule 13    class_body -> LBRACE class_member_declarations RBRACE
Rule 14    class_body -> LBRACE RBRACE
Rule 15    identifier -> IDENTIFIER
Rule 16    class_member_declarations -> class_member_declaration
Rule 17    class_member_declarations -> class_member_declarations class_member_declaration
Rule 18    class_member_declaration -> field_declaration
Rule 19    class_member_declaration -> method_declaration
Rule 20    class_member_declaration -> constructor_declaration
Rule 21    class_member_declaration -> destructor_declaration
Rule 22    field_declaration -> modifiers type variable_declarators TERMINATOR
Rule 23    field_declaration -> type variable_declarators TERMINATOR
Rule 24    type -> reference_type
Rule 25    type -> type_parameter
Rule 26    reference_type -> class_type
Rule 27    reference_type -> array_type
Rule 28    class_type -> proper_identifier
Rule 29    class_type -> OBJECT
Rule 30    proper_identifier -> prefix identifier
Rule 31    prefix -> identifier MEMBERACCESS
Rule 32    prefix -> prefix identifier MEMBERACCESS
Rule 33    array_type -> non_array_type LBRACKET RBRACKET
Rule 34    non_array_type -> type
Rule 35    type_parameter -> identifier
Rule 36    type_parameter -> predefined_type
Rule 37    variable_declarators -> variable_declarator
Rule 38    variable_declarators -> variable_declarators COMMA variable_declarator
Rule 39    variable_declarator -> identifier
Rule 40    variable_declarator -> identifier EQUALS variable_initializer
Rule 41    variable_initializer -> expression
Rule 42    variable_initializer_list -> variable_initializer
Rule 43    variable_initializer_list -> variable_initializer_list COMMA variable_initializer
Rule 44    method_declaration -> method_header method_body
Rule 45    method_header -> type member_name LPAREN fixed_parameters RPAREN
Rule 46    method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN
Rule 47    method_header -> type member_name LPAREN RPAREN
Rule 48    method_header -> modifiers type member_name LPAREN RPAREN
Rule 49    method_header -> VOID member_name LPAREN fixed_parameters RPAREN
Rule 50    method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN
Rule 51    method_header -> VOID member_name LPAREN RPAREN
Rule 52    method_header -> modifiers VOID member_name LPAREN RPAREN
Rule 53    modifiers -> modifier
Rule 54    modifiers -> modifiers modifier
Rule 55    modifier -> PUBLIC
Rule 56    modifier -> PRIVATE
Rule 57    member_name -> identifier
Rule 58    method_body -> block
Rule 59    method_body -> TERMINATOR
Rule 60    fixed_parameters -> fixed_parameter
Rule 61    fixed_parameters -> fixed_parameters COMMA fixed_parameter
Rule 62    fixed_parameter -> type identifier default_argument
Rule 63    fixed_parameter -> type identifier
Rule 64    default_argument -> EQUALS expression
Rule 65    constructor_declaration -> constructor_declarator constructor_body
Rule 66    constructor_declarator -> identifier LPAREN fixed_parameters RPAREN
Rule 67    constructor_declarator -> identifier LPAREN RPAREN
Rule 68    constructor_body -> block
Rule 69    constructor_body -> TERMINATOR
Rule 70    destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body
Rule 71    destructor_body -> block
Rule 72    destructor_body -> TERMINATOR
Rule 73    block -> LBRACE RBRACE
Rule 74    block -> LBRACE scope_marker statement_list RBRACE
Rule 75    scope_marker -> <empty>
Rule 76    statement_list -> statement
Rule 77    statement_list -> statement_list statement
Rule 78    statement -> local_variable_declaration TERMINATOR
Rule 79    statement -> embedded_statement
Rule 80    embedded_statement -> block
Rule 81    embedded_statement -> TERMINATOR
Rule 82    embedded_statement -> statement_expression TERMINATOR
Rule 83    embedded_statement -> if_statement
Rule 84    embedded_statement -> iteration_statement
Rule 85    embedded_statement -> print_statement
Rule 86    embedded_statement -> break_statement
Rule 87    embedded_statement -> return_statement
Rule 88    print_statement -> PRINT LPAREN expression RPAREN TERMINATOR
Rule 89    break_statement -> BREAK TERMINATOR
Rule 90    continue_statement -> CONTINUE TERMINATOR
Rule 91    return_statement -> RETURN TERMINATOR
Rule 92    return_statement -> RETURN expression TERMINATOR
Rule 93    literal -> INTCONST
Rule 94    literal -> STRCONST
Rule 95    literal -> CHARCONST
Rule 96    local_variable_declaration -> type local_variable_declarators
Rule 97    local_variable_declarators -> local_variable_declarator
Rule 98    local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator
Rule 99    local_variable_declarator -> identifier
Rule 100   local_variable_declarator -> identifier EQUALS local_variable_initializer
Rule 101   local_variable_initializer -> expression
Rule 102   statement_expression -> object_creation_expression
Rule 103   statement_expression -> assignment
Rule 104   statement_expression -> invocation_expression
Rule 105   statement_expression -> post_increment_expression
Rule 106   statement_expression -> post_decrement_expression
Rule 107   invocation_expression -> primary_expression LPAREN argument_list RPAREN
Rule 108   invocation_expression -> primary_expression LPAREN RPAREN
Rule 109   invocation_expression -> identifier LPAREN RPAREN
Rule 110   invocation_expression -> identifier LPAREN argument_list RPAREN
Rule 111   invocation_expression -> proper_identifier LPAREN argument_list RPAREN
Rule 112   invocation_expression -> proper_identifier LPAREN RPAREN
Rule 113   if_statement -> if LPAREN expression RPAREN embedded_statement
Rule 114   if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement
Rule 115   if -> IF
Rule 116   else -> ELSE
Rule 117   iteration_statement -> while LPAREN expression RPAREN embedded_statement
Rule 118   while -> WHILE
Rule 119   expression -> non_assignment_expression
Rule 120   expression -> assignment
Rule 121   assignment -> unary_expression assignment_operator expression
Rule 122   assignment -> identifier assignment_operator expression
Rule 123   assignment_operator -> EQUALS
Rule 124   unary_expression -> primary_expression
Rule 125   unary_expression -> PLUS unary_expression
Rule 126   unary_expression -> PLUS identifier
Rule 127   unary_expression -> MINUS unary_expression
Rule 128   unary_expression -> MINUS identifier
Rule 129   unary_expression -> LNOT unary_expression
Rule 130   unary_expression -> LNOT identifier
Rule 131   unary_expression -> TILDE unary_expression
Rule 132   unary_expression -> TILDE identifier
Rule 133   primary_expression -> primary_no_array_creation_expression
Rule 134   primary_expression -> array_creation_expression
Rule 135   primary_no_array_creation_expression -> literal
Rule 136   primary_no_array_creation_expression -> parenthesized_expression
Rule 137   primary_no_array_creation_expression -> member_access
Rule 138   primary_no_array_creation_expression -> element_access
Rule 139   primary_no_array_creation_expression -> post_increment_expression
Rule 140   primary_no_array_creation_expression -> invocation_expression
Rule 141   primary_no_array_creation_expression -> post_decrement_expression
Rule 142   primary_no_array_creation_expression -> object_creation_expression
Rule 143   primary_no_array_creation_expression -> typeof_expression
Rule 144   parenthesized_expression -> LPAREN expression RPAREN
Rule 145   member_access -> primary_expression MEMBERACCESS identifier
Rule 146   member_access -> iMEMAi
Rule 147   member_access -> predefined_type MEMBERACCESS identifier
Rule 148   predefined_type -> INT
Rule 149   predefined_type -> CHAR
Rule 150   element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET
Rule 151   element_access -> identifier LBRACKET expression_list RBRACKET
Rule 152   expression_list -> expression
Rule 153   expression_list -> expression_list COMMA expression
Rule 154   post_increment_expression -> primary_expression INCREMENT
Rule 155   post_increment_expression -> identifier INCREMENT
Rule 156   post_decrement_expression -> primary_expression DECREMENT
Rule 157   post_decrement_expression -> identifier DECREMENT
Rule 158   object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer
Rule 159   object_creation_expression -> NEW type LPAREN argument_list RPAREN
Rule 160   object_creation_expression -> NEW type LPAREN RPAREN
Rule 161   object_creation_expression -> NEW type object_or_collection_initializer
Rule 162   argument_list -> argument
Rule 163   argument_list -> argument_list COMMA argument
Rule 164   argument -> expression
Rule 165   object_or_collection_initializer -> object_initializer
Rule 166   object_or_collection_initializer -> collection_initializer
Rule 167   object_initializer -> LBRACE member_initializer_list RBRACE
Rule 168   object_initializer -> LBRACE RBRACE
Rule 169   object_initializer -> LBRACE member_initializer_list COMMA RBRACE
Rule 170   member_initializer_list -> member_initializer
Rule 171   member_initializer_list -> member_initializer_list COMMA member_initializer
Rule 172   member_initializer -> identifier EQUALS initializer_value
Rule 173   initializer_value -> expression
Rule 174   initializer_value -> object_or_collection_initializer
Rule 175   collection_initializer -> LBRACE element_initializer_list RBRACE
Rule 176   collection_initializer -> LBRACE element_initializer_list COMMA RBRACE
Rule 177   element_initializer_list -> element_initializer
Rule 178   element_initializer_list -> element_initializer_list COMMA element_initializer
Rule 179   element_initializer -> non_assignment_expression
Rule 180   element_initializer -> LBRACE expression_list RBRACE
Rule 181   array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET
Rule 182   typeof_expression -> TYPEOF LPAREN type RPAREN
Rule 183   typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN
Rule 184   typeof_expression -> TYPEOF LPAREN VOID RPAREN
Rule 185   unbound_type_name -> iMEMAi
Rule 186   unbound_type_name -> unbound_type_name MEMBERACCESS identifier
Rule 187   iMEMAi -> identifier MEMBERACCESS identifier
Rule 188   non_assignment_expression -> conditional_expression
Rule 189   conditional_expression -> conditional_or_expression
Rule 190   conditional_or_expression -> conditional_and_expression
Rule 191   conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression
Rule 192   conditional_and_expression -> inclusive_or_expression
Rule 193   conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression
Rule 194   inclusive_or_expression -> exclusive_or_expression
Rule 195   inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression
Rule 196   exclusive_or_expression -> and_expression
Rule 197   exclusive_or_expression -> exclusive_or_expression XOR and_expression
Rule 198   and_expression -> equality_expression
Rule 199   and_expression -> and_expression AND equality_expression
Rule 200   equality_expression -> relational_expression
Rule 201   equality_expression -> equality_expression EQ relational_expression
Rule 202   equality_expression -> equality_expression NE relational_expression
Rule 203   relational_expression -> shift_expression
Rule 204   relational_expression -> relational_expression LT shift_expression
Rule 205   relational_expression -> relational_expression GT shift_expression
Rule 206   relational_expression -> relational_expression LEQ shift_expression
Rule 207   relational_expression -> relational_expression GEQ shift_expression
Rule 208   shift_expression -> additive_expression
Rule 209   shift_expression -> shift_expression LSHIFT additive_expression
Rule 210   shift_expression -> shift_expression RSHIFT additive_expression
Rule 211   additive_expression -> multiplicative_expression
Rule 212   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 213   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 214   multiplicative_expression -> unary_expression
Rule 215   multiplicative_expression -> identifier
Rule 216   multiplicative_expression -> multiplicative_expression TIMES unary_expression
Rule 217   multiplicative_expression -> multiplicative_expression DIVIDE unary_expression
Rule 218   multiplicative_expression -> multiplicative_expression MOD unary_expression
Rule 219   multiplicative_expression -> multiplicative_expression TIMES identifier
Rule 220   multiplicative_expression -> multiplicative_expression DIVIDE identifier
Rule 221   multiplicative_expression -> multiplicative_expression MOD identifier

Terminals, with rules where they appear

AND                  : 199
BREAK                : 89
CHAR                 : 149
CHARCONST            : 95
CLASS                : 9 10 11 12
COLON                : 
COMMA                : 38 43 61 98 153 163 169 171 176 178
COMMENTDELIM         : 
COMMENTSLINE         : 
CONAND               : 193
CONOR                : 191
CONTINUE             : 90
DECREMENT            : 156 157
DIVIDE               : 217 220
ELSE                 : 116
EQ                   : 201
EQUALS               : 40 64 100 123 172
GEQ                  : 207
GT                   : 205
IDENTIFIER           : 15
IF                   : 115
INCREMENT            : 154 155
INT                  : 148
INTCONST             : 93
LBRACE               : 13 14 73 74 167 168 169 175 176 180
LBRACKET             : 33 150 151 181
LEQ                  : 206
LNOT                 : 129 130
LPAREN               : 45 46 47 48 49 50 51 52 66 67 70 88 107 108 109 110 111 112 113 114 117 144 158 159 160 182 183 184
LSHIFT               : 209
LT                   : 204
MEMBERACCESS         : 31 32 145 147 186 187
MINUS                : 127 128 213
MINUSEQUAL           : 
MOD                  : 218 221
NE                   : 202
NEW                  : 158 159 160 161 181
NEWLINE              : 
OBJECT               : 29
OR                   : 195
PLUS                 : 125 126 212
PLUSEQUAL            : 
PRINT                : 88
PRIVATE              : 56
PUBLIC               : 55
RBRACE               : 13 14 73 74 167 168 169 175 176 180
RBRACKET             : 33 150 151 181
RETURN               : 91 92
RPAREN               : 45 46 47 48 49 50 51 52 66 67 70 88 107 108 109 110 111 112 113 114 117 144 158 159 160 182 183 184
RSHIFT               : 210
STRCONST             : 94
TERMINATOR           : 6 9 10 22 23 59 69 72 78 81 82 88 89 90 91 92
TILDE                : 70 131 132
TIMES                : 216 219
TYPEOF               : 182 183 184
USING                : 6
VOID                 : 49 50 51 52 184
WHILE                : 118
XOR                  : 197
error                : 

Nonterminals, with rules where they appear

additive_expression  : 208 209 210 212 213
and_expression       : 196 197 199
argument             : 162 163
argument_list        : 107 110 111 158 159 163
array_creation_expression : 134
array_type           : 27
assignment           : 103 120
assignment_operator  : 121 122
block                : 58 68 71 80
break_statement      : 86
class_body           : 9 10 11 12
class_declaration    : 7 8
class_declarations   : 2 3 7
class_member_declaration : 16 17
class_member_declarations : 13 17
class_type           : 26
collection_initializer : 166
compilation_unit     : 1
conditional_and_expression : 190 191 193
conditional_expression : 188
conditional_or_expression : 189 191
constructor_body     : 65
constructor_declaration : 20
constructor_declarator : 65
continue_statement   : 
default_argument     : 62
destructor_body      : 70
destructor_declaration : 21
element_access       : 138
element_initializer  : 177 178
element_initializer_list : 175 176 178
else                 : 114
embedded_statement   : 79 113 114 114 117
equality_expression  : 198 199 201 202
exclusive_or_expression : 194 195 197
expression           : 41 64 88 92 101 113 114 117 121 122 144 152 153 164 173 181
expression_list      : 150 151 153 180
field_declaration    : 18
fixed_parameter      : 60 61
fixed_parameters     : 45 46 49 50 61 66
iMEMAi               : 146 185
identifier           : 6 9 10 11 12 30 31 32 35 39 40 57 62 63 66 67 70 99 100 109 110 122 126 128 130 132 145 147 151 155 157 172 186 187 187 215 219 220 221
if                   : 113 114
if_statement         : 83
inclusive_or_expression : 192 193 195
initializer_value    : 172
invocation_expression : 104 140
iteration_statement  : 84
literal              : 135
local_variable_declaration : 78
local_variable_declarator : 97 98
local_variable_declarators : 96 98
local_variable_initializer : 100
member_access        : 137
member_initializer   : 170 171
member_initializer_list : 167 169 171
member_name          : 45 46 47 48 49 50 51 52
method_body          : 44
method_declaration   : 19
method_header        : 44
modifier             : 53 54
modifiers            : 9 12 22 46 48 50 52 54
multiplicative_expression : 211 212 213 216 217 218 219 220 221
non_array_type       : 33 181
non_assignment_expression : 119 179
object_creation_expression : 102 142
object_initializer   : 165
object_or_collection_initializer : 158 161 174
parenthesized_expression : 136
post_decrement_expression : 106 141
post_increment_expression : 105 139
predefined_type      : 36 147
prefix               : 30 32
primary_expression   : 107 108 124 145 154 156
primary_no_array_creation_expression : 133 150
print_statement      : 85
proper_identifier    : 28 111 112
reference_type       : 24
relational_expression : 200 201 202 204 205 206 207
return_statement     : 87
scope_marker         : 74
shift_expression     : 203 204 205 206 207 209 210
start                : 0
statement            : 76 77
statement_expression : 82
statement_list       : 74 77
type                 : 22 23 34 45 46 47 48 62 63 96 158 159 160 161 182
type_parameter       : 25
typeof_expression    : 143
unary_expression     : 121 125 127 129 131 214 216 217 218
unbound_type_name    : 183 186
using_directive      : 4 5
using_directives     : 3 5
variable_declarator  : 37 38
variable_declarators : 22 23 38
variable_initializer : 40 42 43
variable_initializer_list : 43
while                : 117

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . compilation_unit
    (2) compilation_unit -> . class_declarations
    (3) compilation_unit -> . using_directives class_declarations
    (7) class_declarations -> . class_declarations class_declaration
    (8) class_declarations -> . class_declaration
    (4) using_directives -> . using_directive
    (5) using_directives -> . using_directives using_directive
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (6) using_directive -> . USING identifier TERMINATOR
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE

    CLASS           shift and go to state 10
    USING           shift and go to state 7
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4

    compilation_unit               shift and go to state 5
    class_declaration              shift and go to state 8
    modifier                       shift and go to state 2
    using_directive                shift and go to state 6
    modifiers                      shift and go to state 9
    using_directives               shift and go to state 1
    start                          shift and go to state 11
    class_declarations             shift and go to state 3

state 1

    (3) compilation_unit -> using_directives . class_declarations
    (5) using_directives -> using_directives . using_directive
    (7) class_declarations -> . class_declarations class_declaration
    (8) class_declarations -> . class_declaration
    (6) using_directive -> . USING identifier TERMINATOR
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE

    USING           shift and go to state 7
    CLASS           shift and go to state 10
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4

    class_declaration              shift and go to state 8
    modifier                       shift and go to state 2
    using_directive                shift and go to state 14
    modifiers                      shift and go to state 9
    class_declarations             shift and go to state 13

state 2

    (53) modifiers -> modifier .

    VOID            reduce using rule 53 (modifiers -> modifier .)
    PUBLIC          reduce using rule 53 (modifiers -> modifier .)
    PRIVATE         reduce using rule 53 (modifiers -> modifier .)
    OBJECT          reduce using rule 53 (modifiers -> modifier .)
    IDENTIFIER      reduce using rule 53 (modifiers -> modifier .)
    INT             reduce using rule 53 (modifiers -> modifier .)
    CHAR            reduce using rule 53 (modifiers -> modifier .)
    CLASS           reduce using rule 53 (modifiers -> modifier .)


state 3

    (2) compilation_unit -> class_declarations .
    (7) class_declarations -> class_declarations . class_declaration
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE

    $end            reduce using rule 2 (compilation_unit -> class_declarations .)
    CLASS           shift and go to state 10
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4

    class_declaration              shift and go to state 15
    modifier                       shift and go to state 2
    modifiers                      shift and go to state 9

state 4

    (56) modifier -> PRIVATE .

    VOID            reduce using rule 56 (modifier -> PRIVATE .)
    PUBLIC          reduce using rule 56 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 56 (modifier -> PRIVATE .)
    OBJECT          reduce using rule 56 (modifier -> PRIVATE .)
    IDENTIFIER      reduce using rule 56 (modifier -> PRIVATE .)
    INT             reduce using rule 56 (modifier -> PRIVATE .)
    CHAR            reduce using rule 56 (modifier -> PRIVATE .)
    CLASS           reduce using rule 56 (modifier -> PRIVATE .)


state 5

    (1) start -> compilation_unit .

    $end            reduce using rule 1 (start -> compilation_unit .)


state 6

    (4) using_directives -> using_directive .

    USING           reduce using rule 4 (using_directives -> using_directive .)
    CLASS           reduce using rule 4 (using_directives -> using_directive .)
    PUBLIC          reduce using rule 4 (using_directives -> using_directive .)
    PRIVATE         reduce using rule 4 (using_directives -> using_directive .)


state 7

    (6) using_directive -> USING . identifier TERMINATOR
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 17

state 8

    (8) class_declarations -> class_declaration .

    CLASS           reduce using rule 8 (class_declarations -> class_declaration .)
    PUBLIC          reduce using rule 8 (class_declarations -> class_declaration .)
    PRIVATE         reduce using rule 8 (class_declarations -> class_declaration .)
    $end            reduce using rule 8 (class_declarations -> class_declaration .)


state 9

    (9) class_declaration -> modifiers . CLASS identifier class_body TERMINATOR
    (12) class_declaration -> modifiers . CLASS identifier class_body
    (54) modifiers -> modifiers . modifier
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE

    CLASS           shift and go to state 19
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4

    modifier                       shift and go to state 18

state 10

    (10) class_declaration -> CLASS . identifier class_body TERMINATOR
    (11) class_declaration -> CLASS . identifier class_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 20

state 11

    (0) S' -> start .



state 12

    (55) modifier -> PUBLIC .

    VOID            reduce using rule 55 (modifier -> PUBLIC .)
    PUBLIC          reduce using rule 55 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 55 (modifier -> PUBLIC .)
    OBJECT          reduce using rule 55 (modifier -> PUBLIC .)
    IDENTIFIER      reduce using rule 55 (modifier -> PUBLIC .)
    INT             reduce using rule 55 (modifier -> PUBLIC .)
    CHAR            reduce using rule 55 (modifier -> PUBLIC .)
    CLASS           reduce using rule 55 (modifier -> PUBLIC .)


state 13

    (3) compilation_unit -> using_directives class_declarations .
    (7) class_declarations -> class_declarations . class_declaration
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE

    $end            reduce using rule 3 (compilation_unit -> using_directives class_declarations .)
    CLASS           shift and go to state 10
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4

    class_declaration              shift and go to state 15
    modifier                       shift and go to state 2
    modifiers                      shift and go to state 9

state 14

    (5) using_directives -> using_directives using_directive .

    USING           reduce using rule 5 (using_directives -> using_directives using_directive .)
    CLASS           reduce using rule 5 (using_directives -> using_directives using_directive .)
    PUBLIC          reduce using rule 5 (using_directives -> using_directives using_directive .)
    PRIVATE         reduce using rule 5 (using_directives -> using_directives using_directive .)


state 15

    (7) class_declarations -> class_declarations class_declaration .

    CLASS           reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    PUBLIC          reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    PRIVATE         reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    $end            reduce using rule 7 (class_declarations -> class_declarations class_declaration .)


state 16

    (15) identifier -> IDENTIFIER .

    LBRACKET        reduce using rule 15 (identifier -> IDENTIFIER .)
    INCREMENT       reduce using rule 15 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 15 (identifier -> IDENTIFIER .)
    DECREMENT       reduce using rule 15 (identifier -> IDENTIFIER .)
    MEMBERACCESS    reduce using rule 15 (identifier -> IDENTIFIER .)
    TIMES           reduce using rule 15 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 15 (identifier -> IDENTIFIER .)
    MOD             reduce using rule 15 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 15 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 15 (identifier -> IDENTIFIER .)
    LSHIFT          reduce using rule 15 (identifier -> IDENTIFIER .)
    RSHIFT          reduce using rule 15 (identifier -> IDENTIFIER .)
    LT              reduce using rule 15 (identifier -> IDENTIFIER .)
    GT              reduce using rule 15 (identifier -> IDENTIFIER .)
    LEQ             reduce using rule 15 (identifier -> IDENTIFIER .)
    GEQ             reduce using rule 15 (identifier -> IDENTIFIER .)
    EQ              reduce using rule 15 (identifier -> IDENTIFIER .)
    NE              reduce using rule 15 (identifier -> IDENTIFIER .)
    AND             reduce using rule 15 (identifier -> IDENTIFIER .)
    XOR             reduce using rule 15 (identifier -> IDENTIFIER .)
    OR              reduce using rule 15 (identifier -> IDENTIFIER .)
    CONAND          reduce using rule 15 (identifier -> IDENTIFIER .)
    CONOR           reduce using rule 15 (identifier -> IDENTIFIER .)
    TERMINATOR      reduce using rule 15 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 15 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 15 (identifier -> IDENTIFIER .)
    RBRACKET        reduce using rule 15 (identifier -> IDENTIFIER .)
    RBRACE          reduce using rule 15 (identifier -> IDENTIFIER .)
    EQUALS          reduce using rule 15 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (identifier -> IDENTIFIER .)
    LBRACE          reduce using rule 15 (identifier -> IDENTIFIER .)


state 17

    (6) using_directive -> USING identifier . TERMINATOR

    TERMINATOR      shift and go to state 21


state 18

    (54) modifiers -> modifiers modifier .

    VOID            reduce using rule 54 (modifiers -> modifiers modifier .)
    PUBLIC          reduce using rule 54 (modifiers -> modifiers modifier .)
    PRIVATE         reduce using rule 54 (modifiers -> modifiers modifier .)
    OBJECT          reduce using rule 54 (modifiers -> modifiers modifier .)
    IDENTIFIER      reduce using rule 54 (modifiers -> modifiers modifier .)
    INT             reduce using rule 54 (modifiers -> modifiers modifier .)
    CHAR            reduce using rule 54 (modifiers -> modifiers modifier .)
    CLASS           reduce using rule 54 (modifiers -> modifiers modifier .)


state 19

    (9) class_declaration -> modifiers CLASS . identifier class_body TERMINATOR
    (12) class_declaration -> modifiers CLASS . identifier class_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 22

state 20

    (10) class_declaration -> CLASS identifier . class_body TERMINATOR
    (11) class_declaration -> CLASS identifier . class_body
    (13) class_body -> . LBRACE class_member_declarations RBRACE
    (14) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 24

    class_body                     shift and go to state 23

state 21

    (6) using_directive -> USING identifier TERMINATOR .

    USING           reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    CLASS           reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    PUBLIC          reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    PRIVATE         reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)


state 22

    (9) class_declaration -> modifiers CLASS identifier . class_body TERMINATOR
    (12) class_declaration -> modifiers CLASS identifier . class_body
    (13) class_body -> . LBRACE class_member_declarations RBRACE
    (14) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 24

    class_body                     shift and go to state 25

state 23

    (10) class_declaration -> CLASS identifier class_body . TERMINATOR
    (11) class_declaration -> CLASS identifier class_body .

    TERMINATOR      shift and go to state 26
    CLASS           reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    PUBLIC          reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    PRIVATE         reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    $end            reduce using rule 11 (class_declaration -> CLASS identifier class_body .)


state 24

    (13) class_body -> LBRACE . class_member_declarations RBRACE
    (14) class_body -> LBRACE . RBRACE
    (16) class_member_declarations -> . class_member_declaration
    (17) class_member_declarations -> . class_member_declarations class_member_declaration
    (18) class_member_declaration -> . field_declaration
    (19) class_member_declaration -> . method_declaration
    (20) class_member_declaration -> . constructor_declaration
    (21) class_member_declaration -> . destructor_declaration
    (22) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (23) field_declaration -> . type variable_declarators TERMINATOR
    (44) method_declaration -> . method_header method_body
    (65) constructor_declaration -> . constructor_declarator constructor_body
    (70) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (45) method_header -> . type member_name LPAREN fixed_parameters RPAREN
    (46) method_header -> . modifiers type member_name LPAREN fixed_parameters RPAREN
    (47) method_header -> . type member_name LPAREN RPAREN
    (48) method_header -> . modifiers type member_name LPAREN RPAREN
    (49) method_header -> . VOID member_name LPAREN fixed_parameters RPAREN
    (50) method_header -> . modifiers VOID member_name LPAREN fixed_parameters RPAREN
    (51) method_header -> . VOID member_name LPAREN RPAREN
    (52) method_header -> . modifiers VOID member_name LPAREN RPAREN
    (66) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> . identifier LPAREN RPAREN
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (15) identifier -> . IDENTIFIER
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 35
    TILDE           shift and go to state 49
    VOID            shift and go to state 31
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4
    IDENTIFIER      shift and go to state 16
    OBJECT          shift and go to state 33
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    modifier                       shift and go to state 2
    constructor_declaration        shift and go to state 28
    reference_type                 shift and go to state 50
    identifier                     shift and go to state 29
    destructor_declaration         shift and go to state 30
    type_parameter                 shift and go to state 32
    class_member_declaration       shift and go to state 34
    constructor_declarator         shift and go to state 36
    class_type                     shift and go to state 37
    proper_identifier              shift and go to state 39
    method_declaration             shift and go to state 40
    predefined_type                shift and go to state 42
    non_array_type                 shift and go to state 44
    prefix                         shift and go to state 46
    class_member_declarations      shift and go to state 45
    type                           shift and go to state 41
    method_header                  shift and go to state 47
    modifiers                      shift and go to state 43
    field_declaration              shift and go to state 51

state 25

    (9) class_declaration -> modifiers CLASS identifier class_body . TERMINATOR
    (12) class_declaration -> modifiers CLASS identifier class_body .

    TERMINATOR      shift and go to state 52
    CLASS           reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    PUBLIC          reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    PRIVATE         reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    $end            reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)


state 26

    (10) class_declaration -> CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)


state 27

    (27) reference_type -> array_type .

    IDENTIFIER      reduce using rule 27 (reference_type -> array_type .)
    LBRACKET        reduce using rule 27 (reference_type -> array_type .)
    LPAREN          reduce using rule 27 (reference_type -> array_type .)
    LBRACE          reduce using rule 27 (reference_type -> array_type .)
    RPAREN          reduce using rule 27 (reference_type -> array_type .)


state 28

    (20) class_member_declaration -> constructor_declaration .

    RBRACE          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    TILDE           reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    VOID            reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    PUBLIC          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    PRIVATE         reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    IDENTIFIER      reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    OBJECT          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    INT             reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    CHAR            reduce using rule 20 (class_member_declaration -> constructor_declaration .)


state 29

    (66) constructor_declarator -> identifier . LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> identifier . LPAREN RPAREN
    (35) type_parameter -> identifier .
    (31) prefix -> identifier . MEMBERACCESS

    LPAREN          shift and go to state 54
    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 53


state 30

    (21) class_member_declaration -> destructor_declaration .

    RBRACE          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    TILDE           reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    VOID            reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    PUBLIC          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    PRIVATE         reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    IDENTIFIER      reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    OBJECT          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    INT             reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    CHAR            reduce using rule 21 (class_member_declaration -> destructor_declaration .)


state 31

    (49) method_header -> VOID . member_name LPAREN fixed_parameters RPAREN
    (51) method_header -> VOID . member_name LPAREN RPAREN
    (57) member_name -> . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 55
    member_name                    shift and go to state 56

state 32

    (25) type -> type_parameter .

    IDENTIFIER      reduce using rule 25 (type -> type_parameter .)
    LBRACKET        reduce using rule 25 (type -> type_parameter .)
    LPAREN          reduce using rule 25 (type -> type_parameter .)
    LBRACE          reduce using rule 25 (type -> type_parameter .)
    RPAREN          reduce using rule 25 (type -> type_parameter .)


state 33

    (29) class_type -> OBJECT .

    IDENTIFIER      reduce using rule 29 (class_type -> OBJECT .)
    LBRACKET        reduce using rule 29 (class_type -> OBJECT .)
    RPAREN          reduce using rule 29 (class_type -> OBJECT .)
    LPAREN          reduce using rule 29 (class_type -> OBJECT .)
    LBRACE          reduce using rule 29 (class_type -> OBJECT .)


state 34

    (16) class_member_declarations -> class_member_declaration .

    RBRACE          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    TILDE           reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    VOID            reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    PUBLIC          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    PRIVATE         reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    IDENTIFIER      reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    OBJECT          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    INT             reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    CHAR            reduce using rule 16 (class_member_declarations -> class_member_declaration .)


state 35

    (14) class_body -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 14 (class_body -> LBRACE RBRACE .)
    CLASS           reduce using rule 14 (class_body -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 14 (class_body -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 14 (class_body -> LBRACE RBRACE .)
    $end            reduce using rule 14 (class_body -> LBRACE RBRACE .)


state 36

    (65) constructor_declaration -> constructor_declarator . constructor_body
    (68) constructor_body -> . block
    (69) constructor_body -> . TERMINATOR
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE

    TERMINATOR      shift and go to state 58
    LBRACE          shift and go to state 57

    constructor_body               shift and go to state 60
    block                          shift and go to state 59

state 37

    (26) reference_type -> class_type .

    IDENTIFIER      reduce using rule 26 (reference_type -> class_type .)
    LBRACKET        reduce using rule 26 (reference_type -> class_type .)
    LPAREN          reduce using rule 26 (reference_type -> class_type .)
    LBRACE          reduce using rule 26 (reference_type -> class_type .)
    RPAREN          reduce using rule 26 (reference_type -> class_type .)


state 38

    (148) predefined_type -> INT .

    MEMBERACCESS    reduce using rule 148 (predefined_type -> INT .)
    IDENTIFIER      reduce using rule 148 (predefined_type -> INT .)
    LBRACKET        reduce using rule 148 (predefined_type -> INT .)
    RPAREN          reduce using rule 148 (predefined_type -> INT .)
    LPAREN          reduce using rule 148 (predefined_type -> INT .)
    LBRACE          reduce using rule 148 (predefined_type -> INT .)


state 39

    (28) class_type -> proper_identifier .

    RPAREN          reduce using rule 28 (class_type -> proper_identifier .)
    LBRACKET        reduce using rule 28 (class_type -> proper_identifier .)
    IDENTIFIER      reduce using rule 28 (class_type -> proper_identifier .)
    LPAREN          reduce using rule 28 (class_type -> proper_identifier .)
    LBRACE          reduce using rule 28 (class_type -> proper_identifier .)


state 40

    (19) class_member_declaration -> method_declaration .

    RBRACE          reduce using rule 19 (class_member_declaration -> method_declaration .)
    TILDE           reduce using rule 19 (class_member_declaration -> method_declaration .)
    VOID            reduce using rule 19 (class_member_declaration -> method_declaration .)
    PUBLIC          reduce using rule 19 (class_member_declaration -> method_declaration .)
    PRIVATE         reduce using rule 19 (class_member_declaration -> method_declaration .)
    IDENTIFIER      reduce using rule 19 (class_member_declaration -> method_declaration .)
    OBJECT          reduce using rule 19 (class_member_declaration -> method_declaration .)
    INT             reduce using rule 19 (class_member_declaration -> method_declaration .)
    CHAR            reduce using rule 19 (class_member_declaration -> method_declaration .)


state 41

    (23) field_declaration -> type . variable_declarators TERMINATOR
    (45) method_header -> type . member_name LPAREN fixed_parameters RPAREN
    (47) method_header -> type . member_name LPAREN RPAREN
    (34) non_array_type -> type .
    (37) variable_declarators -> . variable_declarator
    (38) variable_declarators -> . variable_declarators COMMA variable_declarator
    (57) member_name -> . identifier
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 61
    member_name                    shift and go to state 62
    variable_declarators           shift and go to state 63
    variable_declarator            shift and go to state 64

state 42

    (36) type_parameter -> predefined_type .

    IDENTIFIER      reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACKET        reduce using rule 36 (type_parameter -> predefined_type .)
    LPAREN          reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACE          reduce using rule 36 (type_parameter -> predefined_type .)
    RPAREN          reduce using rule 36 (type_parameter -> predefined_type .)


state 43

    (22) field_declaration -> modifiers . type variable_declarators TERMINATOR
    (54) modifiers -> modifiers . modifier
    (46) method_header -> modifiers . type member_name LPAREN fixed_parameters RPAREN
    (48) method_header -> modifiers . type member_name LPAREN RPAREN
    (50) method_header -> modifiers . VOID member_name LPAREN fixed_parameters RPAREN
    (52) method_header -> modifiers . VOID member_name LPAREN RPAREN
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    VOID            shift and go to state 66
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    modifier                       shift and go to state 18
    predefined_type                shift and go to state 42
    proper_identifier              shift and go to state 39
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 44
    prefix                         shift and go to state 46
    type_parameter                 shift and go to state 32
    type                           shift and go to state 67
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50

state 44

    (33) array_type -> non_array_type . LBRACKET RBRACKET

    LBRACKET        shift and go to state 68


state 45

    (13) class_body -> LBRACE class_member_declarations . RBRACE
    (17) class_member_declarations -> class_member_declarations . class_member_declaration
    (18) class_member_declaration -> . field_declaration
    (19) class_member_declaration -> . method_declaration
    (20) class_member_declaration -> . constructor_declaration
    (21) class_member_declaration -> . destructor_declaration
    (22) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (23) field_declaration -> . type variable_declarators TERMINATOR
    (44) method_declaration -> . method_header method_body
    (65) constructor_declaration -> . constructor_declarator constructor_body
    (70) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (53) modifiers -> . modifier
    (54) modifiers -> . modifiers modifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (45) method_header -> . type member_name LPAREN fixed_parameters RPAREN
    (46) method_header -> . modifiers type member_name LPAREN fixed_parameters RPAREN
    (47) method_header -> . type member_name LPAREN RPAREN
    (48) method_header -> . modifiers type member_name LPAREN RPAREN
    (49) method_header -> . VOID member_name LPAREN fixed_parameters RPAREN
    (50) method_header -> . modifiers VOID member_name LPAREN fixed_parameters RPAREN
    (51) method_header -> . VOID member_name LPAREN RPAREN
    (52) method_header -> . modifiers VOID member_name LPAREN RPAREN
    (66) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> . identifier LPAREN RPAREN
    (55) modifier -> . PUBLIC
    (56) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (15) identifier -> . IDENTIFIER
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 70
    TILDE           shift and go to state 49
    VOID            shift and go to state 31
    PUBLIC          shift and go to state 12
    PRIVATE         shift and go to state 4
    IDENTIFIER      shift and go to state 16
    OBJECT          shift and go to state 33
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    modifier                       shift and go to state 2
    constructor_declaration        shift and go to state 28
    reference_type                 shift and go to state 50
    identifier                     shift and go to state 29
    destructor_declaration         shift and go to state 30
    type_parameter                 shift and go to state 32
    class_member_declaration       shift and go to state 69
    constructor_declarator         shift and go to state 36
    class_type                     shift and go to state 37
    proper_identifier              shift and go to state 39
    method_declaration             shift and go to state 40
    predefined_type                shift and go to state 42
    non_array_type                 shift and go to state 44
    prefix                         shift and go to state 46
    type                           shift and go to state 41
    method_header                  shift and go to state 47
    modifiers                      shift and go to state 43
    field_declaration              shift and go to state 51

state 46

    (30) proper_identifier -> prefix . identifier
    (32) prefix -> prefix . identifier MEMBERACCESS
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 71

state 47

    (44) method_declaration -> method_header . method_body
    (58) method_body -> . block
    (59) method_body -> . TERMINATOR
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE

    TERMINATOR      shift and go to state 74
    LBRACE          shift and go to state 57

    block                          shift and go to state 72
    method_body                    shift and go to state 73

state 48

    (149) predefined_type -> CHAR .

    MEMBERACCESS    reduce using rule 149 (predefined_type -> CHAR .)
    IDENTIFIER      reduce using rule 149 (predefined_type -> CHAR .)
    LBRACKET        reduce using rule 149 (predefined_type -> CHAR .)
    RPAREN          reduce using rule 149 (predefined_type -> CHAR .)
    LPAREN          reduce using rule 149 (predefined_type -> CHAR .)
    LBRACE          reduce using rule 149 (predefined_type -> CHAR .)


state 49

    (70) destructor_declaration -> TILDE . identifier LPAREN RPAREN destructor_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 75

state 50

    (24) type -> reference_type .

    IDENTIFIER      reduce using rule 24 (type -> reference_type .)
    LBRACKET        reduce using rule 24 (type -> reference_type .)
    LPAREN          reduce using rule 24 (type -> reference_type .)
    LBRACE          reduce using rule 24 (type -> reference_type .)
    RPAREN          reduce using rule 24 (type -> reference_type .)


state 51

    (18) class_member_declaration -> field_declaration .

    RBRACE          reduce using rule 18 (class_member_declaration -> field_declaration .)
    TILDE           reduce using rule 18 (class_member_declaration -> field_declaration .)
    VOID            reduce using rule 18 (class_member_declaration -> field_declaration .)
    PUBLIC          reduce using rule 18 (class_member_declaration -> field_declaration .)
    PRIVATE         reduce using rule 18 (class_member_declaration -> field_declaration .)
    IDENTIFIER      reduce using rule 18 (class_member_declaration -> field_declaration .)
    OBJECT          reduce using rule 18 (class_member_declaration -> field_declaration .)
    INT             reduce using rule 18 (class_member_declaration -> field_declaration .)
    CHAR            reduce using rule 18 (class_member_declaration -> field_declaration .)


state 52

    (9) class_declaration -> modifiers CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)


state 53

    (31) prefix -> identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)


state 54

    (66) constructor_declarator -> identifier LPAREN . fixed_parameters RPAREN
    (67) constructor_declarator -> identifier LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 76
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 77
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    prefix                         shift and go to state 46
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50
    fixed_parameters               shift and go to state 79

state 55

    (57) member_name -> identifier .

    LPAREN          reduce using rule 57 (member_name -> identifier .)


state 56

    (49) method_header -> VOID member_name . LPAREN fixed_parameters RPAREN
    (51) method_header -> VOID member_name . LPAREN RPAREN

    LPAREN          shift and go to state 80


state 57

    (73) block -> LBRACE . RBRACE
    (74) block -> LBRACE . scope_marker statement_list RBRACE
    (75) scope_marker -> .

    RBRACE          shift and go to state 81
    TERMINATOR      reduce using rule 75 (scope_marker -> .)
    LBRACE          reduce using rule 75 (scope_marker -> .)
    PRINT           reduce using rule 75 (scope_marker -> .)
    BREAK           reduce using rule 75 (scope_marker -> .)
    RETURN          reduce using rule 75 (scope_marker -> .)
    NEW             reduce using rule 75 (scope_marker -> .)
    IF              reduce using rule 75 (scope_marker -> .)
    WHILE           reduce using rule 75 (scope_marker -> .)
    OBJECT          reduce using rule 75 (scope_marker -> .)
    IDENTIFIER      reduce using rule 75 (scope_marker -> .)
    INT             reduce using rule 75 (scope_marker -> .)
    CHAR            reduce using rule 75 (scope_marker -> .)
    PLUS            reduce using rule 75 (scope_marker -> .)
    MINUS           reduce using rule 75 (scope_marker -> .)
    LNOT            reduce using rule 75 (scope_marker -> .)
    TILDE           reduce using rule 75 (scope_marker -> .)
    INTCONST        reduce using rule 75 (scope_marker -> .)
    STRCONST        reduce using rule 75 (scope_marker -> .)
    CHARCONST       reduce using rule 75 (scope_marker -> .)
    LPAREN          reduce using rule 75 (scope_marker -> .)
    TYPEOF          reduce using rule 75 (scope_marker -> .)

    scope_marker                   shift and go to state 82

state 58

    (69) constructor_body -> TERMINATOR .

    RBRACE          reduce using rule 69 (constructor_body -> TERMINATOR .)
    TILDE           reduce using rule 69 (constructor_body -> TERMINATOR .)
    VOID            reduce using rule 69 (constructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 69 (constructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 69 (constructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 69 (constructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 69 (constructor_body -> TERMINATOR .)
    INT             reduce using rule 69 (constructor_body -> TERMINATOR .)
    CHAR            reduce using rule 69 (constructor_body -> TERMINATOR .)


state 59

    (68) constructor_body -> block .

    RBRACE          reduce using rule 68 (constructor_body -> block .)
    TILDE           reduce using rule 68 (constructor_body -> block .)
    VOID            reduce using rule 68 (constructor_body -> block .)
    PUBLIC          reduce using rule 68 (constructor_body -> block .)
    PRIVATE         reduce using rule 68 (constructor_body -> block .)
    IDENTIFIER      reduce using rule 68 (constructor_body -> block .)
    OBJECT          reduce using rule 68 (constructor_body -> block .)
    INT             reduce using rule 68 (constructor_body -> block .)
    CHAR            reduce using rule 68 (constructor_body -> block .)


state 60

    (65) constructor_declaration -> constructor_declarator constructor_body .

    RBRACE          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    TILDE           reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    VOID            reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    PUBLIC          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    PRIVATE         reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    IDENTIFIER      reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    OBJECT          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    INT             reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    CHAR            reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)


state 61

    (57) member_name -> identifier .
    (39) variable_declarator -> identifier .
    (40) variable_declarator -> identifier . EQUALS variable_initializer

    LPAREN          reduce using rule 57 (member_name -> identifier .)
    TERMINATOR      reduce using rule 39 (variable_declarator -> identifier .)
    COMMA           reduce using rule 39 (variable_declarator -> identifier .)
    EQUALS          shift and go to state 83


state 62

    (45) method_header -> type member_name . LPAREN fixed_parameters RPAREN
    (47) method_header -> type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 84


state 63

    (23) field_declaration -> type variable_declarators . TERMINATOR
    (38) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 86
    COMMA           shift and go to state 85


state 64

    (37) variable_declarators -> variable_declarator .

    TERMINATOR      reduce using rule 37 (variable_declarators -> variable_declarator .)
    COMMA           reduce using rule 37 (variable_declarators -> variable_declarator .)


state 65

    (35) type_parameter -> identifier .
    (31) prefix -> identifier . MEMBERACCESS

    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    LPAREN          reduce using rule 35 (type_parameter -> identifier .)
    LBRACE          reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 53


state 66

    (50) method_header -> modifiers VOID . member_name LPAREN fixed_parameters RPAREN
    (52) method_header -> modifiers VOID . member_name LPAREN RPAREN
    (57) member_name -> . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 55
    member_name                    shift and go to state 87

state 67

    (22) field_declaration -> modifiers type . variable_declarators TERMINATOR
    (46) method_header -> modifiers type . member_name LPAREN fixed_parameters RPAREN
    (48) method_header -> modifiers type . member_name LPAREN RPAREN
    (34) non_array_type -> type .
    (37) variable_declarators -> . variable_declarator
    (38) variable_declarators -> . variable_declarators COMMA variable_declarator
    (57) member_name -> . identifier
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    variable_declarator            shift and go to state 64
    identifier                     shift and go to state 61
    member_name                    shift and go to state 88
    variable_declarators           shift and go to state 89

state 68

    (33) array_type -> non_array_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 90


state 69

    (17) class_member_declarations -> class_member_declarations class_member_declaration .

    RBRACE          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    TILDE           reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    VOID            reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PUBLIC          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PRIVATE         reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    IDENTIFIER      reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    OBJECT          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    INT             reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    CHAR            reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)


state 70

    (13) class_body -> LBRACE class_member_declarations RBRACE .

    TERMINATOR      reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    CLASS           reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    PUBLIC          reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    PRIVATE         reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    $end            reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)


state 71

    (30) proper_identifier -> prefix identifier .
    (32) prefix -> prefix identifier . MEMBERACCESS

    LPAREN          reduce using rule 30 (proper_identifier -> prefix identifier .)
    IDENTIFIER      reduce using rule 30 (proper_identifier -> prefix identifier .)
    LBRACKET        reduce using rule 30 (proper_identifier -> prefix identifier .)
    RPAREN          reduce using rule 30 (proper_identifier -> prefix identifier .)
    LBRACE          reduce using rule 30 (proper_identifier -> prefix identifier .)
    MEMBERACCESS    shift and go to state 91


state 72

    (58) method_body -> block .

    RBRACE          reduce using rule 58 (method_body -> block .)
    TILDE           reduce using rule 58 (method_body -> block .)
    VOID            reduce using rule 58 (method_body -> block .)
    PUBLIC          reduce using rule 58 (method_body -> block .)
    PRIVATE         reduce using rule 58 (method_body -> block .)
    IDENTIFIER      reduce using rule 58 (method_body -> block .)
    OBJECT          reduce using rule 58 (method_body -> block .)
    INT             reduce using rule 58 (method_body -> block .)
    CHAR            reduce using rule 58 (method_body -> block .)


state 73

    (44) method_declaration -> method_header method_body .

    RBRACE          reduce using rule 44 (method_declaration -> method_header method_body .)
    TILDE           reduce using rule 44 (method_declaration -> method_header method_body .)
    VOID            reduce using rule 44 (method_declaration -> method_header method_body .)
    PUBLIC          reduce using rule 44 (method_declaration -> method_header method_body .)
    PRIVATE         reduce using rule 44 (method_declaration -> method_header method_body .)
    IDENTIFIER      reduce using rule 44 (method_declaration -> method_header method_body .)
    OBJECT          reduce using rule 44 (method_declaration -> method_header method_body .)
    INT             reduce using rule 44 (method_declaration -> method_header method_body .)
    CHAR            reduce using rule 44 (method_declaration -> method_header method_body .)


state 74

    (59) method_body -> TERMINATOR .

    RBRACE          reduce using rule 59 (method_body -> TERMINATOR .)
    TILDE           reduce using rule 59 (method_body -> TERMINATOR .)
    VOID            reduce using rule 59 (method_body -> TERMINATOR .)
    PUBLIC          reduce using rule 59 (method_body -> TERMINATOR .)
    PRIVATE         reduce using rule 59 (method_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 59 (method_body -> TERMINATOR .)
    OBJECT          reduce using rule 59 (method_body -> TERMINATOR .)
    INT             reduce using rule 59 (method_body -> TERMINATOR .)
    CHAR            reduce using rule 59 (method_body -> TERMINATOR .)


state 75

    (70) destructor_declaration -> TILDE identifier . LPAREN RPAREN destructor_body

    LPAREN          shift and go to state 92


state 76

    (67) constructor_declarator -> identifier LPAREN RPAREN .

    TERMINATOR      reduce using rule 67 (constructor_declarator -> identifier LPAREN RPAREN .)
    LBRACE          reduce using rule 67 (constructor_declarator -> identifier LPAREN RPAREN .)


state 77

    (60) fixed_parameters -> fixed_parameter .

    RPAREN          reduce using rule 60 (fixed_parameters -> fixed_parameter .)
    COMMA           reduce using rule 60 (fixed_parameters -> fixed_parameter .)


state 78

    (62) fixed_parameter -> type . identifier default_argument
    (63) fixed_parameter -> type . identifier
    (34) non_array_type -> type .
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 93

state 79

    (66) constructor_declarator -> identifier LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 95


state 80

    (49) method_header -> VOID member_name LPAREN . fixed_parameters RPAREN
    (51) method_header -> VOID member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 96
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 77
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    prefix                         shift and go to state 46
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50
    fixed_parameters               shift and go to state 97

state 81

    (73) block -> LBRACE RBRACE .

    RBRACE          reduce using rule 73 (block -> LBRACE RBRACE .)
    TERMINATOR      reduce using rule 73 (block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 73 (block -> LBRACE RBRACE .)
    PRINT           reduce using rule 73 (block -> LBRACE RBRACE .)
    BREAK           reduce using rule 73 (block -> LBRACE RBRACE .)
    RETURN          reduce using rule 73 (block -> LBRACE RBRACE .)
    NEW             reduce using rule 73 (block -> LBRACE RBRACE .)
    IF              reduce using rule 73 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 73 (block -> LBRACE RBRACE .)
    OBJECT          reduce using rule 73 (block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 73 (block -> LBRACE RBRACE .)
    INT             reduce using rule 73 (block -> LBRACE RBRACE .)
    CHAR            reduce using rule 73 (block -> LBRACE RBRACE .)
    PLUS            reduce using rule 73 (block -> LBRACE RBRACE .)
    MINUS           reduce using rule 73 (block -> LBRACE RBRACE .)
    LNOT            reduce using rule 73 (block -> LBRACE RBRACE .)
    TILDE           reduce using rule 73 (block -> LBRACE RBRACE .)
    INTCONST        reduce using rule 73 (block -> LBRACE RBRACE .)
    STRCONST        reduce using rule 73 (block -> LBRACE RBRACE .)
    CHARCONST       reduce using rule 73 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 73 (block -> LBRACE RBRACE .)
    TYPEOF          reduce using rule 73 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 73 (block -> LBRACE RBRACE .)
    VOID            reduce using rule 73 (block -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 73 (block -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 73 (block -> LBRACE RBRACE .)


state 82

    (74) block -> LBRACE scope_marker . statement_list RBRACE
    (76) statement_list -> . statement
    (77) statement_list -> . statement_list statement
    (78) statement -> . local_variable_declaration TERMINATOR
    (79) statement -> . embedded_statement
    (96) local_variable_declaration -> . type local_variable_declarators
    (80) embedded_statement -> . block
    (81) embedded_statement -> . TERMINATOR
    (82) embedded_statement -> . statement_expression TERMINATOR
    (83) embedded_statement -> . if_statement
    (84) embedded_statement -> . iteration_statement
    (85) embedded_statement -> . print_statement
    (86) embedded_statement -> . break_statement
    (87) embedded_statement -> . return_statement
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE
    (102) statement_expression -> . object_creation_expression
    (103) statement_expression -> . assignment
    (104) statement_expression -> . invocation_expression
    (105) statement_expression -> . post_increment_expression
    (106) statement_expression -> . post_decrement_expression
    (113) if_statement -> . if LPAREN expression RPAREN embedded_statement
    (114) if_statement -> . if LPAREN expression RPAREN embedded_statement else embedded_statement
    (117) iteration_statement -> . while LPAREN expression RPAREN embedded_statement
    (88) print_statement -> . PRINT LPAREN expression RPAREN TERMINATOR
    (89) break_statement -> . BREAK TERMINATOR
    (91) return_statement -> . RETURN TERMINATOR
    (92) return_statement -> . RETURN expression TERMINATOR
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (115) if -> . IF
    (118) while -> . WHILE
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier

    TERMINATOR      shift and go to state 139
    LBRACE          shift and go to state 57
    PRINT           shift and go to state 143
    BREAK           shift and go to state 136
    RETURN          shift and go to state 113
    NEW             shift and go to state 106
    IF              shift and go to state 115
    WHILE           shift and go to state 125
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119

    typeof_expression              shift and go to state 99
    identifier                     shift and go to state 100
    prefix                         shift and go to state 46
    statement                      shift and go to state 101
    print_statement                shift and go to state 102
    post_increment_expression      shift and go to state 103
    statement_list                 shift and go to state 104
    class_type                     shift and go to state 37
    array_type                     shift and go to state 27
    parenthesized_expression       shift and go to state 108
    predefined_type                shift and go to state 109
    object_creation_expression     shift and go to state 110
    if_statement                   shift and go to state 111
    return_statement               shift and go to state 112
    non_array_type                 shift and go to state 44
    array_creation_expression      shift and go to state 131
    type                           shift and go to state 116
    block                          shift and go to state 117
    embedded_statement             shift and go to state 118
    statement_expression           shift and go to state 120
    reference_type                 shift and go to state 50
    if                             shift and go to state 121
    member_access                  shift and go to state 129
    invocation_expression          shift and go to state 124
    unary_expression               shift and go to state 126
    iteration_statement            shift and go to state 127
    post_decrement_expression      shift and go to state 128
    type_parameter                 shift and go to state 32
    proper_identifier              shift and go to state 132
    element_access                 shift and go to state 107
    assignment                     shift and go to state 135
    primary_no_array_creation_expression shift and go to state 138
    break_statement                shift and go to state 140
    local_variable_declaration     shift and go to state 141
    iMEMAi                         shift and go to state 123
    while                          shift and go to state 114
    primary_expression             shift and go to state 144
    literal                        shift and go to state 145

state 83

    (40) variable_declarator -> identifier EQUALS . variable_initializer
    (41) variable_initializer -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 153
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    variable_initializer           shift and go to state 155
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 84

    (45) method_header -> type member_name LPAREN . fixed_parameters RPAREN
    (47) method_header -> type member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 171
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 77
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    prefix                         shift and go to state 46
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50
    fixed_parameters               shift and go to state 172

state 85

    (38) variable_declarators -> variable_declarators COMMA . variable_declarator
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    variable_declarator            shift and go to state 174
    identifier                     shift and go to state 173

state 86

    (23) field_declaration -> type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    VOID            reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    INT             reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)


state 87

    (50) method_header -> modifiers VOID member_name . LPAREN fixed_parameters RPAREN
    (52) method_header -> modifiers VOID member_name . LPAREN RPAREN

    LPAREN          shift and go to state 175


state 88

    (46) method_header -> modifiers type member_name . LPAREN fixed_parameters RPAREN
    (48) method_header -> modifiers type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 176


state 89

    (22) field_declaration -> modifiers type variable_declarators . TERMINATOR
    (38) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 177
    COMMA           shift and go to state 85


state 90

    (33) array_type -> non_array_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LPAREN          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LBRACE          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)


state 91

    (32) prefix -> prefix identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 32 (prefix -> prefix identifier MEMBERACCESS .)


state 92

    (70) destructor_declaration -> TILDE identifier LPAREN . RPAREN destructor_body

    RPAREN          shift and go to state 178


state 93

    (62) fixed_parameter -> type identifier . default_argument
    (63) fixed_parameter -> type identifier .
    (64) default_argument -> . EQUALS expression

    RPAREN          reduce using rule 63 (fixed_parameter -> type identifier .)
    COMMA           reduce using rule 63 (fixed_parameter -> type identifier .)
    EQUALS          shift and go to state 179

    default_argument               shift and go to state 180

state 94

    (66) constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 66 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 66 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)


state 95

    (61) fixed_parameters -> fixed_parameters COMMA . fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 181
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    prefix                         shift and go to state 46
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50

state 96

    (51) method_header -> VOID member_name LPAREN RPAREN .

    TERMINATOR      reduce using rule 51 (method_header -> VOID member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 51 (method_header -> VOID member_name LPAREN RPAREN .)


state 97

    (49) method_header -> VOID member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 182
    COMMA           shift and go to state 95


state 98

    (95) literal -> CHARCONST .

    LBRACKET        reduce using rule 95 (literal -> CHARCONST .)
    MEMBERACCESS    reduce using rule 95 (literal -> CHARCONST .)
    INCREMENT       reduce using rule 95 (literal -> CHARCONST .)
    LPAREN          reduce using rule 95 (literal -> CHARCONST .)
    DECREMENT       reduce using rule 95 (literal -> CHARCONST .)
    EQUALS          reduce using rule 95 (literal -> CHARCONST .)
    TIMES           reduce using rule 95 (literal -> CHARCONST .)
    DIVIDE          reduce using rule 95 (literal -> CHARCONST .)
    MOD             reduce using rule 95 (literal -> CHARCONST .)
    PLUS            reduce using rule 95 (literal -> CHARCONST .)
    MINUS           reduce using rule 95 (literal -> CHARCONST .)
    LSHIFT          reduce using rule 95 (literal -> CHARCONST .)
    RSHIFT          reduce using rule 95 (literal -> CHARCONST .)
    LT              reduce using rule 95 (literal -> CHARCONST .)
    GT              reduce using rule 95 (literal -> CHARCONST .)
    LEQ             reduce using rule 95 (literal -> CHARCONST .)
    GEQ             reduce using rule 95 (literal -> CHARCONST .)
    EQ              reduce using rule 95 (literal -> CHARCONST .)
    NE              reduce using rule 95 (literal -> CHARCONST .)
    AND             reduce using rule 95 (literal -> CHARCONST .)
    XOR             reduce using rule 95 (literal -> CHARCONST .)
    OR              reduce using rule 95 (literal -> CHARCONST .)
    CONAND          reduce using rule 95 (literal -> CHARCONST .)
    CONOR           reduce using rule 95 (literal -> CHARCONST .)
    RPAREN          reduce using rule 95 (literal -> CHARCONST .)
    COMMA           reduce using rule 95 (literal -> CHARCONST .)
    TERMINATOR      reduce using rule 95 (literal -> CHARCONST .)
    RBRACKET        reduce using rule 95 (literal -> CHARCONST .)
    RBRACE          reduce using rule 95 (literal -> CHARCONST .)


state 99

    (143) primary_no_array_creation_expression -> typeof_expression .

    LBRACKET        reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    MEMBERACCESS    reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    INCREMENT       reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    LPAREN          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    DECREMENT       reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    EQUALS          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    TIMES           reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    DIVIDE          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    MOD             reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    PLUS            reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    MINUS           reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    LSHIFT          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    RSHIFT          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    LT              reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    GT              reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    LEQ             reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    GEQ             reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    EQ              reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    NE              reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    AND             reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    XOR             reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    OR              reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    CONAND          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    CONOR           reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    RPAREN          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    COMMA           reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    TERMINATOR      reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    RBRACKET        reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)
    RBRACE          reduce using rule 143 (primary_no_array_creation_expression -> typeof_expression .)


state 100

    (35) type_parameter -> identifier .
    (122) assignment -> identifier . assignment_operator expression
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (155) post_increment_expression -> identifier . INCREMENT
    (157) post_decrement_expression -> identifier . DECREMENT
    (31) prefix -> identifier . MEMBERACCESS
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (123) assignment_operator -> . EQUALS

  ! shift/reduce conflict for LBRACKET resolved as shift
    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LPAREN          shift and go to state 184
    INCREMENT       shift and go to state 188
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 186
    LBRACKET        shift and go to state 187
    EQUALS          shift and go to state 185

  ! LBRACKET        [ reduce using rule 35 (type_parameter -> identifier .) ]

    assignment_operator            shift and go to state 183

state 101

    (76) statement_list -> statement .

    RBRACE          reduce using rule 76 (statement_list -> statement .)
    TERMINATOR      reduce using rule 76 (statement_list -> statement .)
    LBRACE          reduce using rule 76 (statement_list -> statement .)
    PRINT           reduce using rule 76 (statement_list -> statement .)
    BREAK           reduce using rule 76 (statement_list -> statement .)
    RETURN          reduce using rule 76 (statement_list -> statement .)
    NEW             reduce using rule 76 (statement_list -> statement .)
    IF              reduce using rule 76 (statement_list -> statement .)
    WHILE           reduce using rule 76 (statement_list -> statement .)
    OBJECT          reduce using rule 76 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 76 (statement_list -> statement .)
    INT             reduce using rule 76 (statement_list -> statement .)
    CHAR            reduce using rule 76 (statement_list -> statement .)
    PLUS            reduce using rule 76 (statement_list -> statement .)
    MINUS           reduce using rule 76 (statement_list -> statement .)
    LNOT            reduce using rule 76 (statement_list -> statement .)
    TILDE           reduce using rule 76 (statement_list -> statement .)
    INTCONST        reduce using rule 76 (statement_list -> statement .)
    STRCONST        reduce using rule 76 (statement_list -> statement .)
    CHARCONST       reduce using rule 76 (statement_list -> statement .)
    LPAREN          reduce using rule 76 (statement_list -> statement .)
    TYPEOF          reduce using rule 76 (statement_list -> statement .)


state 102

    (85) embedded_statement -> print_statement .

    RBRACE          reduce using rule 85 (embedded_statement -> print_statement .)
    TERMINATOR      reduce using rule 85 (embedded_statement -> print_statement .)
    LBRACE          reduce using rule 85 (embedded_statement -> print_statement .)
    PRINT           reduce using rule 85 (embedded_statement -> print_statement .)
    BREAK           reduce using rule 85 (embedded_statement -> print_statement .)
    RETURN          reduce using rule 85 (embedded_statement -> print_statement .)
    NEW             reduce using rule 85 (embedded_statement -> print_statement .)
    IF              reduce using rule 85 (embedded_statement -> print_statement .)
    WHILE           reduce using rule 85 (embedded_statement -> print_statement .)
    OBJECT          reduce using rule 85 (embedded_statement -> print_statement .)
    IDENTIFIER      reduce using rule 85 (embedded_statement -> print_statement .)
    INT             reduce using rule 85 (embedded_statement -> print_statement .)
    CHAR            reduce using rule 85 (embedded_statement -> print_statement .)
    PLUS            reduce using rule 85 (embedded_statement -> print_statement .)
    MINUS           reduce using rule 85 (embedded_statement -> print_statement .)
    LNOT            reduce using rule 85 (embedded_statement -> print_statement .)
    TILDE           reduce using rule 85 (embedded_statement -> print_statement .)
    INTCONST        reduce using rule 85 (embedded_statement -> print_statement .)
    STRCONST        reduce using rule 85 (embedded_statement -> print_statement .)
    CHARCONST       reduce using rule 85 (embedded_statement -> print_statement .)
    LPAREN          reduce using rule 85 (embedded_statement -> print_statement .)
    TYPEOF          reduce using rule 85 (embedded_statement -> print_statement .)
    ELSE            reduce using rule 85 (embedded_statement -> print_statement .)


state 103

    (105) statement_expression -> post_increment_expression .
    (139) primary_no_array_creation_expression -> post_increment_expression .

    TERMINATOR      reduce using rule 105 (statement_expression -> post_increment_expression .)
    LBRACKET        reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    LPAREN          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    INCREMENT       reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    DECREMENT       reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    MEMBERACCESS    reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    EQUALS          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)


state 104

    (74) block -> LBRACE scope_marker statement_list . RBRACE
    (77) statement_list -> statement_list . statement
    (78) statement -> . local_variable_declaration TERMINATOR
    (79) statement -> . embedded_statement
    (96) local_variable_declaration -> . type local_variable_declarators
    (80) embedded_statement -> . block
    (81) embedded_statement -> . TERMINATOR
    (82) embedded_statement -> . statement_expression TERMINATOR
    (83) embedded_statement -> . if_statement
    (84) embedded_statement -> . iteration_statement
    (85) embedded_statement -> . print_statement
    (86) embedded_statement -> . break_statement
    (87) embedded_statement -> . return_statement
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE
    (102) statement_expression -> . object_creation_expression
    (103) statement_expression -> . assignment
    (104) statement_expression -> . invocation_expression
    (105) statement_expression -> . post_increment_expression
    (106) statement_expression -> . post_decrement_expression
    (113) if_statement -> . if LPAREN expression RPAREN embedded_statement
    (114) if_statement -> . if LPAREN expression RPAREN embedded_statement else embedded_statement
    (117) iteration_statement -> . while LPAREN expression RPAREN embedded_statement
    (88) print_statement -> . PRINT LPAREN expression RPAREN TERMINATOR
    (89) break_statement -> . BREAK TERMINATOR
    (91) return_statement -> . RETURN TERMINATOR
    (92) return_statement -> . RETURN expression TERMINATOR
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (115) if -> . IF
    (118) while -> . WHILE
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier

    RBRACE          shift and go to state 191
    TERMINATOR      shift and go to state 139
    LBRACE          shift and go to state 57
    PRINT           shift and go to state 143
    BREAK           shift and go to state 136
    RETURN          shift and go to state 113
    NEW             shift and go to state 106
    IF              shift and go to state 115
    WHILE           shift and go to state 125
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119

    typeof_expression              shift and go to state 99
    identifier                     shift and go to state 100
    prefix                         shift and go to state 46
    statement                      shift and go to state 190
    print_statement                shift and go to state 102
    post_increment_expression      shift and go to state 103
    class_type                     shift and go to state 37
    array_type                     shift and go to state 27
    parenthesized_expression       shift and go to state 108
    predefined_type                shift and go to state 109
    object_creation_expression     shift and go to state 110
    if_statement                   shift and go to state 111
    return_statement               shift and go to state 112
    non_array_type                 shift and go to state 44
    array_creation_expression      shift and go to state 131
    type                           shift and go to state 116
    block                          shift and go to state 117
    embedded_statement             shift and go to state 118
    statement_expression           shift and go to state 120
    reference_type                 shift and go to state 50
    if                             shift and go to state 121
    member_access                  shift and go to state 129
    invocation_expression          shift and go to state 124
    unary_expression               shift and go to state 126
    iteration_statement            shift and go to state 127
    post_decrement_expression      shift and go to state 128
    type_parameter                 shift and go to state 32
    proper_identifier              shift and go to state 132
    element_access                 shift and go to state 107
    assignment                     shift and go to state 135
    primary_no_array_creation_expression shift and go to state 138
    break_statement                shift and go to state 140
    local_variable_declaration     shift and go to state 141
    iMEMAi                         shift and go to state 123
    while                          shift and go to state 114
    primary_expression             shift and go to state 144
    literal                        shift and go to state 145

state 105

    (94) literal -> STRCONST .

    LBRACKET        reduce using rule 94 (literal -> STRCONST .)
    MEMBERACCESS    reduce using rule 94 (literal -> STRCONST .)
    INCREMENT       reduce using rule 94 (literal -> STRCONST .)
    LPAREN          reduce using rule 94 (literal -> STRCONST .)
    DECREMENT       reduce using rule 94 (literal -> STRCONST .)
    EQUALS          reduce using rule 94 (literal -> STRCONST .)
    TIMES           reduce using rule 94 (literal -> STRCONST .)
    DIVIDE          reduce using rule 94 (literal -> STRCONST .)
    MOD             reduce using rule 94 (literal -> STRCONST .)
    PLUS            reduce using rule 94 (literal -> STRCONST .)
    MINUS           reduce using rule 94 (literal -> STRCONST .)
    LSHIFT          reduce using rule 94 (literal -> STRCONST .)
    RSHIFT          reduce using rule 94 (literal -> STRCONST .)
    LT              reduce using rule 94 (literal -> STRCONST .)
    GT              reduce using rule 94 (literal -> STRCONST .)
    LEQ             reduce using rule 94 (literal -> STRCONST .)
    GEQ             reduce using rule 94 (literal -> STRCONST .)
    EQ              reduce using rule 94 (literal -> STRCONST .)
    NE              reduce using rule 94 (literal -> STRCONST .)
    AND             reduce using rule 94 (literal -> STRCONST .)
    XOR             reduce using rule 94 (literal -> STRCONST .)
    OR              reduce using rule 94 (literal -> STRCONST .)
    CONAND          reduce using rule 94 (literal -> STRCONST .)
    CONOR           reduce using rule 94 (literal -> STRCONST .)
    RPAREN          reduce using rule 94 (literal -> STRCONST .)
    COMMA           reduce using rule 94 (literal -> STRCONST .)
    TERMINATOR      reduce using rule 94 (literal -> STRCONST .)
    RBRACKET        reduce using rule 94 (literal -> STRCONST .)
    RBRACE          reduce using rule 94 (literal -> STRCONST .)


state 106

    (158) object_creation_expression -> NEW . type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> NEW . type LPAREN argument_list RPAREN
    (160) object_creation_expression -> NEW . type LPAREN RPAREN
    (161) object_creation_expression -> NEW . type object_or_collection_initializer
    (181) array_creation_expression -> NEW . non_array_type LBRACKET expression RBRACKET
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (34) non_array_type -> . type
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    prefix                         shift and go to state 46
    proper_identifier              shift and go to state 39
    type_parameter                 shift and go to state 32
    class_type                     shift and go to state 37
    type                           shift and go to state 192
    non_array_type                 shift and go to state 193
    reference_type                 shift and go to state 50

state 107

    (138) primary_no_array_creation_expression -> element_access .

    LBRACKET        reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    MEMBERACCESS    reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    INCREMENT       reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    LPAREN          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    DECREMENT       reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    EQUALS          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    TIMES           reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    DIVIDE          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    MOD             reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    PLUS            reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    MINUS           reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    LSHIFT          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    RSHIFT          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    LT              reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    GT              reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    LEQ             reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    GEQ             reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    EQ              reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    NE              reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    AND             reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    XOR             reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    OR              reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    CONAND          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    CONOR           reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    RPAREN          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    COMMA           reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    TERMINATOR      reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    RBRACKET        reduce using rule 138 (primary_no_array_creation_expression -> element_access .)
    RBRACE          reduce using rule 138 (primary_no_array_creation_expression -> element_access .)


state 108

    (136) primary_no_array_creation_expression -> parenthesized_expression .

    LBRACKET        reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    MEMBERACCESS    reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    INCREMENT       reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    LPAREN          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    DECREMENT       reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    EQUALS          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    TIMES           reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    DIVIDE          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    MOD             reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    PLUS            reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    MINUS           reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    LSHIFT          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    RSHIFT          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    LT              reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    GT              reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    LEQ             reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    GEQ             reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    EQ              reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    NE              reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    AND             reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    XOR             reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    OR              reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    CONAND          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    CONOR           reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    RPAREN          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    COMMA           reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    TERMINATOR      reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    RBRACKET        reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)
    RBRACE          reduce using rule 136 (primary_no_array_creation_expression -> parenthesized_expression .)


state 109

    (36) type_parameter -> predefined_type .
    (147) member_access -> predefined_type . MEMBERACCESS identifier

    IDENTIFIER      reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACKET        reduce using rule 36 (type_parameter -> predefined_type .)
    MEMBERACCESS    shift and go to state 194


state 110

    (102) statement_expression -> object_creation_expression .
    (142) primary_no_array_creation_expression -> object_creation_expression .

    TERMINATOR      reduce using rule 102 (statement_expression -> object_creation_expression .)
    LBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    LPAREN          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    INCREMENT       reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    DECREMENT       reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    MEMBERACCESS    reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    EQUALS          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)


state 111

    (83) embedded_statement -> if_statement .

    RBRACE          reduce using rule 83 (embedded_statement -> if_statement .)
    TERMINATOR      reduce using rule 83 (embedded_statement -> if_statement .)
    LBRACE          reduce using rule 83 (embedded_statement -> if_statement .)
    PRINT           reduce using rule 83 (embedded_statement -> if_statement .)
    BREAK           reduce using rule 83 (embedded_statement -> if_statement .)
    RETURN          reduce using rule 83 (embedded_statement -> if_statement .)
    NEW             reduce using rule 83 (embedded_statement -> if_statement .)
    IF              reduce using rule 83 (embedded_statement -> if_statement .)
    WHILE           reduce using rule 83 (embedded_statement -> if_statement .)
    OBJECT          reduce using rule 83 (embedded_statement -> if_statement .)
    IDENTIFIER      reduce using rule 83 (embedded_statement -> if_statement .)
    INT             reduce using rule 83 (embedded_statement -> if_statement .)
    CHAR            reduce using rule 83 (embedded_statement -> if_statement .)
    PLUS            reduce using rule 83 (embedded_statement -> if_statement .)
    MINUS           reduce using rule 83 (embedded_statement -> if_statement .)
    LNOT            reduce using rule 83 (embedded_statement -> if_statement .)
    TILDE           reduce using rule 83 (embedded_statement -> if_statement .)
    INTCONST        reduce using rule 83 (embedded_statement -> if_statement .)
    STRCONST        reduce using rule 83 (embedded_statement -> if_statement .)
    CHARCONST       reduce using rule 83 (embedded_statement -> if_statement .)
    LPAREN          reduce using rule 83 (embedded_statement -> if_statement .)
    TYPEOF          reduce using rule 83 (embedded_statement -> if_statement .)
    ELSE            reduce using rule 83 (embedded_statement -> if_statement .)


state 112

    (87) embedded_statement -> return_statement .

    RBRACE          reduce using rule 87 (embedded_statement -> return_statement .)
    TERMINATOR      reduce using rule 87 (embedded_statement -> return_statement .)
    LBRACE          reduce using rule 87 (embedded_statement -> return_statement .)
    PRINT           reduce using rule 87 (embedded_statement -> return_statement .)
    BREAK           reduce using rule 87 (embedded_statement -> return_statement .)
    RETURN          reduce using rule 87 (embedded_statement -> return_statement .)
    NEW             reduce using rule 87 (embedded_statement -> return_statement .)
    IF              reduce using rule 87 (embedded_statement -> return_statement .)
    WHILE           reduce using rule 87 (embedded_statement -> return_statement .)
    OBJECT          reduce using rule 87 (embedded_statement -> return_statement .)
    IDENTIFIER      reduce using rule 87 (embedded_statement -> return_statement .)
    INT             reduce using rule 87 (embedded_statement -> return_statement .)
    CHAR            reduce using rule 87 (embedded_statement -> return_statement .)
    PLUS            reduce using rule 87 (embedded_statement -> return_statement .)
    MINUS           reduce using rule 87 (embedded_statement -> return_statement .)
    LNOT            reduce using rule 87 (embedded_statement -> return_statement .)
    TILDE           reduce using rule 87 (embedded_statement -> return_statement .)
    INTCONST        reduce using rule 87 (embedded_statement -> return_statement .)
    STRCONST        reduce using rule 87 (embedded_statement -> return_statement .)
    CHARCONST       reduce using rule 87 (embedded_statement -> return_statement .)
    LPAREN          reduce using rule 87 (embedded_statement -> return_statement .)
    TYPEOF          reduce using rule 87 (embedded_statement -> return_statement .)
    ELSE            reduce using rule 87 (embedded_statement -> return_statement .)


state 113

    (91) return_statement -> RETURN . TERMINATOR
    (92) return_statement -> RETURN . expression TERMINATOR
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    TERMINATOR      shift and go to state 196
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 195
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 114

    (117) iteration_statement -> while . LPAREN expression RPAREN embedded_statement

    LPAREN          shift and go to state 197


state 115

    (115) if -> IF .

    LPAREN          reduce using rule 115 (if -> IF .)


state 116

    (96) local_variable_declaration -> type . local_variable_declarators
    (34) non_array_type -> type .
    (97) local_variable_declarators -> . local_variable_declarator
    (98) local_variable_declarators -> . local_variable_declarators COMMA local_variable_declarator
    (99) local_variable_declarator -> . identifier
    (100) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    local_variable_declarator      shift and go to state 200
    identifier                     shift and go to state 199
    local_variable_declarators     shift and go to state 198

state 117

    (80) embedded_statement -> block .

    RBRACE          reduce using rule 80 (embedded_statement -> block .)
    TERMINATOR      reduce using rule 80 (embedded_statement -> block .)
    LBRACE          reduce using rule 80 (embedded_statement -> block .)
    PRINT           reduce using rule 80 (embedded_statement -> block .)
    BREAK           reduce using rule 80 (embedded_statement -> block .)
    RETURN          reduce using rule 80 (embedded_statement -> block .)
    NEW             reduce using rule 80 (embedded_statement -> block .)
    IF              reduce using rule 80 (embedded_statement -> block .)
    WHILE           reduce using rule 80 (embedded_statement -> block .)
    OBJECT          reduce using rule 80 (embedded_statement -> block .)
    IDENTIFIER      reduce using rule 80 (embedded_statement -> block .)
    INT             reduce using rule 80 (embedded_statement -> block .)
    CHAR            reduce using rule 80 (embedded_statement -> block .)
    PLUS            reduce using rule 80 (embedded_statement -> block .)
    MINUS           reduce using rule 80 (embedded_statement -> block .)
    LNOT            reduce using rule 80 (embedded_statement -> block .)
    TILDE           reduce using rule 80 (embedded_statement -> block .)
    INTCONST        reduce using rule 80 (embedded_statement -> block .)
    STRCONST        reduce using rule 80 (embedded_statement -> block .)
    CHARCONST       reduce using rule 80 (embedded_statement -> block .)
    LPAREN          reduce using rule 80 (embedded_statement -> block .)
    TYPEOF          reduce using rule 80 (embedded_statement -> block .)
    ELSE            reduce using rule 80 (embedded_statement -> block .)


state 118

    (79) statement -> embedded_statement .

    RBRACE          reduce using rule 79 (statement -> embedded_statement .)
    TERMINATOR      reduce using rule 79 (statement -> embedded_statement .)
    LBRACE          reduce using rule 79 (statement -> embedded_statement .)
    PRINT           reduce using rule 79 (statement -> embedded_statement .)
    BREAK           reduce using rule 79 (statement -> embedded_statement .)
    RETURN          reduce using rule 79 (statement -> embedded_statement .)
    NEW             reduce using rule 79 (statement -> embedded_statement .)
    IF              reduce using rule 79 (statement -> embedded_statement .)
    WHILE           reduce using rule 79 (statement -> embedded_statement .)
    OBJECT          reduce using rule 79 (statement -> embedded_statement .)
    IDENTIFIER      reduce using rule 79 (statement -> embedded_statement .)
    INT             reduce using rule 79 (statement -> embedded_statement .)
    CHAR            reduce using rule 79 (statement -> embedded_statement .)
    PLUS            reduce using rule 79 (statement -> embedded_statement .)
    MINUS           reduce using rule 79 (statement -> embedded_statement .)
    LNOT            reduce using rule 79 (statement -> embedded_statement .)
    TILDE           reduce using rule 79 (statement -> embedded_statement .)
    INTCONST        reduce using rule 79 (statement -> embedded_statement .)
    STRCONST        reduce using rule 79 (statement -> embedded_statement .)
    CHARCONST       reduce using rule 79 (statement -> embedded_statement .)
    LPAREN          reduce using rule 79 (statement -> embedded_statement .)
    TYPEOF          reduce using rule 79 (statement -> embedded_statement .)


state 119

    (182) typeof_expression -> TYPEOF . LPAREN type RPAREN
    (183) typeof_expression -> TYPEOF . LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> TYPEOF . LPAREN VOID RPAREN

    LPAREN          shift and go to state 201


state 120

    (82) embedded_statement -> statement_expression . TERMINATOR

    TERMINATOR      shift and go to state 202


state 121

    (113) if_statement -> if . LPAREN expression RPAREN embedded_statement
    (114) if_statement -> if . LPAREN expression RPAREN embedded_statement else embedded_statement

    LPAREN          shift and go to state 203


state 122

    (144) parenthesized_expression -> LPAREN . expression RPAREN
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 204
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 123

    (146) member_access -> iMEMAi .

    LBRACKET        reduce using rule 146 (member_access -> iMEMAi .)
    MEMBERACCESS    reduce using rule 146 (member_access -> iMEMAi .)
    INCREMENT       reduce using rule 146 (member_access -> iMEMAi .)
    LPAREN          reduce using rule 146 (member_access -> iMEMAi .)
    DECREMENT       reduce using rule 146 (member_access -> iMEMAi .)
    EQUALS          reduce using rule 146 (member_access -> iMEMAi .)
    TIMES           reduce using rule 146 (member_access -> iMEMAi .)
    DIVIDE          reduce using rule 146 (member_access -> iMEMAi .)
    MOD             reduce using rule 146 (member_access -> iMEMAi .)
    PLUS            reduce using rule 146 (member_access -> iMEMAi .)
    MINUS           reduce using rule 146 (member_access -> iMEMAi .)
    LSHIFT          reduce using rule 146 (member_access -> iMEMAi .)
    RSHIFT          reduce using rule 146 (member_access -> iMEMAi .)
    LT              reduce using rule 146 (member_access -> iMEMAi .)
    GT              reduce using rule 146 (member_access -> iMEMAi .)
    LEQ             reduce using rule 146 (member_access -> iMEMAi .)
    GEQ             reduce using rule 146 (member_access -> iMEMAi .)
    EQ              reduce using rule 146 (member_access -> iMEMAi .)
    NE              reduce using rule 146 (member_access -> iMEMAi .)
    AND             reduce using rule 146 (member_access -> iMEMAi .)
    XOR             reduce using rule 146 (member_access -> iMEMAi .)
    OR              reduce using rule 146 (member_access -> iMEMAi .)
    CONAND          reduce using rule 146 (member_access -> iMEMAi .)
    CONOR           reduce using rule 146 (member_access -> iMEMAi .)
    RBRACKET        reduce using rule 146 (member_access -> iMEMAi .)
    COMMA           reduce using rule 146 (member_access -> iMEMAi .)
    RBRACE          reduce using rule 146 (member_access -> iMEMAi .)
    TERMINATOR      reduce using rule 146 (member_access -> iMEMAi .)
    RPAREN          reduce using rule 146 (member_access -> iMEMAi .)


state 124

    (104) statement_expression -> invocation_expression .
    (140) primary_no_array_creation_expression -> invocation_expression .

    TERMINATOR      reduce using rule 104 (statement_expression -> invocation_expression .)
    LBRACKET        reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    LPAREN          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    INCREMENT       reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    DECREMENT       reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    MEMBERACCESS    reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    EQUALS          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)


state 125

    (118) while -> WHILE .

    LPAREN          reduce using rule 118 (while -> WHILE .)


state 126

    (121) assignment -> unary_expression . assignment_operator expression
    (123) assignment_operator -> . EQUALS

    EQUALS          shift and go to state 185

    assignment_operator            shift and go to state 205

state 127

    (84) embedded_statement -> iteration_statement .

    RBRACE          reduce using rule 84 (embedded_statement -> iteration_statement .)
    TERMINATOR      reduce using rule 84 (embedded_statement -> iteration_statement .)
    LBRACE          reduce using rule 84 (embedded_statement -> iteration_statement .)
    PRINT           reduce using rule 84 (embedded_statement -> iteration_statement .)
    BREAK           reduce using rule 84 (embedded_statement -> iteration_statement .)
    RETURN          reduce using rule 84 (embedded_statement -> iteration_statement .)
    NEW             reduce using rule 84 (embedded_statement -> iteration_statement .)
    IF              reduce using rule 84 (embedded_statement -> iteration_statement .)
    WHILE           reduce using rule 84 (embedded_statement -> iteration_statement .)
    OBJECT          reduce using rule 84 (embedded_statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 84 (embedded_statement -> iteration_statement .)
    INT             reduce using rule 84 (embedded_statement -> iteration_statement .)
    CHAR            reduce using rule 84 (embedded_statement -> iteration_statement .)
    PLUS            reduce using rule 84 (embedded_statement -> iteration_statement .)
    MINUS           reduce using rule 84 (embedded_statement -> iteration_statement .)
    LNOT            reduce using rule 84 (embedded_statement -> iteration_statement .)
    TILDE           reduce using rule 84 (embedded_statement -> iteration_statement .)
    INTCONST        reduce using rule 84 (embedded_statement -> iteration_statement .)
    STRCONST        reduce using rule 84 (embedded_statement -> iteration_statement .)
    CHARCONST       reduce using rule 84 (embedded_statement -> iteration_statement .)
    LPAREN          reduce using rule 84 (embedded_statement -> iteration_statement .)
    TYPEOF          reduce using rule 84 (embedded_statement -> iteration_statement .)
    ELSE            reduce using rule 84 (embedded_statement -> iteration_statement .)


state 128

    (106) statement_expression -> post_decrement_expression .
    (141) primary_no_array_creation_expression -> post_decrement_expression .

    TERMINATOR      reduce using rule 106 (statement_expression -> post_decrement_expression .)
    LBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    LPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    INCREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    DECREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    MEMBERACCESS    reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQUALS          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)


state 129

    (137) primary_no_array_creation_expression -> member_access .

    LBRACKET        reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    MEMBERACCESS    reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    INCREMENT       reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    LPAREN          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    DECREMENT       reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    EQUALS          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    TIMES           reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    DIVIDE          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    MOD             reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    PLUS            reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    MINUS           reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    LSHIFT          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    RSHIFT          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    LT              reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    GT              reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    LEQ             reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    GEQ             reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    EQ              reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    NE              reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    AND             reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    XOR             reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    OR              reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    CONAND          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    CONOR           reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    RPAREN          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    COMMA           reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    TERMINATOR      reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    RBRACKET        reduce using rule 137 (primary_no_array_creation_expression -> member_access .)
    RBRACE          reduce using rule 137 (primary_no_array_creation_expression -> member_access .)


state 130

    (127) unary_expression -> MINUS . unary_expression
    (128) unary_expression -> MINUS . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 206
    prefix                         shift and go to state 46
    post_increment_expression      shift and go to state 150
    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 207
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 131

    (134) primary_expression -> array_creation_expression .

    MEMBERACCESS    reduce using rule 134 (primary_expression -> array_creation_expression .)
    INCREMENT       reduce using rule 134 (primary_expression -> array_creation_expression .)
    LPAREN          reduce using rule 134 (primary_expression -> array_creation_expression .)
    DECREMENT       reduce using rule 134 (primary_expression -> array_creation_expression .)
    TIMES           reduce using rule 134 (primary_expression -> array_creation_expression .)
    DIVIDE          reduce using rule 134 (primary_expression -> array_creation_expression .)
    MOD             reduce using rule 134 (primary_expression -> array_creation_expression .)
    PLUS            reduce using rule 134 (primary_expression -> array_creation_expression .)
    MINUS           reduce using rule 134 (primary_expression -> array_creation_expression .)
    LSHIFT          reduce using rule 134 (primary_expression -> array_creation_expression .)
    RSHIFT          reduce using rule 134 (primary_expression -> array_creation_expression .)
    LT              reduce using rule 134 (primary_expression -> array_creation_expression .)
    GT              reduce using rule 134 (primary_expression -> array_creation_expression .)
    LEQ             reduce using rule 134 (primary_expression -> array_creation_expression .)
    GEQ             reduce using rule 134 (primary_expression -> array_creation_expression .)
    EQ              reduce using rule 134 (primary_expression -> array_creation_expression .)
    NE              reduce using rule 134 (primary_expression -> array_creation_expression .)
    AND             reduce using rule 134 (primary_expression -> array_creation_expression .)
    XOR             reduce using rule 134 (primary_expression -> array_creation_expression .)
    OR              reduce using rule 134 (primary_expression -> array_creation_expression .)
    CONAND          reduce using rule 134 (primary_expression -> array_creation_expression .)
    CONOR           reduce using rule 134 (primary_expression -> array_creation_expression .)
    TERMINATOR      reduce using rule 134 (primary_expression -> array_creation_expression .)
    COMMA           reduce using rule 134 (primary_expression -> array_creation_expression .)
    RPAREN          reduce using rule 134 (primary_expression -> array_creation_expression .)
    RBRACKET        reduce using rule 134 (primary_expression -> array_creation_expression .)
    RBRACE          reduce using rule 134 (primary_expression -> array_creation_expression .)
    EQUALS          reduce using rule 134 (primary_expression -> array_creation_expression .)


state 132

    (111) invocation_expression -> proper_identifier . LPAREN argument_list RPAREN
    (112) invocation_expression -> proper_identifier . LPAREN RPAREN
    (28) class_type -> proper_identifier .

    LPAREN          shift and go to state 208
    IDENTIFIER      reduce using rule 28 (class_type -> proper_identifier .)
    LBRACKET        reduce using rule 28 (class_type -> proper_identifier .)


state 133

    (93) literal -> INTCONST .

    LBRACKET        reduce using rule 93 (literal -> INTCONST .)
    MEMBERACCESS    reduce using rule 93 (literal -> INTCONST .)
    INCREMENT       reduce using rule 93 (literal -> INTCONST .)
    LPAREN          reduce using rule 93 (literal -> INTCONST .)
    DECREMENT       reduce using rule 93 (literal -> INTCONST .)
    EQUALS          reduce using rule 93 (literal -> INTCONST .)
    TIMES           reduce using rule 93 (literal -> INTCONST .)
    DIVIDE          reduce using rule 93 (literal -> INTCONST .)
    MOD             reduce using rule 93 (literal -> INTCONST .)
    PLUS            reduce using rule 93 (literal -> INTCONST .)
    MINUS           reduce using rule 93 (literal -> INTCONST .)
    LSHIFT          reduce using rule 93 (literal -> INTCONST .)
    RSHIFT          reduce using rule 93 (literal -> INTCONST .)
    LT              reduce using rule 93 (literal -> INTCONST .)
    GT              reduce using rule 93 (literal -> INTCONST .)
    LEQ             reduce using rule 93 (literal -> INTCONST .)
    GEQ             reduce using rule 93 (literal -> INTCONST .)
    EQ              reduce using rule 93 (literal -> INTCONST .)
    NE              reduce using rule 93 (literal -> INTCONST .)
    AND             reduce using rule 93 (literal -> INTCONST .)
    XOR             reduce using rule 93 (literal -> INTCONST .)
    OR              reduce using rule 93 (literal -> INTCONST .)
    CONAND          reduce using rule 93 (literal -> INTCONST .)
    CONOR           reduce using rule 93 (literal -> INTCONST .)
    RPAREN          reduce using rule 93 (literal -> INTCONST .)
    COMMA           reduce using rule 93 (literal -> INTCONST .)
    TERMINATOR      reduce using rule 93 (literal -> INTCONST .)
    RBRACKET        reduce using rule 93 (literal -> INTCONST .)
    RBRACE          reduce using rule 93 (literal -> INTCONST .)


state 134

    (125) unary_expression -> PLUS . unary_expression
    (126) unary_expression -> PLUS . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 209
    prefix                         shift and go to state 46
    post_increment_expression      shift and go to state 150
    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 210
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 135

    (103) statement_expression -> assignment .

    TERMINATOR      reduce using rule 103 (statement_expression -> assignment .)


state 136

    (89) break_statement -> BREAK . TERMINATOR

    TERMINATOR      shift and go to state 211


state 137

    (129) unary_expression -> LNOT . unary_expression
    (130) unary_expression -> LNOT . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 212
    prefix                         shift and go to state 46
    post_increment_expression      shift and go to state 150
    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 213
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 138

    (133) primary_expression -> primary_no_array_creation_expression .
    (150) element_access -> primary_no_array_creation_expression . LBRACKET expression_list RBRACKET

    MEMBERACCESS    reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    INCREMENT       reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    LPAREN          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    DECREMENT       reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    TIMES           reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    DIVIDE          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    MOD             reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    PLUS            reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    MINUS           reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    LSHIFT          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    RSHIFT          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    LT              reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    GT              reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    LEQ             reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    GEQ             reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    EQ              reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    NE              reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    AND             reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    XOR             reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    OR              reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    CONAND          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    CONOR           reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    TERMINATOR      reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    COMMA           reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    RPAREN          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    RBRACKET        reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    RBRACE          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    EQUALS          reduce using rule 133 (primary_expression -> primary_no_array_creation_expression .)
    LBRACKET        shift and go to state 214


state 139

    (81) embedded_statement -> TERMINATOR .

    RBRACE          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    TERMINATOR      reduce using rule 81 (embedded_statement -> TERMINATOR .)
    LBRACE          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    PRINT           reduce using rule 81 (embedded_statement -> TERMINATOR .)
    BREAK           reduce using rule 81 (embedded_statement -> TERMINATOR .)
    RETURN          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    NEW             reduce using rule 81 (embedded_statement -> TERMINATOR .)
    IF              reduce using rule 81 (embedded_statement -> TERMINATOR .)
    WHILE           reduce using rule 81 (embedded_statement -> TERMINATOR .)
    OBJECT          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    IDENTIFIER      reduce using rule 81 (embedded_statement -> TERMINATOR .)
    INT             reduce using rule 81 (embedded_statement -> TERMINATOR .)
    CHAR            reduce using rule 81 (embedded_statement -> TERMINATOR .)
    PLUS            reduce using rule 81 (embedded_statement -> TERMINATOR .)
    MINUS           reduce using rule 81 (embedded_statement -> TERMINATOR .)
    LNOT            reduce using rule 81 (embedded_statement -> TERMINATOR .)
    TILDE           reduce using rule 81 (embedded_statement -> TERMINATOR .)
    INTCONST        reduce using rule 81 (embedded_statement -> TERMINATOR .)
    STRCONST        reduce using rule 81 (embedded_statement -> TERMINATOR .)
    CHARCONST       reduce using rule 81 (embedded_statement -> TERMINATOR .)
    LPAREN          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    TYPEOF          reduce using rule 81 (embedded_statement -> TERMINATOR .)
    ELSE            reduce using rule 81 (embedded_statement -> TERMINATOR .)


state 140

    (86) embedded_statement -> break_statement .

    RBRACE          reduce using rule 86 (embedded_statement -> break_statement .)
    TERMINATOR      reduce using rule 86 (embedded_statement -> break_statement .)
    LBRACE          reduce using rule 86 (embedded_statement -> break_statement .)
    PRINT           reduce using rule 86 (embedded_statement -> break_statement .)
    BREAK           reduce using rule 86 (embedded_statement -> break_statement .)
    RETURN          reduce using rule 86 (embedded_statement -> break_statement .)
    NEW             reduce using rule 86 (embedded_statement -> break_statement .)
    IF              reduce using rule 86 (embedded_statement -> break_statement .)
    WHILE           reduce using rule 86 (embedded_statement -> break_statement .)
    OBJECT          reduce using rule 86 (embedded_statement -> break_statement .)
    IDENTIFIER      reduce using rule 86 (embedded_statement -> break_statement .)
    INT             reduce using rule 86 (embedded_statement -> break_statement .)
    CHAR            reduce using rule 86 (embedded_statement -> break_statement .)
    PLUS            reduce using rule 86 (embedded_statement -> break_statement .)
    MINUS           reduce using rule 86 (embedded_statement -> break_statement .)
    LNOT            reduce using rule 86 (embedded_statement -> break_statement .)
    TILDE           reduce using rule 86 (embedded_statement -> break_statement .)
    INTCONST        reduce using rule 86 (embedded_statement -> break_statement .)
    STRCONST        reduce using rule 86 (embedded_statement -> break_statement .)
    CHARCONST       reduce using rule 86 (embedded_statement -> break_statement .)
    LPAREN          reduce using rule 86 (embedded_statement -> break_statement .)
    TYPEOF          reduce using rule 86 (embedded_statement -> break_statement .)
    ELSE            reduce using rule 86 (embedded_statement -> break_statement .)


state 141

    (78) statement -> local_variable_declaration . TERMINATOR

    TERMINATOR      shift and go to state 215


state 142

    (131) unary_expression -> TILDE . unary_expression
    (132) unary_expression -> TILDE . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 216
    prefix                         shift and go to state 46
    post_increment_expression      shift and go to state 150
    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 217
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 143

    (88) print_statement -> PRINT . LPAREN expression RPAREN TERMINATOR

    LPAREN          shift and go to state 218


state 144

    (107) invocation_expression -> primary_expression . LPAREN argument_list RPAREN
    (108) invocation_expression -> primary_expression . LPAREN RPAREN
    (154) post_increment_expression -> primary_expression . INCREMENT
    (156) post_decrement_expression -> primary_expression . DECREMENT
    (124) unary_expression -> primary_expression .
    (145) member_access -> primary_expression . MEMBERACCESS identifier

    LPAREN          shift and go to state 220
    INCREMENT       shift and go to state 221
    DECREMENT       shift and go to state 222
    EQUALS          reduce using rule 124 (unary_expression -> primary_expression .)
    MEMBERACCESS    shift and go to state 219


state 145

    (135) primary_no_array_creation_expression -> literal .

    LBRACKET        reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    MEMBERACCESS    reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    INCREMENT       reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    LPAREN          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    DECREMENT       reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    EQUALS          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    TIMES           reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    DIVIDE          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    MOD             reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    PLUS            reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    MINUS           reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    LSHIFT          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    RSHIFT          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    LT              reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    GT              reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    LEQ             reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    GEQ             reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    EQ              reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    NE              reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    AND             reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    XOR             reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    OR              reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    CONAND          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    CONOR           reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    RPAREN          reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    COMMA           reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    TERMINATOR      reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    RBRACKET        reduce using rule 135 (primary_no_array_creation_expression -> literal .)
    RBRACE          reduce using rule 135 (primary_no_array_creation_expression -> literal .)


state 146

    (188) non_assignment_expression -> conditional_expression .

    TERMINATOR      reduce using rule 188 (non_assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 188 (non_assignment_expression -> conditional_expression .)
    RPAREN          reduce using rule 188 (non_assignment_expression -> conditional_expression .)
    RBRACKET        reduce using rule 188 (non_assignment_expression -> conditional_expression .)
    RBRACE          reduce using rule 188 (non_assignment_expression -> conditional_expression .)


state 147

    (122) assignment -> identifier . assignment_operator expression
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS
    (215) multiplicative_expression -> identifier .
    (123) assignment_operator -> . EQUALS

    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223
    TIMES           reduce using rule 215 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 215 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 215 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 215 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 215 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    LT              reduce using rule 215 (multiplicative_expression -> identifier .)
    GT              reduce using rule 215 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 215 (multiplicative_expression -> identifier .)
    NE              reduce using rule 215 (multiplicative_expression -> identifier .)
    AND             reduce using rule 215 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 215 (multiplicative_expression -> identifier .)
    OR              reduce using rule 215 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 215 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 215 (multiplicative_expression -> identifier .)
    RPAREN          reduce using rule 215 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 215 (multiplicative_expression -> identifier .)
    TERMINATOR      reduce using rule 215 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 215 (multiplicative_expression -> identifier .)
    RBRACKET        reduce using rule 215 (multiplicative_expression -> identifier .)
    EQUALS          shift and go to state 185

    assignment_operator            shift and go to state 183

state 148

    (140) primary_no_array_creation_expression -> invocation_expression .

    LBRACKET        reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    MEMBERACCESS    reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    INCREMENT       reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    LPAREN          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    DECREMENT       reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    EQUALS          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    TIMES           reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    DIVIDE          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    MOD             reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    PLUS            reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    MINUS           reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    LSHIFT          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    RSHIFT          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    LT              reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    GT              reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    LEQ             reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    GEQ             reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    EQ              reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    NE              reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    AND             reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    XOR             reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    OR              reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    CONAND          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    CONOR           reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    RPAREN          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    COMMA           reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    TERMINATOR      reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    RBRACKET        reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)
    RBRACE          reduce using rule 140 (primary_no_array_creation_expression -> invocation_expression .)


state 149

    (120) expression -> assignment .

    TERMINATOR      reduce using rule 120 (expression -> assignment .)
    COMMA           reduce using rule 120 (expression -> assignment .)
    RPAREN          reduce using rule 120 (expression -> assignment .)
    RBRACKET        reduce using rule 120 (expression -> assignment .)
    RBRACE          reduce using rule 120 (expression -> assignment .)


state 150

    (139) primary_no_array_creation_expression -> post_increment_expression .

    LBRACKET        reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    MEMBERACCESS    reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    INCREMENT       reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    LPAREN          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    DECREMENT       reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    EQUALS          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    TIMES           reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    DIVIDE          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    MOD             reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    PLUS            reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    MINUS           reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    LSHIFT          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    RSHIFT          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    LT              reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    GT              reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    LEQ             reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    GEQ             reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    EQ              reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    NE              reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    AND             reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    XOR             reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    OR              reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    CONAND          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    CONOR           reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    RPAREN          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    COMMA           reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    TERMINATOR      reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    RBRACKET        reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)
    RBRACE          reduce using rule 139 (primary_no_array_creation_expression -> post_increment_expression .)


state 151

    (121) assignment -> unary_expression . assignment_operator expression
    (214) multiplicative_expression -> unary_expression .
    (123) assignment_operator -> . EQUALS

    TIMES           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    DIVIDE          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 214 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LSHIFT          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RSHIFT          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    NE              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    XOR             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    CONAND          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    CONOR           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    TERMINATOR      reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 214 (multiplicative_expression -> unary_expression .)
    EQUALS          shift and go to state 185

    assignment_operator            shift and go to state 205

state 152

    (194) inclusive_or_expression -> exclusive_or_expression .
    (197) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    CONAND          reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    CONOR           reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    RPAREN          reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACKET        reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACE          reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    TERMINATOR      reduce using rule 194 (inclusive_or_expression -> exclusive_or_expression .)
    XOR             shift and go to state 224


state 153

    (41) variable_initializer -> expression .

    TERMINATOR      reduce using rule 41 (variable_initializer -> expression .)
    COMMA           reduce using rule 41 (variable_initializer -> expression .)


state 154

    (203) relational_expression -> shift_expression .
    (209) shift_expression -> shift_expression . LSHIFT additive_expression
    (210) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 203 (relational_expression -> shift_expression .)
    GT              reduce using rule 203 (relational_expression -> shift_expression .)
    LEQ             reduce using rule 203 (relational_expression -> shift_expression .)
    GEQ             reduce using rule 203 (relational_expression -> shift_expression .)
    EQ              reduce using rule 203 (relational_expression -> shift_expression .)
    NE              reduce using rule 203 (relational_expression -> shift_expression .)
    AND             reduce using rule 203 (relational_expression -> shift_expression .)
    XOR             reduce using rule 203 (relational_expression -> shift_expression .)
    OR              reduce using rule 203 (relational_expression -> shift_expression .)
    CONAND          reduce using rule 203 (relational_expression -> shift_expression .)
    CONOR           reduce using rule 203 (relational_expression -> shift_expression .)
    TERMINATOR      reduce using rule 203 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 203 (relational_expression -> shift_expression .)
    RPAREN          reduce using rule 203 (relational_expression -> shift_expression .)
    RBRACKET        reduce using rule 203 (relational_expression -> shift_expression .)
    RBRACE          reduce using rule 203 (relational_expression -> shift_expression .)
    LSHIFT          shift and go to state 226
    RSHIFT          shift and go to state 225


state 155

    (40) variable_declarator -> identifier EQUALS variable_initializer .

    TERMINATOR      reduce using rule 40 (variable_declarator -> identifier EQUALS variable_initializer .)
    COMMA           reduce using rule 40 (variable_declarator -> identifier EQUALS variable_initializer .)


state 156

    (211) additive_expression -> multiplicative_expression .
    (216) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (217) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (218) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (219) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (220) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (221) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 211 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 211 (additive_expression -> multiplicative_expression .)
    LSHIFT          reduce using rule 211 (additive_expression -> multiplicative_expression .)
    RSHIFT          reduce using rule 211 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 211 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 211 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 211 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 211 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 211 (additive_expression -> multiplicative_expression .)
    NE              reduce using rule 211 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 211 (additive_expression -> multiplicative_expression .)
    XOR             reduce using rule 211 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 211 (additive_expression -> multiplicative_expression .)
    CONAND          reduce using rule 211 (additive_expression -> multiplicative_expression .)
    CONOR           reduce using rule 211 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 211 (additive_expression -> multiplicative_expression .)
    TERMINATOR      reduce using rule 211 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 211 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 211 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 211 (additive_expression -> multiplicative_expression .)
    TIMES           shift and go to state 228
    DIVIDE          shift and go to state 227
    MOD             shift and go to state 229


state 157

    (142) primary_no_array_creation_expression -> object_creation_expression .

    LBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    MEMBERACCESS    reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    INCREMENT       reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    LPAREN          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    DECREMENT       reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    EQUALS          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    TIMES           reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    DIVIDE          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    MOD             reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    PLUS            reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    MINUS           reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    LSHIFT          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    RSHIFT          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    LT              reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    GT              reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    LEQ             reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    GEQ             reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    EQ              reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    NE              reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    AND             reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    XOR             reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    OR              reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    CONAND          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    CONOR           reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    RPAREN          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    COMMA           reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    TERMINATOR      reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    RBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)
    RBRACE          reduce using rule 142 (primary_no_array_creation_expression -> object_creation_expression .)


state 158

    (141) primary_no_array_creation_expression -> post_decrement_expression .

    LBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    MEMBERACCESS    reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    INCREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    LPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    DECREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQUALS          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    TIMES           reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    DIVIDE          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    MOD             reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    PLUS            reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    MINUS           reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    LSHIFT          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    RSHIFT          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    LT              reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    GT              reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    LEQ             reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    GEQ             reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQ              reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    NE              reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    AND             reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    XOR             reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    OR              reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    CONAND          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    CONOR           reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    RPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    COMMA           reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    TERMINATOR      reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    RBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)
    RBRACE          reduce using rule 141 (primary_no_array_creation_expression -> post_decrement_expression .)


state 159

    (190) conditional_or_expression -> conditional_and_expression .
    (193) conditional_and_expression -> conditional_and_expression . CONAND inclusive_or_expression

    CONOR           reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    RBRACKET        reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    COMMA           reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    RBRACE          reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    TERMINATOR      reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    RPAREN          reduce using rule 190 (conditional_or_expression -> conditional_and_expression .)
    CONAND          shift and go to state 230


state 160

    (111) invocation_expression -> proper_identifier . LPAREN argument_list RPAREN
    (112) invocation_expression -> proper_identifier . LPAREN RPAREN

    LPAREN          shift and go to state 208


state 161

    (147) member_access -> predefined_type . MEMBERACCESS identifier

    MEMBERACCESS    shift and go to state 194


state 162

    (192) conditional_and_expression -> inclusive_or_expression .
    (195) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    CONAND          reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    CONOR           reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    RBRACKET        reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    RPAREN          reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    TERMINATOR      reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    RBRACE          reduce using rule 192 (conditional_and_expression -> inclusive_or_expression .)
    OR              shift and go to state 231


state 163

    (119) expression -> non_assignment_expression .

    TERMINATOR      reduce using rule 119 (expression -> non_assignment_expression .)
    COMMA           reduce using rule 119 (expression -> non_assignment_expression .)
    RPAREN          reduce using rule 119 (expression -> non_assignment_expression .)
    RBRACKET        reduce using rule 119 (expression -> non_assignment_expression .)
    RBRACE          reduce using rule 119 (expression -> non_assignment_expression .)


state 164

    (200) equality_expression -> relational_expression .
    (204) relational_expression -> relational_expression . LT shift_expression
    (205) relational_expression -> relational_expression . GT shift_expression
    (206) relational_expression -> relational_expression . LEQ shift_expression
    (207) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 200 (equality_expression -> relational_expression .)
    NE              reduce using rule 200 (equality_expression -> relational_expression .)
    AND             reduce using rule 200 (equality_expression -> relational_expression .)
    XOR             reduce using rule 200 (equality_expression -> relational_expression .)
    OR              reduce using rule 200 (equality_expression -> relational_expression .)
    CONAND          reduce using rule 200 (equality_expression -> relational_expression .)
    CONOR           reduce using rule 200 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 200 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 200 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 200 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 200 (equality_expression -> relational_expression .)
    TERMINATOR      reduce using rule 200 (equality_expression -> relational_expression .)
    LT              shift and go to state 232
    GT              shift and go to state 235
    LEQ             shift and go to state 234
    GEQ             shift and go to state 233


state 165

    (198) and_expression -> equality_expression .
    (201) equality_expression -> equality_expression . EQ relational_expression
    (202) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 198 (and_expression -> equality_expression .)
    XOR             reduce using rule 198 (and_expression -> equality_expression .)
    OR              reduce using rule 198 (and_expression -> equality_expression .)
    CONAND          reduce using rule 198 (and_expression -> equality_expression .)
    CONOR           reduce using rule 198 (and_expression -> equality_expression .)
    TERMINATOR      reduce using rule 198 (and_expression -> equality_expression .)
    RPAREN          reduce using rule 198 (and_expression -> equality_expression .)
    COMMA           reduce using rule 198 (and_expression -> equality_expression .)
    RBRACKET        reduce using rule 198 (and_expression -> equality_expression .)
    RBRACE          reduce using rule 198 (and_expression -> equality_expression .)
    EQ              shift and go to state 237
    NE              shift and go to state 236


state 166

    (196) exclusive_or_expression -> and_expression .
    (199) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 196 (exclusive_or_expression -> and_expression .)
    OR              reduce using rule 196 (exclusive_or_expression -> and_expression .)
    CONAND          reduce using rule 196 (exclusive_or_expression -> and_expression .)
    CONOR           reduce using rule 196 (exclusive_or_expression -> and_expression .)
    RBRACKET        reduce using rule 196 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 196 (exclusive_or_expression -> and_expression .)
    RPAREN          reduce using rule 196 (exclusive_or_expression -> and_expression .)
    RBRACE          reduce using rule 196 (exclusive_or_expression -> and_expression .)
    TERMINATOR      reduce using rule 196 (exclusive_or_expression -> and_expression .)
    AND             shift and go to state 238


state 167

    (208) shift_expression -> additive_expression .
    (212) additive_expression -> additive_expression . PLUS multiplicative_expression
    (213) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 208 (shift_expression -> additive_expression .)
    RSHIFT          reduce using rule 208 (shift_expression -> additive_expression .)
    LT              reduce using rule 208 (shift_expression -> additive_expression .)
    GT              reduce using rule 208 (shift_expression -> additive_expression .)
    LEQ             reduce using rule 208 (shift_expression -> additive_expression .)
    GEQ             reduce using rule 208 (shift_expression -> additive_expression .)
    EQ              reduce using rule 208 (shift_expression -> additive_expression .)
    NE              reduce using rule 208 (shift_expression -> additive_expression .)
    AND             reduce using rule 208 (shift_expression -> additive_expression .)
    XOR             reduce using rule 208 (shift_expression -> additive_expression .)
    OR              reduce using rule 208 (shift_expression -> additive_expression .)
    CONAND          reduce using rule 208 (shift_expression -> additive_expression .)
    CONOR           reduce using rule 208 (shift_expression -> additive_expression .)
    RBRACE          reduce using rule 208 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 208 (shift_expression -> additive_expression .)
    RPAREN          reduce using rule 208 (shift_expression -> additive_expression .)
    TERMINATOR      reduce using rule 208 (shift_expression -> additive_expression .)
    RBRACKET        reduce using rule 208 (shift_expression -> additive_expression .)
    PLUS            shift and go to state 240
    MINUS           shift and go to state 239


state 168

    (124) unary_expression -> primary_expression .
    (145) member_access -> primary_expression . MEMBERACCESS identifier
    (154) post_increment_expression -> primary_expression . INCREMENT
    (107) invocation_expression -> primary_expression . LPAREN argument_list RPAREN
    (108) invocation_expression -> primary_expression . LPAREN RPAREN
    (156) post_decrement_expression -> primary_expression . DECREMENT

    TIMES           reduce using rule 124 (unary_expression -> primary_expression .)
    DIVIDE          reduce using rule 124 (unary_expression -> primary_expression .)
    MOD             reduce using rule 124 (unary_expression -> primary_expression .)
    PLUS            reduce using rule 124 (unary_expression -> primary_expression .)
    MINUS           reduce using rule 124 (unary_expression -> primary_expression .)
    LSHIFT          reduce using rule 124 (unary_expression -> primary_expression .)
    RSHIFT          reduce using rule 124 (unary_expression -> primary_expression .)
    LT              reduce using rule 124 (unary_expression -> primary_expression .)
    GT              reduce using rule 124 (unary_expression -> primary_expression .)
    LEQ             reduce using rule 124 (unary_expression -> primary_expression .)
    GEQ             reduce using rule 124 (unary_expression -> primary_expression .)
    EQ              reduce using rule 124 (unary_expression -> primary_expression .)
    NE              reduce using rule 124 (unary_expression -> primary_expression .)
    AND             reduce using rule 124 (unary_expression -> primary_expression .)
    XOR             reduce using rule 124 (unary_expression -> primary_expression .)
    OR              reduce using rule 124 (unary_expression -> primary_expression .)
    CONAND          reduce using rule 124 (unary_expression -> primary_expression .)
    CONOR           reduce using rule 124 (unary_expression -> primary_expression .)
    TERMINATOR      reduce using rule 124 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 124 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 124 (unary_expression -> primary_expression .)
    RBRACKET        reduce using rule 124 (unary_expression -> primary_expression .)
    RBRACE          reduce using rule 124 (unary_expression -> primary_expression .)
    EQUALS          reduce using rule 124 (unary_expression -> primary_expression .)
    MEMBERACCESS    shift and go to state 219
    INCREMENT       shift and go to state 221
    LPAREN          shift and go to state 220
    DECREMENT       shift and go to state 222


state 169

    (189) conditional_expression -> conditional_or_expression .
    (191) conditional_or_expression -> conditional_or_expression . CONOR conditional_and_expression

    TERMINATOR      reduce using rule 189 (conditional_expression -> conditional_or_expression .)
    COMMA           reduce using rule 189 (conditional_expression -> conditional_or_expression .)
    RPAREN          reduce using rule 189 (conditional_expression -> conditional_or_expression .)
    RBRACKET        reduce using rule 189 (conditional_expression -> conditional_or_expression .)
    RBRACE          reduce using rule 189 (conditional_expression -> conditional_or_expression .)
    CONOR           shift and go to state 241


state 170

    (181) array_creation_expression -> NEW . non_array_type LBRACKET expression RBRACKET
    (158) object_creation_expression -> NEW . type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> NEW . type LPAREN argument_list RPAREN
    (160) object_creation_expression -> NEW . type LPAREN RPAREN
    (161) object_creation_expression -> NEW . type object_or_collection_initializer
    (34) non_array_type -> . type
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    prefix                         shift and go to state 46
    proper_identifier              shift and go to state 39
    type_parameter                 shift and go to state 32
    class_type                     shift and go to state 37
    type                           shift and go to state 192
    non_array_type                 shift and go to state 193
    reference_type                 shift and go to state 50

state 171

    (47) method_header -> type member_name LPAREN RPAREN .

    TERMINATOR      reduce using rule 47 (method_header -> type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 47 (method_header -> type member_name LPAREN RPAREN .)


state 172

    (45) method_header -> type member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 242
    COMMA           shift and go to state 95


state 173

    (39) variable_declarator -> identifier .
    (40) variable_declarator -> identifier . EQUALS variable_initializer

    TERMINATOR      reduce using rule 39 (variable_declarator -> identifier .)
    COMMA           reduce using rule 39 (variable_declarator -> identifier .)
    EQUALS          shift and go to state 83


state 174

    (38) variable_declarators -> variable_declarators COMMA variable_declarator .

    TERMINATOR      reduce using rule 38 (variable_declarators -> variable_declarators COMMA variable_declarator .)
    COMMA           reduce using rule 38 (variable_declarators -> variable_declarators COMMA variable_declarator .)


state 175

    (50) method_header -> modifiers VOID member_name LPAREN . fixed_parameters RPAREN
    (52) method_header -> modifiers VOID member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 243
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 77
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    prefix                         shift and go to state 46
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50
    fixed_parameters               shift and go to state 244

state 176

    (46) method_header -> modifiers type member_name LPAREN . fixed_parameters RPAREN
    (48) method_header -> modifiers type member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 245
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    fixed_parameter                shift and go to state 77
    predefined_type                shift and go to state 42
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 44
    proper_identifier              shift and go to state 39
    prefix                         shift and go to state 46
    type_parameter                 shift and go to state 32
    type                           shift and go to state 78
    class_type                     shift and go to state 37
    reference_type                 shift and go to state 50
    fixed_parameters               shift and go to state 246

state 177

    (22) field_declaration -> modifiers type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    VOID            reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    INT             reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)


state 178

    (70) destructor_declaration -> TILDE identifier LPAREN RPAREN . destructor_body
    (71) destructor_body -> . block
    (72) destructor_body -> . TERMINATOR
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE

    TERMINATOR      shift and go to state 249
    LBRACE          shift and go to state 57

    block                          shift and go to state 247
    destructor_body                shift and go to state 248

state 179

    (64) default_argument -> EQUALS . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 250
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 180

    (62) fixed_parameter -> type identifier default_argument .

    RPAREN          reduce using rule 62 (fixed_parameter -> type identifier default_argument .)
    COMMA           reduce using rule 62 (fixed_parameter -> type identifier default_argument .)


state 181

    (61) fixed_parameters -> fixed_parameters COMMA fixed_parameter .

    RPAREN          reduce using rule 61 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)
    COMMA           reduce using rule 61 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)


state 182

    (49) method_header -> VOID member_name LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 49 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 49 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)


state 183

    (122) assignment -> identifier assignment_operator . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    unary_expression               shift and go to state 151
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 251
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 184

    (109) invocation_expression -> identifier LPAREN . RPAREN
    (110) invocation_expression -> identifier LPAREN . argument_list RPAREN
    (162) argument_list -> . argument
    (163) argument_list -> . argument_list COMMA argument
    (164) argument -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 252
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    conditional_and_expression     shift and go to state 159
    invocation_expression          shift and go to state 148
    non_assignment_expression      shift and go to state 163
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    assignment                     shift and go to state 149
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    argument                       shift and go to state 255
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 253
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    argument_list                  shift and go to state 254
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 185

    (123) assignment_operator -> EQUALS .

    PLUS            reduce using rule 123 (assignment_operator -> EQUALS .)
    MINUS           reduce using rule 123 (assignment_operator -> EQUALS .)
    LNOT            reduce using rule 123 (assignment_operator -> EQUALS .)
    TILDE           reduce using rule 123 (assignment_operator -> EQUALS .)
    IDENTIFIER      reduce using rule 123 (assignment_operator -> EQUALS .)
    NEW             reduce using rule 123 (assignment_operator -> EQUALS .)
    INTCONST        reduce using rule 123 (assignment_operator -> EQUALS .)
    STRCONST        reduce using rule 123 (assignment_operator -> EQUALS .)
    CHARCONST       reduce using rule 123 (assignment_operator -> EQUALS .)
    LPAREN          reduce using rule 123 (assignment_operator -> EQUALS .)
    TYPEOF          reduce using rule 123 (assignment_operator -> EQUALS .)
    INT             reduce using rule 123 (assignment_operator -> EQUALS .)
    CHAR            reduce using rule 123 (assignment_operator -> EQUALS .)


state 186

    (31) prefix -> identifier MEMBERACCESS .
    (187) iMEMAi -> identifier MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)

  ! IDENTIFIER      [ shift and go to state 16 ]

    identifier                     shift and go to state 256

state 187

    (151) element_access -> identifier LBRACKET . expression_list RBRACKET
    (152) expression_list -> . expression
    (153) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 257
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    expression_list                shift and go to state 258
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 188

    (155) post_increment_expression -> identifier INCREMENT .

    LBRACKET        reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    MEMBERACCESS    reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    INCREMENT       reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    LPAREN          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    DECREMENT       reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    TIMES           reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    DIVIDE          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    MOD             reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    PLUS            reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    MINUS           reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    LSHIFT          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    RSHIFT          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    LT              reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    GT              reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    LEQ             reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    GEQ             reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    EQ              reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    NE              reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    AND             reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    XOR             reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    OR              reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    CONAND          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    CONOR           reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    TERMINATOR      reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    COMMA           reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    RPAREN          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    RBRACKET        reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    RBRACE          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)
    EQUALS          reduce using rule 155 (post_increment_expression -> identifier INCREMENT .)


state 189

    (157) post_decrement_expression -> identifier DECREMENT .

    LBRACKET        reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    MEMBERACCESS    reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    INCREMENT       reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    LPAREN          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    DECREMENT       reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    EQUALS          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    TIMES           reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    DIVIDE          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    MOD             reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    PLUS            reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    MINUS           reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    LSHIFT          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    RSHIFT          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    LT              reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    GT              reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    LEQ             reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    GEQ             reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    EQ              reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    NE              reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    AND             reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    XOR             reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    OR              reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    CONAND          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    CONOR           reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    RPAREN          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    RBRACKET        reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    COMMA           reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    TERMINATOR      reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)
    RBRACE          reduce using rule 157 (post_decrement_expression -> identifier DECREMENT .)


state 190

    (77) statement_list -> statement_list statement .

    RBRACE          reduce using rule 77 (statement_list -> statement_list statement .)
    TERMINATOR      reduce using rule 77 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 77 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 77 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 77 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 77 (statement_list -> statement_list statement .)
    NEW             reduce using rule 77 (statement_list -> statement_list statement .)
    IF              reduce using rule 77 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 77 (statement_list -> statement_list statement .)
    OBJECT          reduce using rule 77 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 77 (statement_list -> statement_list statement .)
    INT             reduce using rule 77 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 77 (statement_list -> statement_list statement .)
    PLUS            reduce using rule 77 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 77 (statement_list -> statement_list statement .)
    LNOT            reduce using rule 77 (statement_list -> statement_list statement .)
    TILDE           reduce using rule 77 (statement_list -> statement_list statement .)
    INTCONST        reduce using rule 77 (statement_list -> statement_list statement .)
    STRCONST        reduce using rule 77 (statement_list -> statement_list statement .)
    CHARCONST       reduce using rule 77 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 77 (statement_list -> statement_list statement .)
    TYPEOF          reduce using rule 77 (statement_list -> statement_list statement .)


state 191

    (74) block -> LBRACE scope_marker statement_list RBRACE .

    RBRACE          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    TERMINATOR      reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    LBRACE          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    PRINT           reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    BREAK           reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    RETURN          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    NEW             reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    IF              reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    WHILE           reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    OBJECT          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    IDENTIFIER      reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    INT             reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    CHAR            reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    PLUS            reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    MINUS           reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    LNOT            reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    TILDE           reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    INTCONST        reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    STRCONST        reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    CHARCONST       reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    LPAREN          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    TYPEOF          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    ELSE            reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    VOID            reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    PUBLIC          reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)
    PRIVATE         reduce using rule 74 (block -> LBRACE scope_marker statement_list RBRACE .)


state 192

    (158) object_creation_expression -> NEW type . LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> NEW type . LPAREN argument_list RPAREN
    (160) object_creation_expression -> NEW type . LPAREN RPAREN
    (161) object_creation_expression -> NEW type . object_or_collection_initializer
    (34) non_array_type -> type .
    (165) object_or_collection_initializer -> . object_initializer
    (166) object_or_collection_initializer -> . collection_initializer
    (167) object_initializer -> . LBRACE member_initializer_list RBRACE
    (168) object_initializer -> . LBRACE RBRACE
    (169) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (175) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (176) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE

    LPAREN          shift and go to state 260
    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    LBRACE          shift and go to state 259

    collection_initializer         shift and go to state 262
    object_initializer             shift and go to state 263
    object_or_collection_initializer shift and go to state 261

state 193

    (181) array_creation_expression -> NEW non_array_type . LBRACKET expression RBRACKET
    (33) array_type -> non_array_type . LBRACKET RBRACKET

    LBRACKET        shift and go to state 264


state 194

    (147) member_access -> predefined_type MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 265

state 195

    (92) return_statement -> RETURN expression . TERMINATOR

    TERMINATOR      shift and go to state 266


state 196

    (91) return_statement -> RETURN TERMINATOR .

    RBRACE          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    TERMINATOR      reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    LBRACE          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    PRINT           reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    BREAK           reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    RETURN          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    NEW             reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    IF              reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    WHILE           reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    OBJECT          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    IDENTIFIER      reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    INT             reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    CHAR            reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    PLUS            reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    MINUS           reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    LNOT            reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    TILDE           reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    INTCONST        reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    STRCONST        reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    CHARCONST       reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    LPAREN          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    TYPEOF          reduce using rule 91 (return_statement -> RETURN TERMINATOR .)
    ELSE            reduce using rule 91 (return_statement -> RETURN TERMINATOR .)


state 197

    (117) iteration_statement -> while LPAREN . expression RPAREN embedded_statement
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    conditional_expression         shift and go to state 146
    unary_expression               shift and go to state 151
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 267
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 198

    (96) local_variable_declaration -> type local_variable_declarators .
    (98) local_variable_declarators -> local_variable_declarators . COMMA local_variable_declarator

    TERMINATOR      reduce using rule 96 (local_variable_declaration -> type local_variable_declarators .)
    COMMA           shift and go to state 268


state 199

    (99) local_variable_declarator -> identifier .
    (100) local_variable_declarator -> identifier . EQUALS local_variable_initializer

    COMMA           reduce using rule 99 (local_variable_declarator -> identifier .)
    TERMINATOR      reduce using rule 99 (local_variable_declarator -> identifier .)
    EQUALS          shift and go to state 269


state 200

    (97) local_variable_declarators -> local_variable_declarator .

    COMMA           reduce using rule 97 (local_variable_declarators -> local_variable_declarator .)
    TERMINATOR      reduce using rule 97 (local_variable_declarators -> local_variable_declarator .)


state 201

    (182) typeof_expression -> TYPEOF LPAREN . type RPAREN
    (183) typeof_expression -> TYPEOF LPAREN . unbound_type_name RPAREN
    (184) typeof_expression -> TYPEOF LPAREN . VOID RPAREN
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (185) unbound_type_name -> . iMEMAi
    (186) unbound_type_name -> . unbound_type_name MEMBERACCESS identifier
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    VOID            shift and go to state 271
    OBJECT          shift and go to state 33
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    array_type                     shift and go to state 27
    predefined_type                shift and go to state 42
    unbound_type_name              shift and go to state 272
    identifier                     shift and go to state 270
    prefix                         shift and go to state 46
    non_array_type                 shift and go to state 44
    type_parameter                 shift and go to state 32
    proper_identifier              shift and go to state 39
    class_type                     shift and go to state 37
    type                           shift and go to state 274
    iMEMAi                         shift and go to state 273
    reference_type                 shift and go to state 50

state 202

    (82) embedded_statement -> statement_expression TERMINATOR .

    RBRACE          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    TERMINATOR      reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    LBRACE          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    PRINT           reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    BREAK           reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    RETURN          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    NEW             reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    IF              reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    WHILE           reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    OBJECT          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    IDENTIFIER      reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    INT             reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    CHAR            reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    PLUS            reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    MINUS           reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    LNOT            reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    TILDE           reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    INTCONST        reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    STRCONST        reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    CHARCONST       reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    LPAREN          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    TYPEOF          reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)
    ELSE            reduce using rule 82 (embedded_statement -> statement_expression TERMINATOR .)


state 203

    (113) if_statement -> if LPAREN . expression RPAREN embedded_statement
    (114) if_statement -> if LPAREN . expression RPAREN embedded_statement else embedded_statement
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 275
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 204

    (144) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 276


state 205

    (121) assignment -> unary_expression assignment_operator . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 277
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 206

    (128) unary_expression -> MINUS identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 128 (unary_expression -> MINUS identifier .)
    DIVIDE          reduce using rule 128 (unary_expression -> MINUS identifier .)
    MOD             reduce using rule 128 (unary_expression -> MINUS identifier .)
    PLUS            reduce using rule 128 (unary_expression -> MINUS identifier .)
    MINUS           reduce using rule 128 (unary_expression -> MINUS identifier .)
    LSHIFT          reduce using rule 128 (unary_expression -> MINUS identifier .)
    RSHIFT          reduce using rule 128 (unary_expression -> MINUS identifier .)
    LT              reduce using rule 128 (unary_expression -> MINUS identifier .)
    GT              reduce using rule 128 (unary_expression -> MINUS identifier .)
    LEQ             reduce using rule 128 (unary_expression -> MINUS identifier .)
    GEQ             reduce using rule 128 (unary_expression -> MINUS identifier .)
    EQ              reduce using rule 128 (unary_expression -> MINUS identifier .)
    NE              reduce using rule 128 (unary_expression -> MINUS identifier .)
    AND             reduce using rule 128 (unary_expression -> MINUS identifier .)
    XOR             reduce using rule 128 (unary_expression -> MINUS identifier .)
    OR              reduce using rule 128 (unary_expression -> MINUS identifier .)
    CONAND          reduce using rule 128 (unary_expression -> MINUS identifier .)
    CONOR           reduce using rule 128 (unary_expression -> MINUS identifier .)
    TERMINATOR      reduce using rule 128 (unary_expression -> MINUS identifier .)
    COMMA           reduce using rule 128 (unary_expression -> MINUS identifier .)
    RPAREN          reduce using rule 128 (unary_expression -> MINUS identifier .)
    RBRACKET        reduce using rule 128 (unary_expression -> MINUS identifier .)
    RBRACE          reduce using rule 128 (unary_expression -> MINUS identifier .)
    EQUALS          reduce using rule 128 (unary_expression -> MINUS identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 207

    (127) unary_expression -> MINUS unary_expression .

    TIMES           reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    DIVIDE          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    MOD             reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    PLUS            reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    MINUS           reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    LSHIFT          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    RSHIFT          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    LT              reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    GT              reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    LEQ             reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    GEQ             reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    EQ              reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    NE              reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    AND             reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    XOR             reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    OR              reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    CONAND          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    CONOR           reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    TERMINATOR      reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    COMMA           reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    RPAREN          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    RBRACKET        reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    RBRACE          reduce using rule 127 (unary_expression -> MINUS unary_expression .)
    EQUALS          reduce using rule 127 (unary_expression -> MINUS unary_expression .)


state 208

    (111) invocation_expression -> proper_identifier LPAREN . argument_list RPAREN
    (112) invocation_expression -> proper_identifier LPAREN . RPAREN
    (162) argument_list -> . argument
    (163) argument_list -> . argument_list COMMA argument
    (164) argument -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 278
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    conditional_and_expression     shift and go to state 159
    post_increment_expression      shift and go to state 150
    non_assignment_expression      shift and go to state 163
    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    assignment                     shift and go to state 149
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    argument                       shift and go to state 255
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 253
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    argument_list                  shift and go to state 279
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165
    invocation_expression          shift and go to state 148

state 209

    (126) unary_expression -> PLUS identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 126 (unary_expression -> PLUS identifier .)
    DIVIDE          reduce using rule 126 (unary_expression -> PLUS identifier .)
    MOD             reduce using rule 126 (unary_expression -> PLUS identifier .)
    PLUS            reduce using rule 126 (unary_expression -> PLUS identifier .)
    MINUS           reduce using rule 126 (unary_expression -> PLUS identifier .)
    LSHIFT          reduce using rule 126 (unary_expression -> PLUS identifier .)
    RSHIFT          reduce using rule 126 (unary_expression -> PLUS identifier .)
    LT              reduce using rule 126 (unary_expression -> PLUS identifier .)
    GT              reduce using rule 126 (unary_expression -> PLUS identifier .)
    LEQ             reduce using rule 126 (unary_expression -> PLUS identifier .)
    GEQ             reduce using rule 126 (unary_expression -> PLUS identifier .)
    EQ              reduce using rule 126 (unary_expression -> PLUS identifier .)
    NE              reduce using rule 126 (unary_expression -> PLUS identifier .)
    AND             reduce using rule 126 (unary_expression -> PLUS identifier .)
    XOR             reduce using rule 126 (unary_expression -> PLUS identifier .)
    OR              reduce using rule 126 (unary_expression -> PLUS identifier .)
    CONAND          reduce using rule 126 (unary_expression -> PLUS identifier .)
    CONOR           reduce using rule 126 (unary_expression -> PLUS identifier .)
    TERMINATOR      reduce using rule 126 (unary_expression -> PLUS identifier .)
    COMMA           reduce using rule 126 (unary_expression -> PLUS identifier .)
    RPAREN          reduce using rule 126 (unary_expression -> PLUS identifier .)
    RBRACKET        reduce using rule 126 (unary_expression -> PLUS identifier .)
    RBRACE          reduce using rule 126 (unary_expression -> PLUS identifier .)
    EQUALS          reduce using rule 126 (unary_expression -> PLUS identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 210

    (125) unary_expression -> PLUS unary_expression .

    TIMES           reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    DIVIDE          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    MOD             reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    PLUS            reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    MINUS           reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    LSHIFT          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    RSHIFT          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    LT              reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    GT              reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    LEQ             reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    GEQ             reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    EQ              reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    NE              reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    AND             reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    XOR             reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    OR              reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    CONAND          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    CONOR           reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    TERMINATOR      reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    COMMA           reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    RPAREN          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    RBRACKET        reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    RBRACE          reduce using rule 125 (unary_expression -> PLUS unary_expression .)
    EQUALS          reduce using rule 125 (unary_expression -> PLUS unary_expression .)


state 211

    (89) break_statement -> BREAK TERMINATOR .

    RBRACE          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    TERMINATOR      reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    LBRACE          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    PRINT           reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    BREAK           reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    RETURN          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    NEW             reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    IF              reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    WHILE           reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    OBJECT          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    IDENTIFIER      reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    INT             reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    CHAR            reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    PLUS            reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    MINUS           reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    LNOT            reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    TILDE           reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    INTCONST        reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    STRCONST        reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    CHARCONST       reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    LPAREN          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    TYPEOF          reduce using rule 89 (break_statement -> BREAK TERMINATOR .)
    ELSE            reduce using rule 89 (break_statement -> BREAK TERMINATOR .)


state 212

    (130) unary_expression -> LNOT identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 130 (unary_expression -> LNOT identifier .)
    DIVIDE          reduce using rule 130 (unary_expression -> LNOT identifier .)
    MOD             reduce using rule 130 (unary_expression -> LNOT identifier .)
    PLUS            reduce using rule 130 (unary_expression -> LNOT identifier .)
    MINUS           reduce using rule 130 (unary_expression -> LNOT identifier .)
    LSHIFT          reduce using rule 130 (unary_expression -> LNOT identifier .)
    RSHIFT          reduce using rule 130 (unary_expression -> LNOT identifier .)
    LT              reduce using rule 130 (unary_expression -> LNOT identifier .)
    GT              reduce using rule 130 (unary_expression -> LNOT identifier .)
    LEQ             reduce using rule 130 (unary_expression -> LNOT identifier .)
    GEQ             reduce using rule 130 (unary_expression -> LNOT identifier .)
    EQ              reduce using rule 130 (unary_expression -> LNOT identifier .)
    NE              reduce using rule 130 (unary_expression -> LNOT identifier .)
    AND             reduce using rule 130 (unary_expression -> LNOT identifier .)
    XOR             reduce using rule 130 (unary_expression -> LNOT identifier .)
    OR              reduce using rule 130 (unary_expression -> LNOT identifier .)
    CONAND          reduce using rule 130 (unary_expression -> LNOT identifier .)
    CONOR           reduce using rule 130 (unary_expression -> LNOT identifier .)
    TERMINATOR      reduce using rule 130 (unary_expression -> LNOT identifier .)
    COMMA           reduce using rule 130 (unary_expression -> LNOT identifier .)
    RPAREN          reduce using rule 130 (unary_expression -> LNOT identifier .)
    RBRACKET        reduce using rule 130 (unary_expression -> LNOT identifier .)
    RBRACE          reduce using rule 130 (unary_expression -> LNOT identifier .)
    EQUALS          reduce using rule 130 (unary_expression -> LNOT identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 213

    (129) unary_expression -> LNOT unary_expression .

    TIMES           reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    DIVIDE          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    MOD             reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    PLUS            reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    MINUS           reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    LSHIFT          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    RSHIFT          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    LT              reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    GT              reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    LEQ             reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    GEQ             reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    EQ              reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    NE              reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    AND             reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    XOR             reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    OR              reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    CONAND          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    CONOR           reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    TERMINATOR      reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    COMMA           reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    RPAREN          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    RBRACKET        reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    RBRACE          reduce using rule 129 (unary_expression -> LNOT unary_expression .)
    EQUALS          reduce using rule 129 (unary_expression -> LNOT unary_expression .)


state 214

    (150) element_access -> primary_no_array_creation_expression LBRACKET . expression_list RBRACKET
    (152) expression_list -> . expression
    (153) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 257
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    expression_list                shift and go to state 280
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 215

    (78) statement -> local_variable_declaration TERMINATOR .

    RBRACE          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    TERMINATOR      reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    LBRACE          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    PRINT           reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    BREAK           reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    RETURN          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    NEW             reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    IF              reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    WHILE           reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    OBJECT          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    IDENTIFIER      reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    INT             reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    CHAR            reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    PLUS            reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    MINUS           reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    LNOT            reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    TILDE           reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    INTCONST        reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    STRCONST        reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    CHARCONST       reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    LPAREN          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)
    TYPEOF          reduce using rule 78 (statement -> local_variable_declaration TERMINATOR .)


state 216

    (132) unary_expression -> TILDE identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 132 (unary_expression -> TILDE identifier .)
    DIVIDE          reduce using rule 132 (unary_expression -> TILDE identifier .)
    MOD             reduce using rule 132 (unary_expression -> TILDE identifier .)
    PLUS            reduce using rule 132 (unary_expression -> TILDE identifier .)
    MINUS           reduce using rule 132 (unary_expression -> TILDE identifier .)
    LSHIFT          reduce using rule 132 (unary_expression -> TILDE identifier .)
    RSHIFT          reduce using rule 132 (unary_expression -> TILDE identifier .)
    LT              reduce using rule 132 (unary_expression -> TILDE identifier .)
    GT              reduce using rule 132 (unary_expression -> TILDE identifier .)
    LEQ             reduce using rule 132 (unary_expression -> TILDE identifier .)
    GEQ             reduce using rule 132 (unary_expression -> TILDE identifier .)
    EQ              reduce using rule 132 (unary_expression -> TILDE identifier .)
    NE              reduce using rule 132 (unary_expression -> TILDE identifier .)
    AND             reduce using rule 132 (unary_expression -> TILDE identifier .)
    XOR             reduce using rule 132 (unary_expression -> TILDE identifier .)
    OR              reduce using rule 132 (unary_expression -> TILDE identifier .)
    CONAND          reduce using rule 132 (unary_expression -> TILDE identifier .)
    CONOR           reduce using rule 132 (unary_expression -> TILDE identifier .)
    TERMINATOR      reduce using rule 132 (unary_expression -> TILDE identifier .)
    COMMA           reduce using rule 132 (unary_expression -> TILDE identifier .)
    RPAREN          reduce using rule 132 (unary_expression -> TILDE identifier .)
    RBRACKET        reduce using rule 132 (unary_expression -> TILDE identifier .)
    RBRACE          reduce using rule 132 (unary_expression -> TILDE identifier .)
    EQUALS          reduce using rule 132 (unary_expression -> TILDE identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 217

    (131) unary_expression -> TILDE unary_expression .

    TIMES           reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    DIVIDE          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    MOD             reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    PLUS            reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    MINUS           reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    LSHIFT          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    RSHIFT          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    LT              reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    GT              reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    LEQ             reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    GEQ             reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    EQ              reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    NE              reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    AND             reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    XOR             reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    OR              reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    CONAND          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    CONOR           reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    TERMINATOR      reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    COMMA           reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    RPAREN          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    RBRACKET        reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    RBRACE          reduce using rule 131 (unary_expression -> TILDE unary_expression .)
    EQUALS          reduce using rule 131 (unary_expression -> TILDE unary_expression .)


state 218

    (88) print_statement -> PRINT LPAREN . expression RPAREN TERMINATOR
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 281
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 219

    (145) member_access -> primary_expression MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 282

state 220

    (107) invocation_expression -> primary_expression LPAREN . argument_list RPAREN
    (108) invocation_expression -> primary_expression LPAREN . RPAREN
    (162) argument_list -> . argument
    (163) argument_list -> . argument_list COMMA argument
    (164) argument -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 283
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    conditional_and_expression     shift and go to state 159
    invocation_expression          shift and go to state 148
    non_assignment_expression      shift and go to state 163
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    assignment                     shift and go to state 149
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    argument                       shift and go to state 255
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 253
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    argument_list                  shift and go to state 284
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 221

    (154) post_increment_expression -> primary_expression INCREMENT .

    LBRACKET        reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    MEMBERACCESS    reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    INCREMENT       reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    LPAREN          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    DECREMENT       reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    TIMES           reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    DIVIDE          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    MOD             reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    PLUS            reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    MINUS           reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    LSHIFT          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    RSHIFT          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    LT              reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    GT              reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    LEQ             reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    GEQ             reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    EQ              reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    NE              reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    AND             reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    XOR             reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    OR              reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    CONAND          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    CONOR           reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    TERMINATOR      reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    COMMA           reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    RPAREN          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    RBRACKET        reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    RBRACE          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)
    EQUALS          reduce using rule 154 (post_increment_expression -> primary_expression INCREMENT .)


state 222

    (156) post_decrement_expression -> primary_expression DECREMENT .

    LBRACKET        reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    MEMBERACCESS    reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    INCREMENT       reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    LPAREN          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    DECREMENT       reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    EQUALS          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    TIMES           reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    DIVIDE          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    MOD             reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    PLUS            reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    MINUS           reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    LSHIFT          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    RSHIFT          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    LT              reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    GT              reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    LEQ             reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    GEQ             reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    EQ              reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    NE              reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    AND             reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    XOR             reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    OR              reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    CONAND          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    CONOR           reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    RPAREN          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    RBRACKET        reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    COMMA           reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    TERMINATOR      reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)
    RBRACE          reduce using rule 156 (post_decrement_expression -> primary_expression DECREMENT .)


state 223

    (187) iMEMAi -> identifier MEMBERACCESS . identifier
    (31) prefix -> identifier MEMBERACCESS .
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)

  ! IDENTIFIER      [ shift and go to state 16 ]

    identifier                     shift and go to state 256

state 224

    (197) exclusive_or_expression -> exclusive_or_expression XOR . and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    identifier                     shift and go to state 285
    parenthesized_expression       shift and go to state 108
    and_expression                 shift and go to state 287
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    additive_expression            shift and go to state 167
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    equality_expression            shift and go to state 165
    primary_no_array_creation_expression shift and go to state 138
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 225

    (210) shift_expression -> shift_expression RSHIFT . additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 288
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 226

    (209) shift_expression -> shift_expression LSHIFT . additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 289
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 227

    (217) multiplicative_expression -> multiplicative_expression DIVIDE . unary_expression
    (220) multiplicative_expression -> multiplicative_expression DIVIDE . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 290
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 291
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 228

    (216) multiplicative_expression -> multiplicative_expression TIMES . unary_expression
    (219) multiplicative_expression -> multiplicative_expression TIMES . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 292
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 293
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 229

    (218) multiplicative_expression -> multiplicative_expression MOD . unary_expression
    (221) multiplicative_expression -> multiplicative_expression MOD . identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 294
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 295
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    predefined_type                shift and go to state 161
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 230

    (193) conditional_and_expression -> conditional_and_expression CONAND . inclusive_or_expression
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    identifier                     shift and go to state 285
    equality_expression            shift and go to state 165
    and_expression                 shift and go to state 166
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    additive_expression            shift and go to state 167
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 296
    unary_expression               shift and go to state 286
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 231

    (195) inclusive_or_expression -> inclusive_or_expression OR . exclusive_or_expression
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    identifier                     shift and go to state 285
    parenthesized_expression       shift and go to state 108
    and_expression                 shift and go to state 166
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    additive_expression            shift and go to state 167
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    equality_expression            shift and go to state 165
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 297
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 232

    (204) relational_expression -> relational_expression LT . shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 298
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 233

    (207) relational_expression -> relational_expression GEQ . shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 299
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 234

    (206) relational_expression -> relational_expression LEQ . shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 300
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 235

    (205) relational_expression -> relational_expression GT . shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 301
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 236

    (202) equality_expression -> equality_expression NE . relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 302
    identifier                     shift and go to state 285
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 237

    (201) equality_expression -> equality_expression EQ . relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 303
    identifier                     shift and go to state 285
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 238

    (199) and_expression -> and_expression AND . equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    identifier                     shift and go to state 285
    parenthesized_expression       shift and go to state 108
    array_creation_expression      shift and go to state 131
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    equality_expression            shift and go to state 304
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    prefix                         shift and go to state 46
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 239

    (213) additive_expression -> additive_expression MINUS . multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 305
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 240

    (212) additive_expression -> additive_expression PLUS . multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    identifier                     shift and go to state 285
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 148
    post_increment_expression      shift and go to state 150
    object_creation_expression     shift and go to state 157
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    unary_expression               shift and go to state 286
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 306
    member_access                  shift and go to state 129
    literal                        shift and go to state 145

state 241

    (191) conditional_or_expression -> conditional_or_expression CONOR . conditional_and_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    identifier                     shift and go to state 285
    equality_expression            shift and go to state 165
    and_expression                 shift and go to state 166
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    additive_expression            shift and go to state 167
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    unary_expression               shift and go to state 286
    conditional_and_expression     shift and go to state 307
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 242

    (45) method_header -> type member_name LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 45 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 45 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)


state 243

    (52) method_header -> modifiers VOID member_name LPAREN RPAREN .

    TERMINATOR      reduce using rule 52 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 52 (method_header -> modifiers VOID member_name LPAREN RPAREN .)


state 244

    (50) method_header -> modifiers VOID member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 308
    COMMA           shift and go to state 95


state 245

    (48) method_header -> modifiers type member_name LPAREN RPAREN .

    TERMINATOR      reduce using rule 48 (method_header -> modifiers type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 48 (method_header -> modifiers type member_name LPAREN RPAREN .)


state 246

    (46) method_header -> modifiers type member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 309
    COMMA           shift and go to state 95


state 247

    (71) destructor_body -> block .

    RBRACE          reduce using rule 71 (destructor_body -> block .)
    TILDE           reduce using rule 71 (destructor_body -> block .)
    VOID            reduce using rule 71 (destructor_body -> block .)
    PUBLIC          reduce using rule 71 (destructor_body -> block .)
    PRIVATE         reduce using rule 71 (destructor_body -> block .)
    IDENTIFIER      reduce using rule 71 (destructor_body -> block .)
    OBJECT          reduce using rule 71 (destructor_body -> block .)
    INT             reduce using rule 71 (destructor_body -> block .)
    CHAR            reduce using rule 71 (destructor_body -> block .)


state 248

    (70) destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .

    RBRACE          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    TILDE           reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    VOID            reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PUBLIC          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PRIVATE         reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    IDENTIFIER      reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    OBJECT          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    INT             reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    CHAR            reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)


state 249

    (72) destructor_body -> TERMINATOR .

    RBRACE          reduce using rule 72 (destructor_body -> TERMINATOR .)
    TILDE           reduce using rule 72 (destructor_body -> TERMINATOR .)
    VOID            reduce using rule 72 (destructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 72 (destructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 72 (destructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 72 (destructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 72 (destructor_body -> TERMINATOR .)
    INT             reduce using rule 72 (destructor_body -> TERMINATOR .)
    CHAR            reduce using rule 72 (destructor_body -> TERMINATOR .)


state 250

    (64) default_argument -> EQUALS expression .

    RPAREN          reduce using rule 64 (default_argument -> EQUALS expression .)
    COMMA           reduce using rule 64 (default_argument -> EQUALS expression .)


state 251

    (122) assignment -> identifier assignment_operator expression .

    RBRACKET        reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    RPAREN          reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    COMMA           reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    TERMINATOR      reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    RBRACE          reduce using rule 122 (assignment -> identifier assignment_operator expression .)


state 252

    (109) invocation_expression -> identifier LPAREN RPAREN .

    LBRACKET        reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    INCREMENT       reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    LPAREN          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    DECREMENT       reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    EQUALS          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    TIMES           reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    MOD             reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    PLUS            reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    MINUS           reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    LSHIFT          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    RSHIFT          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    LT              reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    GT              reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    LEQ             reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    GEQ             reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    EQ              reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    NE              reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    AND             reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    XOR             reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    OR              reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    CONAND          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    CONOR           reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    COMMA           reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    TERMINATOR      reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 109 (invocation_expression -> identifier LPAREN RPAREN .)


state 253

    (164) argument -> expression .

    RPAREN          reduce using rule 164 (argument -> expression .)
    COMMA           reduce using rule 164 (argument -> expression .)


state 254

    (110) invocation_expression -> identifier LPAREN argument_list . RPAREN
    (163) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 310
    COMMA           shift and go to state 311


state 255

    (162) argument_list -> argument .

    RPAREN          reduce using rule 162 (argument_list -> argument .)
    COMMA           reduce using rule 162 (argument_list -> argument .)


state 256

    (187) iMEMAi -> identifier MEMBERACCESS identifier .

    LBRACKET        reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LPAREN          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    EQUALS          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    TIMES           reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MOD             reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    PLUS            reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MINUS           reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LT              reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    GT              reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LEQ             reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    GEQ             reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    EQ              reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    NE              reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    AND             reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    XOR             reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    OR              reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    CONAND          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    CONOR           reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    COMMA           reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RPAREN          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RBRACE          reduce using rule 187 (iMEMAi -> identifier MEMBERACCESS identifier .)


state 257

    (152) expression_list -> expression .

    RBRACE          reduce using rule 152 (expression_list -> expression .)
    COMMA           reduce using rule 152 (expression_list -> expression .)
    RBRACKET        reduce using rule 152 (expression_list -> expression .)


state 258

    (151) element_access -> identifier LBRACKET expression_list . RBRACKET
    (153) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 312
    COMMA           shift and go to state 313


state 259

    (167) object_initializer -> LBRACE . member_initializer_list RBRACE
    (168) object_initializer -> LBRACE . RBRACE
    (169) object_initializer -> LBRACE . member_initializer_list COMMA RBRACE
    (175) collection_initializer -> LBRACE . element_initializer_list RBRACE
    (176) collection_initializer -> LBRACE . element_initializer_list COMMA RBRACE
    (170) member_initializer_list -> . member_initializer
    (171) member_initializer_list -> . member_initializer_list COMMA member_initializer
    (177) element_initializer_list -> . element_initializer
    (178) element_initializer_list -> . element_initializer_list COMMA element_initializer
    (172) member_initializer -> . identifier EQUALS initializer_value
    (179) element_initializer -> . non_assignment_expression
    (180) element_initializer -> . LBRACE expression_list RBRACE
    (15) identifier -> . IDENTIFIER
    (188) non_assignment_expression -> . conditional_expression
    (189) conditional_expression -> . conditional_or_expression
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 316
    LBRACE          shift and go to state 317
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    member_initializer_list        shift and go to state 314
    relational_expression          shift and go to state 164
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 315
    equality_expression            shift and go to state 165
    array_creation_expression      shift and go to state 131
    post_increment_expression      shift and go to state 150
    element_initializer            shift and go to state 318
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    exclusive_or_expression        shift and go to state 152
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 319
    element_initializer_list       shift and go to state 320
    post_decrement_expression      shift and go to state 158
    member_initializer             shift and go to state 321
    unary_expression               shift and go to state 286
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    member_access                  shift and go to state 129
    prefix                         shift and go to state 46
    and_expression                 shift and go to state 166
    parenthesized_expression       shift and go to state 108
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    conditional_or_expression      shift and go to state 169
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 260

    (158) object_creation_expression -> NEW type LPAREN . argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> NEW type LPAREN . argument_list RPAREN
    (160) object_creation_expression -> NEW type LPAREN . RPAREN
    (162) argument_list -> . argument
    (163) argument_list -> . argument_list COMMA argument
    (164) argument -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 322
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    unary_expression               shift and go to state 151
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    conditional_and_expression     shift and go to state 159
    invocation_expression          shift and go to state 148
    non_assignment_expression      shift and go to state 163
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    assignment                     shift and go to state 149
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    argument                       shift and go to state 255
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 253
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    argument_list                  shift and go to state 323
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 261

    (161) object_creation_expression -> NEW type object_or_collection_initializer .

    TERMINATOR      reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LBRACKET        reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LPAREN          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    INCREMENT       reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    DECREMENT       reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MEMBERACCESS    reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    EQUALS          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    TIMES           reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    DIVIDE          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MOD             reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    PLUS            reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MINUS           reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LSHIFT          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RSHIFT          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LT              reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    GT              reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LEQ             reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    GEQ             reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    EQ              reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    NE              reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    AND             reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    XOR             reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    OR              reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    CONAND          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    CONOR           reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RBRACKET        reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    COMMA           reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RPAREN          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RBRACE          reduce using rule 161 (object_creation_expression -> NEW type object_or_collection_initializer .)


state 262

    (166) object_or_collection_initializer -> collection_initializer .

    TERMINATOR      reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    LBRACKET        reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    LPAREN          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    INCREMENT       reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    DECREMENT       reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    MEMBERACCESS    reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    EQUALS          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    TIMES           reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    DIVIDE          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    MOD             reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    PLUS            reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    MINUS           reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    LSHIFT          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    RSHIFT          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    LT              reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    GT              reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    LEQ             reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    GEQ             reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    EQ              reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    NE              reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    AND             reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    XOR             reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    OR              reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    CONAND          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    CONOR           reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    COMMA           reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    RPAREN          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    RBRACKET        reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)
    RBRACE          reduce using rule 166 (object_or_collection_initializer -> collection_initializer .)


state 263

    (165) object_or_collection_initializer -> object_initializer .

    TERMINATOR      reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    LBRACKET        reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    LPAREN          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    INCREMENT       reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    DECREMENT       reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    MEMBERACCESS    reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    EQUALS          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    TIMES           reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    DIVIDE          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    MOD             reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    PLUS            reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    MINUS           reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    LSHIFT          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    RSHIFT          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    LT              reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    GT              reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    LEQ             reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    GEQ             reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    EQ              reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    NE              reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    AND             reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    XOR             reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    OR              reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    CONAND          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    CONOR           reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    COMMA           reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    RPAREN          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    RBRACKET        reduce using rule 165 (object_or_collection_initializer -> object_initializer .)
    RBRACE          reduce using rule 165 (object_or_collection_initializer -> object_initializer .)


state 264

    (181) array_creation_expression -> NEW non_array_type LBRACKET . expression RBRACKET
    (33) array_type -> non_array_type LBRACKET . RBRACKET
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    RBRACKET        shift and go to state 90
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 324
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 265

    (147) member_access -> predefined_type MEMBERACCESS identifier .

    LBRACKET        reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    LPAREN          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    EQUALS          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    TIMES           reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    MOD             reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    PLUS            reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    MINUS           reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    LT              reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    GT              reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    LEQ             reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    GEQ             reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    EQ              reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    NE              reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    AND             reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    XOR             reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    OR              reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    CONAND          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    CONOR           reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    COMMA           reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    RBRACE          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)
    RPAREN          reduce using rule 147 (member_access -> predefined_type MEMBERACCESS identifier .)


state 266

    (92) return_statement -> RETURN expression TERMINATOR .

    RBRACE          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    TERMINATOR      reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    LBRACE          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    PRINT           reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    BREAK           reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    RETURN          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    NEW             reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    IF              reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    WHILE           reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    OBJECT          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    IDENTIFIER      reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    INT             reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    CHAR            reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    PLUS            reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    MINUS           reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    LNOT            reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    TILDE           reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    INTCONST        reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    STRCONST        reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    CHARCONST       reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    LPAREN          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    TYPEOF          reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)
    ELSE            reduce using rule 92 (return_statement -> RETURN expression TERMINATOR .)


state 267

    (117) iteration_statement -> while LPAREN expression . RPAREN embedded_statement

    RPAREN          shift and go to state 325


state 268

    (98) local_variable_declarators -> local_variable_declarators COMMA . local_variable_declarator
    (99) local_variable_declarator -> . identifier
    (100) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    local_variable_declarator      shift and go to state 326
    identifier                     shift and go to state 199

state 269

    (100) local_variable_declarator -> identifier EQUALS . local_variable_initializer
    (101) local_variable_initializer -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 327
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    local_variable_initializer     shift and go to state 328
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 270

    (35) type_parameter -> identifier .
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    RPAREN          reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 223


state 271

    (184) typeof_expression -> TYPEOF LPAREN VOID . RPAREN

    RPAREN          shift and go to state 329


state 272

    (183) typeof_expression -> TYPEOF LPAREN unbound_type_name . RPAREN
    (186) unbound_type_name -> unbound_type_name . MEMBERACCESS identifier

    RPAREN          shift and go to state 331
    MEMBERACCESS    shift and go to state 330


state 273

    (185) unbound_type_name -> iMEMAi .

    RPAREN          reduce using rule 185 (unbound_type_name -> iMEMAi .)
    MEMBERACCESS    reduce using rule 185 (unbound_type_name -> iMEMAi .)


state 274

    (182) typeof_expression -> TYPEOF LPAREN type . RPAREN
    (34) non_array_type -> type .

    RPAREN          shift and go to state 332
    LBRACKET        reduce using rule 34 (non_array_type -> type .)


state 275

    (113) if_statement -> if LPAREN expression . RPAREN embedded_statement
    (114) if_statement -> if LPAREN expression . RPAREN embedded_statement else embedded_statement

    RPAREN          shift and go to state 333


state 276

    (144) parenthesized_expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    MEMBERACCESS    reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    INCREMENT       reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONAND          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONOR           reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    TERMINATOR      reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 144 (parenthesized_expression -> LPAREN expression RPAREN .)


state 277

    (121) assignment -> unary_expression assignment_operator expression .

    RBRACKET        reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    RPAREN          reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    COMMA           reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    TERMINATOR      reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    RBRACE          reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)


state 278

    (112) invocation_expression -> proper_identifier LPAREN RPAREN .

    LBRACKET        reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    INCREMENT       reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LPAREN          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    DECREMENT       reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    EQUALS          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    TIMES           reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MOD             reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    PLUS            reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MINUS           reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LSHIFT          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RSHIFT          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LT              reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    GT              reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LEQ             reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    GEQ             reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    EQ              reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    NE              reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    AND             reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    XOR             reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    OR              reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    CONAND          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    CONOR           reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    COMMA           reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    TERMINATOR      reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 112 (invocation_expression -> proper_identifier LPAREN RPAREN .)


state 279

    (111) invocation_expression -> proper_identifier LPAREN argument_list . RPAREN
    (163) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 334
    COMMA           shift and go to state 311


state 280

    (150) element_access -> primary_no_array_creation_expression LBRACKET expression_list . RBRACKET
    (153) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 335
    COMMA           shift and go to state 313


state 281

    (88) print_statement -> PRINT LPAREN expression . RPAREN TERMINATOR

    RPAREN          shift and go to state 336


state 282

    (145) member_access -> primary_expression MEMBERACCESS identifier .

    LBRACKET        reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    LPAREN          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    EQUALS          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    TIMES           reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    MOD             reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    PLUS            reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    MINUS           reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    LT              reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    GT              reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    LEQ             reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    GEQ             reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    EQ              reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    NE              reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    AND             reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    XOR             reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    OR              reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    CONAND          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    CONOR           reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    COMMA           reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    RBRACE          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)
    RPAREN          reduce using rule 145 (member_access -> primary_expression MEMBERACCESS identifier .)


state 283

    (108) invocation_expression -> primary_expression LPAREN RPAREN .

    LBRACKET        reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    INCREMENT       reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LPAREN          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    DECREMENT       reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    EQUALS          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    TIMES           reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MOD             reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    PLUS            reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MINUS           reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LSHIFT          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RSHIFT          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LT              reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    GT              reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LEQ             reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    GEQ             reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    EQ              reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    NE              reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    AND             reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    XOR             reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    OR              reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    CONAND          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    CONOR           reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RBRACE          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    COMMA           reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RPAREN          reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    TERMINATOR      reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 108 (invocation_expression -> primary_expression LPAREN RPAREN .)


state 284

    (107) invocation_expression -> primary_expression LPAREN argument_list . RPAREN
    (163) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 337
    COMMA           shift and go to state 311


state 285

    (215) multiplicative_expression -> identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 215 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 215 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 215 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 215 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 215 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    LT              reduce using rule 215 (multiplicative_expression -> identifier .)
    GT              reduce using rule 215 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 215 (multiplicative_expression -> identifier .)
    NE              reduce using rule 215 (multiplicative_expression -> identifier .)
    AND             reduce using rule 215 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 215 (multiplicative_expression -> identifier .)
    OR              reduce using rule 215 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 215 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 215 (multiplicative_expression -> identifier .)
    TERMINATOR      reduce using rule 215 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 215 (multiplicative_expression -> identifier .)
    RPAREN          reduce using rule 215 (multiplicative_expression -> identifier .)
    RBRACKET        reduce using rule 215 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 215 (multiplicative_expression -> identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 286

    (214) multiplicative_expression -> unary_expression .

    TIMES           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    DIVIDE          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 214 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LSHIFT          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RSHIFT          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    NE              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    XOR             reduce using rule 214 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 214 (multiplicative_expression -> unary_expression .)
    CONAND          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    CONOR           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    TERMINATOR      reduce using rule 214 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 214 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 214 (multiplicative_expression -> unary_expression .)


state 287

    (197) exclusive_or_expression -> exclusive_or_expression XOR and_expression .
    (199) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    OR              reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    CONAND          reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    CONOR           reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACKET        reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    COMMA           reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RPAREN          reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACE          reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    TERMINATOR      reduce using rule 197 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    AND             shift and go to state 238


state 288

    (210) shift_expression -> shift_expression RSHIFT additive_expression .
    (212) additive_expression -> additive_expression . PLUS multiplicative_expression
    (213) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RSHIFT          reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LT              reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GT              reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LEQ             reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GEQ             reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    EQ              reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    NE              reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    AND             reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    XOR             reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    OR              reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    CONAND          reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    CONOR           reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACE          reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    COMMA           reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RPAREN          reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    TERMINATOR      reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACKET        reduce using rule 210 (shift_expression -> shift_expression RSHIFT additive_expression .)
    PLUS            shift and go to state 240
    MINUS           shift and go to state 239


state 289

    (209) shift_expression -> shift_expression LSHIFT additive_expression .
    (212) additive_expression -> additive_expression . PLUS multiplicative_expression
    (213) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RSHIFT          reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LT              reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GT              reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LEQ             reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GEQ             reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    EQ              reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    NE              reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    AND             reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    XOR             reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    OR              reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    CONAND          reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    CONOR           reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACE          reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    COMMA           reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RPAREN          reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    TERMINATOR      reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACKET        reduce using rule 209 (shift_expression -> shift_expression LSHIFT additive_expression .)
    PLUS            shift and go to state 240
    MINUS           shift and go to state 239


state 290

    (220) multiplicative_expression -> multiplicative_expression DIVIDE identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    DIVIDE          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    MOD             reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    PLUS            reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    MINUS           reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LSHIFT          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RSHIFT          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LT              reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    GT              reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LEQ             reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    GEQ             reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    EQ              reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    NE              reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    AND             reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    XOR             reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    OR              reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    CONAND          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    CONOR           reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RPAREN          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    COMMA           reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    TERMINATOR      reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RBRACKET        reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RBRACE          reduce using rule 220 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 291

    (217) multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .

    TIMES           reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    DIVIDE          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    MOD             reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    PLUS            reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    MINUS           reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LSHIFT          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RSHIFT          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LT              reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GT              reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LEQ             reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GEQ             reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    EQ              reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    NE              reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    AND             reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    XOR             reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    OR              reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    CONAND          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    CONOR           reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RPAREN          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    COMMA           reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    TERMINATOR      reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RBRACKET        reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RBRACE          reduce using rule 217 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)


state 292

    (219) multiplicative_expression -> multiplicative_expression TIMES identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    DIVIDE          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    MOD             reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    PLUS            reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    MINUS           reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LSHIFT          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RSHIFT          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LT              reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    GT              reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LEQ             reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    GEQ             reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    EQ              reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    NE              reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    AND             reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    XOR             reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    OR              reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    CONAND          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    CONOR           reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RPAREN          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    COMMA           reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    TERMINATOR      reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RBRACKET        reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RBRACE          reduce using rule 219 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 293

    (216) multiplicative_expression -> multiplicative_expression TIMES unary_expression .

    TIMES           reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    DIVIDE          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    MOD             reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    PLUS            reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    MINUS           reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LSHIFT          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RSHIFT          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LT              reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GT              reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LEQ             reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GEQ             reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    EQ              reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    NE              reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    AND             reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    XOR             reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    OR              reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    CONAND          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    CONOR           reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RPAREN          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    COMMA           reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    TERMINATOR      reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RBRACKET        reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RBRACE          reduce using rule 216 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)


state 294

    (221) multiplicative_expression -> multiplicative_expression MOD identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    DIVIDE          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    MOD             reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    PLUS            reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    MINUS           reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LSHIFT          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RSHIFT          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LT              reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    GT              reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LEQ             reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    GEQ             reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    EQ              reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    NE              reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    AND             reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    XOR             reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    OR              reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    CONAND          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    CONOR           reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RPAREN          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    COMMA           reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    TERMINATOR      reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RBRACKET        reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RBRACE          reduce using rule 221 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 295

    (218) multiplicative_expression -> multiplicative_expression MOD unary_expression .

    TIMES           reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    DIVIDE          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MOD             reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    PLUS            reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MINUS           reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LSHIFT          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RSHIFT          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LT              reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GT              reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LEQ             reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GEQ             reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    EQ              reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    NE              reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    AND             reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    XOR             reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    OR              reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    CONAND          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    CONOR           reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RPAREN          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COMMA           reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    TERMINATOR      reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACKET        reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACE          reduce using rule 218 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)


state 296

    (193) conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .
    (195) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    CONAND          reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    CONOR           reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RBRACKET        reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    COMMA           reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RPAREN          reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    TERMINATOR      reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RBRACE          reduce using rule 193 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    OR              shift and go to state 231


state 297

    (195) inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .
    (197) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    CONAND          reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    CONOR           reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RPAREN          reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    COMMA           reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACKET        reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACE          reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    TERMINATOR      reduce using rule 195 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    XOR             shift and go to state 224


state 298

    (204) relational_expression -> relational_expression LT shift_expression .
    (209) shift_expression -> shift_expression . LSHIFT additive_expression
    (210) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    GT              reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    LEQ             reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    GEQ             reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    EQ              reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    NE              reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    AND             reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    XOR             reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    OR              reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    CONAND          reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    CONOR           reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    TERMINATOR      reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    COMMA           reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    RPAREN          reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    RBRACKET        reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    RBRACE          reduce using rule 204 (relational_expression -> relational_expression LT shift_expression .)
    LSHIFT          shift and go to state 226
    RSHIFT          shift and go to state 225


state 299

    (207) relational_expression -> relational_expression GEQ shift_expression .
    (209) shift_expression -> shift_expression . LSHIFT additive_expression
    (210) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    GT              reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    LEQ             reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    GEQ             reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    EQ              reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    NE              reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    AND             reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    XOR             reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    OR              reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    CONAND          reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    CONOR           reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    TERMINATOR      reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    COMMA           reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    RPAREN          reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    RBRACKET        reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    RBRACE          reduce using rule 207 (relational_expression -> relational_expression GEQ shift_expression .)
    LSHIFT          shift and go to state 226
    RSHIFT          shift and go to state 225


state 300

    (206) relational_expression -> relational_expression LEQ shift_expression .
    (209) shift_expression -> shift_expression . LSHIFT additive_expression
    (210) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    GT              reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    LEQ             reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    GEQ             reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    EQ              reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    NE              reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    AND             reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    XOR             reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    OR              reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    CONAND          reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    CONOR           reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    TERMINATOR      reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    COMMA           reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    RPAREN          reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    RBRACKET        reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    RBRACE          reduce using rule 206 (relational_expression -> relational_expression LEQ shift_expression .)
    LSHIFT          shift and go to state 226
    RSHIFT          shift and go to state 225


state 301

    (205) relational_expression -> relational_expression GT shift_expression .
    (209) shift_expression -> shift_expression . LSHIFT additive_expression
    (210) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    GT              reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    LEQ             reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    GEQ             reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    EQ              reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    NE              reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    AND             reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    XOR             reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    OR              reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    CONAND          reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    CONOR           reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    TERMINATOR      reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    COMMA           reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    RPAREN          reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    RBRACKET        reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    RBRACE          reduce using rule 205 (relational_expression -> relational_expression GT shift_expression .)
    LSHIFT          shift and go to state 226
    RSHIFT          shift and go to state 225


state 302

    (202) equality_expression -> equality_expression NE relational_expression .
    (204) relational_expression -> relational_expression . LT shift_expression
    (205) relational_expression -> relational_expression . GT shift_expression
    (206) relational_expression -> relational_expression . LEQ shift_expression
    (207) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    NE              reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    AND             reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    XOR             reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    OR              reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    CONAND          reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    CONOR           reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    RBRACKET        reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    COMMA           reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    RBRACE          reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    RPAREN          reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    TERMINATOR      reduce using rule 202 (equality_expression -> equality_expression NE relational_expression .)
    LT              shift and go to state 232
    GT              shift and go to state 235
    LEQ             shift and go to state 234
    GEQ             shift and go to state 233


state 303

    (201) equality_expression -> equality_expression EQ relational_expression .
    (204) relational_expression -> relational_expression . LT shift_expression
    (205) relational_expression -> relational_expression . GT shift_expression
    (206) relational_expression -> relational_expression . LEQ shift_expression
    (207) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    NE              reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    XOR             reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    CONAND          reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    CONOR           reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    TERMINATOR      reduce using rule 201 (equality_expression -> equality_expression EQ relational_expression .)
    LT              shift and go to state 232
    GT              shift and go to state 235
    LEQ             shift and go to state 234
    GEQ             shift and go to state 233


state 304

    (199) and_expression -> and_expression AND equality_expression .
    (201) equality_expression -> equality_expression . EQ relational_expression
    (202) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    XOR             reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    OR              reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    CONAND          reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    CONOR           reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    TERMINATOR      reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    RPAREN          reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    COMMA           reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    RBRACKET        reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    RBRACE          reduce using rule 199 (and_expression -> and_expression AND equality_expression .)
    EQ              shift and go to state 237
    NE              shift and go to state 236


state 305

    (213) additive_expression -> additive_expression MINUS multiplicative_expression .
    (216) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (217) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (218) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (219) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (220) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (221) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LSHIFT          reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RSHIFT          reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NE              reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    XOR             reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CONAND          reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CONOR           reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TERMINATOR      reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 213 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TIMES           shift and go to state 228
    DIVIDE          shift and go to state 227
    MOD             shift and go to state 229


state 306

    (212) additive_expression -> additive_expression PLUS multiplicative_expression .
    (216) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (217) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (218) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (219) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (220) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (221) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LSHIFT          reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RSHIFT          reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NE              reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    XOR             reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CONAND          reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CONOR           reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TERMINATOR      reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 212 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TIMES           shift and go to state 228
    DIVIDE          shift and go to state 227
    MOD             shift and go to state 229


state 307

    (191) conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .
    (193) conditional_and_expression -> conditional_and_expression . CONAND inclusive_or_expression

    CONOR           reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RBRACKET        reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    COMMA           reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RBRACE          reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    TERMINATOR      reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RPAREN          reduce using rule 191 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    CONAND          shift and go to state 230


state 308

    (50) method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 50 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 50 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)


state 309

    (46) method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 46 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 46 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)


state 310

    (110) invocation_expression -> identifier LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MOD             reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LT              reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    GT              reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    EQ              reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    NE              reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    AND             reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    XOR             reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    OR              reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 110 (invocation_expression -> identifier LPAREN argument_list RPAREN .)


state 311

    (163) argument_list -> argument_list COMMA . argument
    (164) argument -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    conditional_and_expression     shift and go to state 159
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    argument                       shift and go to state 338
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 253
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    parenthesized_expression       shift and go to state 108
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 312

    (151) element_access -> identifier LBRACKET expression_list RBRACKET .

    LBRACKET        reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MEMBERACCESS    reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    INCREMENT       reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    DECREMENT       reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LSHIFT          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RSHIFT          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LT              reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    GT              reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LEQ             reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    GEQ             reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    NE              reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    CONAND          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    CONOR           reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    TERMINATOR      reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 151 (element_access -> identifier LBRACKET expression_list RBRACKET .)


state 313

    (153) expression_list -> expression_list COMMA . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 339
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 314

    (167) object_initializer -> LBRACE member_initializer_list . RBRACE
    (169) object_initializer -> LBRACE member_initializer_list . COMMA RBRACE
    (171) member_initializer_list -> member_initializer_list . COMMA member_initializer

    RBRACE          shift and go to state 340
    COMMA           shift and go to state 341


state 315

    (172) member_initializer -> identifier . EQUALS initializer_value
    (215) multiplicative_expression -> identifier .
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (155) post_increment_expression -> identifier . INCREMENT
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_decrement_expression -> identifier . DECREMENT
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    EQUALS          shift and go to state 342
    TIMES           reduce using rule 215 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 215 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 215 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 215 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 215 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 215 (multiplicative_expression -> identifier .)
    LT              reduce using rule 215 (multiplicative_expression -> identifier .)
    GT              reduce using rule 215 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 215 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 215 (multiplicative_expression -> identifier .)
    NE              reduce using rule 215 (multiplicative_expression -> identifier .)
    AND             reduce using rule 215 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 215 (multiplicative_expression -> identifier .)
    OR              reduce using rule 215 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 215 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 215 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 215 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 215 (multiplicative_expression -> identifier .)
    LBRACKET        shift and go to state 187
    INCREMENT       shift and go to state 188
    LPAREN          shift and go to state 184
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 223


state 316

    (168) object_initializer -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    LPAREN          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    INCREMENT       reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    DECREMENT       reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    MEMBERACCESS    reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    EQUALS          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    TIMES           reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    MOD             reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    PLUS            reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    MINUS           reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    LSHIFT          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    RSHIFT          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    LT              reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    GT              reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    LEQ             reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    GEQ             reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    EQ              reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    NE              reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    AND             reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    XOR             reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    OR              reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    CONAND          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    CONOR           reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    RPAREN          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 168 (object_initializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 168 (object_initializer -> LBRACE RBRACE .)


state 317

    (180) element_initializer -> LBRACE . expression_list RBRACE
    (152) expression_list -> . expression
    (153) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    proper_identifier              shift and go to state 160
    conditional_expression         shift and go to state 146
    identifier                     shift and go to state 147
    parenthesized_expression       shift and go to state 108
    invocation_expression          shift and go to state 148
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    inclusive_or_expression        shift and go to state 162
    non_assignment_expression      shift and go to state 163
    relational_expression          shift and go to state 164
    additive_expression            shift and go to state 167
    and_expression                 shift and go to state 166
    unary_expression               shift and go to state 151
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    shift_expression               shift and go to state 154
    expression                     shift and go to state 257
    conditional_or_expression      shift and go to state 169
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    expression_list                shift and go to state 343
    primary_expression             shift and go to state 168
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    literal                        shift and go to state 145
    equality_expression            shift and go to state 165

state 318

    (177) element_initializer_list -> element_initializer .

    RBRACE          reduce using rule 177 (element_initializer_list -> element_initializer .)
    COMMA           reduce using rule 177 (element_initializer_list -> element_initializer .)


state 319

    (179) element_initializer -> non_assignment_expression .

    RBRACE          reduce using rule 179 (element_initializer -> non_assignment_expression .)
    COMMA           reduce using rule 179 (element_initializer -> non_assignment_expression .)


state 320

    (175) collection_initializer -> LBRACE element_initializer_list . RBRACE
    (176) collection_initializer -> LBRACE element_initializer_list . COMMA RBRACE
    (178) element_initializer_list -> element_initializer_list . COMMA element_initializer

    RBRACE          shift and go to state 345
    COMMA           shift and go to state 344


state 321

    (170) member_initializer_list -> member_initializer .

    RBRACE          reduce using rule 170 (member_initializer_list -> member_initializer .)
    COMMA           reduce using rule 170 (member_initializer_list -> member_initializer .)


state 322

    (160) object_creation_expression -> NEW type LPAREN RPAREN .

    TERMINATOR      reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LBRACKET        reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LPAREN          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    INCREMENT       reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    DECREMENT       reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    EQUALS          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    TIMES           reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    DIVIDE          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MOD             reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    PLUS            reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MINUS           reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LSHIFT          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RSHIFT          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LT              reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    GT              reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LEQ             reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    GEQ             reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    EQ              reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    NE              reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    AND             reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    XOR             reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    OR              reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    CONAND          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    CONOR           reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RBRACKET        reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    COMMA           reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RPAREN          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RBRACE          reduce using rule 160 (object_creation_expression -> NEW type LPAREN RPAREN .)


state 323

    (158) object_creation_expression -> NEW type LPAREN argument_list . RPAREN object_or_collection_initializer
    (159) object_creation_expression -> NEW type LPAREN argument_list . RPAREN
    (163) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 346
    COMMA           shift and go to state 311


state 324

    (181) array_creation_expression -> NEW non_array_type LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 347


state 325

    (117) iteration_statement -> while LPAREN expression RPAREN . embedded_statement
    (80) embedded_statement -> . block
    (81) embedded_statement -> . TERMINATOR
    (82) embedded_statement -> . statement_expression TERMINATOR
    (83) embedded_statement -> . if_statement
    (84) embedded_statement -> . iteration_statement
    (85) embedded_statement -> . print_statement
    (86) embedded_statement -> . break_statement
    (87) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE
    (102) statement_expression -> . object_creation_expression
    (103) statement_expression -> . assignment
    (104) statement_expression -> . invocation_expression
    (105) statement_expression -> . post_increment_expression
    (106) statement_expression -> . post_decrement_expression
    (113) if_statement -> . if LPAREN expression RPAREN embedded_statement
    (114) if_statement -> . if LPAREN expression RPAREN embedded_statement else embedded_statement
    (117) iteration_statement -> . while LPAREN expression RPAREN embedded_statement
    (88) print_statement -> . PRINT LPAREN expression RPAREN TERMINATOR
    (89) break_statement -> . BREAK TERMINATOR
    (91) return_statement -> . RETURN TERMINATOR
    (92) return_statement -> . RETURN expression TERMINATOR
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (115) if -> . IF
    (118) while -> . WHILE
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 139
    LBRACE          shift and go to state 57
    PRINT           shift and go to state 143
    BREAK           shift and go to state 136
    RETURN          shift and go to state 113
    NEW             shift and go to state 106
    IF              shift and go to state 115
    WHILE           shift and go to state 125
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    unary_expression               shift and go to state 126
    iteration_statement            shift and go to state 127
    post_decrement_expression      shift and go to state 128
    identifier                     shift and go to state 348
    array_creation_expression      shift and go to state 131
    typeof_expression              shift and go to state 99
    proper_identifier              shift and go to state 160
    post_increment_expression      shift and go to state 103
    object_creation_expression     shift and go to state 110
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    assignment                     shift and go to state 135
    while                          shift and go to state 114
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    member_access                  shift and go to state 129
    if_statement                   shift and go to state 111
    block                          shift and go to state 117
    break_statement                shift and go to state 140
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 124
    return_statement               shift and go to state 112
    embedded_statement             shift and go to state 349
    primary_expression             shift and go to state 144
    statement_expression           shift and go to state 120
    if                             shift and go to state 121
    print_statement                shift and go to state 102
    literal                        shift and go to state 145

state 326

    (98) local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .

    COMMA           reduce using rule 98 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)
    TERMINATOR      reduce using rule 98 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)


state 327

    (101) local_variable_initializer -> expression .

    COMMA           reduce using rule 101 (local_variable_initializer -> expression .)
    TERMINATOR      reduce using rule 101 (local_variable_initializer -> expression .)


state 328

    (100) local_variable_declarator -> identifier EQUALS local_variable_initializer .

    COMMA           reduce using rule 100 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)
    TERMINATOR      reduce using rule 100 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)


state 329

    (184) typeof_expression -> TYPEOF LPAREN VOID RPAREN .

    LBRACKET        reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MEMBERACCESS    reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    INCREMENT       reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LPAREN          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    DECREMENT       reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    TIMES           reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    DIVIDE          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MOD             reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    PLUS            reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MINUS           reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LSHIFT          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RSHIFT          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LT              reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    GT              reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LEQ             reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    GEQ             reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    EQ              reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    NE              reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    AND             reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    XOR             reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    OR              reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    CONAND          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    CONOR           reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    TERMINATOR      reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    COMMA           reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RPAREN          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RBRACKET        reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RBRACE          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    EQUALS          reduce using rule 184 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)


state 330

    (186) unbound_type_name -> unbound_type_name MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 350

state 331

    (183) typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .

    LBRACKET        reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MEMBERACCESS    reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    INCREMENT       reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LPAREN          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    DECREMENT       reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    TIMES           reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    DIVIDE          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MOD             reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    PLUS            reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MINUS           reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LSHIFT          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RSHIFT          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LT              reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    GT              reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LEQ             reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    GEQ             reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    EQ              reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    NE              reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    AND             reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    XOR             reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    OR              reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    CONAND          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    CONOR           reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    TERMINATOR      reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    COMMA           reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RPAREN          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RBRACKET        reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RBRACE          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    EQUALS          reduce using rule 183 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)


state 332

    (182) typeof_expression -> TYPEOF LPAREN type RPAREN .

    LBRACKET        reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MEMBERACCESS    reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    INCREMENT       reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LPAREN          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    DECREMENT       reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    TIMES           reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    DIVIDE          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MOD             reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LSHIFT          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RSHIFT          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LT              reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    GT              reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LEQ             reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    GEQ             reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    EQ              reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    NE              reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    AND             reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    XOR             reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    OR              reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    CONAND          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    CONOR           reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    TERMINATOR      reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RBRACKET        reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    EQUALS          reduce using rule 182 (typeof_expression -> TYPEOF LPAREN type RPAREN .)


state 333

    (113) if_statement -> if LPAREN expression RPAREN . embedded_statement
    (114) if_statement -> if LPAREN expression RPAREN . embedded_statement else embedded_statement
    (80) embedded_statement -> . block
    (81) embedded_statement -> . TERMINATOR
    (82) embedded_statement -> . statement_expression TERMINATOR
    (83) embedded_statement -> . if_statement
    (84) embedded_statement -> . iteration_statement
    (85) embedded_statement -> . print_statement
    (86) embedded_statement -> . break_statement
    (87) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE
    (102) statement_expression -> . object_creation_expression
    (103) statement_expression -> . assignment
    (104) statement_expression -> . invocation_expression
    (105) statement_expression -> . post_increment_expression
    (106) statement_expression -> . post_decrement_expression
    (113) if_statement -> . if LPAREN expression RPAREN embedded_statement
    (114) if_statement -> . if LPAREN expression RPAREN embedded_statement else embedded_statement
    (117) iteration_statement -> . while LPAREN expression RPAREN embedded_statement
    (88) print_statement -> . PRINT LPAREN expression RPAREN TERMINATOR
    (89) break_statement -> . BREAK TERMINATOR
    (91) return_statement -> . RETURN TERMINATOR
    (92) return_statement -> . RETURN expression TERMINATOR
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (115) if -> . IF
    (118) while -> . WHILE
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 139
    LBRACE          shift and go to state 57
    PRINT           shift and go to state 143
    BREAK           shift and go to state 136
    RETURN          shift and go to state 113
    NEW             shift and go to state 106
    IF              shift and go to state 115
    WHILE           shift and go to state 125
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    unary_expression               shift and go to state 126
    iteration_statement            shift and go to state 127
    post_decrement_expression      shift and go to state 128
    identifier                     shift and go to state 348
    array_creation_expression      shift and go to state 131
    typeof_expression              shift and go to state 99
    proper_identifier              shift and go to state 160
    post_increment_expression      shift and go to state 103
    object_creation_expression     shift and go to state 110
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    assignment                     shift and go to state 135
    while                          shift and go to state 114
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    member_access                  shift and go to state 129
    if_statement                   shift and go to state 111
    block                          shift and go to state 117
    break_statement                shift and go to state 140
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 124
    return_statement               shift and go to state 112
    embedded_statement             shift and go to state 351
    primary_expression             shift and go to state 144
    statement_expression           shift and go to state 120
    if                             shift and go to state 121
    print_statement                shift and go to state 102
    literal                        shift and go to state 145

state 334

    (111) invocation_expression -> proper_identifier LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MOD             reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LT              reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    GT              reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    EQ              reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    NE              reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    AND             reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    XOR             reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    OR              reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 111 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)


state 335

    (150) element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .

    LBRACKET        reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MEMBERACCESS    reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    INCREMENT       reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    DECREMENT       reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LSHIFT          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RSHIFT          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LT              reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    GT              reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LEQ             reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    GEQ             reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    NE              reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    CONAND          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    CONOR           reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    TERMINATOR      reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 150 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)


state 336

    (88) print_statement -> PRINT LPAREN expression RPAREN . TERMINATOR

    TERMINATOR      shift and go to state 352


state 337

    (107) invocation_expression -> primary_expression LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MOD             reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LT              reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    GT              reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    EQ              reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    NE              reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    AND             reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    XOR             reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    OR              reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 107 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)


state 338

    (163) argument_list -> argument_list COMMA argument .

    RPAREN          reduce using rule 163 (argument_list -> argument_list COMMA argument .)
    COMMA           reduce using rule 163 (argument_list -> argument_list COMMA argument .)


state 339

    (153) expression_list -> expression_list COMMA expression .

    RBRACE          reduce using rule 153 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 153 (expression_list -> expression_list COMMA expression .)
    RBRACKET        reduce using rule 153 (expression_list -> expression_list COMMA expression .)


state 340

    (167) object_initializer -> LBRACE member_initializer_list RBRACE .

    TERMINATOR      reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LBRACKET        reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LPAREN          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    INCREMENT       reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    DECREMENT       reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MEMBERACCESS    reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQUALS          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    TIMES           reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    DIVIDE          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MOD             reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUS            reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUS           reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSHIFT          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSHIFT          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LT              reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GT              reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LEQ             reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GEQ             reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQ              reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    NE              reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AND             reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    XOR             reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    OR              reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CONAND          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CONOR           reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COMMA           reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RPAREN          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACKET        reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACE          reduce using rule 167 (object_initializer -> LBRACE member_initializer_list RBRACE .)


state 341

    (169) object_initializer -> LBRACE member_initializer_list COMMA . RBRACE
    (171) member_initializer_list -> member_initializer_list COMMA . member_initializer
    (172) member_initializer -> . identifier EQUALS initializer_value
    (15) identifier -> . IDENTIFIER

    RBRACE          shift and go to state 353
    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 354
    member_initializer             shift and go to state 355

state 342

    (172) member_initializer -> identifier EQUALS . initializer_value
    (173) initializer_value -> . expression
    (174) initializer_value -> . object_or_collection_initializer
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (165) object_or_collection_initializer -> . object_initializer
    (166) object_or_collection_initializer -> . collection_initializer
    (188) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (167) object_initializer -> . LBRACE member_initializer_list RBRACE
    (168) object_initializer -> . LBRACE RBRACE
    (169) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (175) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (176) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE
    (189) conditional_expression -> . conditional_or_expression
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier

    LBRACE          shift and go to state 259
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    typeof_expression              shift and go to state 99
    relational_expression          shift and go to state 164
    inclusive_or_expression        shift and go to state 162
    identifier                     shift and go to state 147
    prefix                         shift and go to state 46
    array_creation_expression      shift and go to state 131
    object_or_collection_initializer shift and go to state 356
    assignment                     shift and go to state 149
    post_increment_expression      shift and go to state 150
    iMEMAi                         shift and go to state 123
    unary_expression               shift and go to state 151
    parenthesized_expression       shift and go to state 108
    exclusive_or_expression        shift and go to state 152
    expression                     shift and go to state 357
    invocation_expression          shift and go to state 148
    initializer_value              shift and go to state 358
    shift_expression               shift and go to state 154
    multiplicative_expression      shift and go to state 156
    member_access                  shift and go to state 129
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    conditional_and_expression     shift and go to state 159
    proper_identifier              shift and go to state 160
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    conditional_expression         shift and go to state 146
    non_assignment_expression      shift and go to state 163
    primary_no_array_creation_expression shift and go to state 138
    additive_expression            shift and go to state 167
    equality_expression            shift and go to state 165
    and_expression                 shift and go to state 166
    collection_initializer         shift and go to state 262
    primary_expression             shift and go to state 168
    object_initializer             shift and go to state 263
    conditional_or_expression      shift and go to state 169
    literal                        shift and go to state 145

state 343

    (180) element_initializer -> LBRACE expression_list . RBRACE
    (153) expression_list -> expression_list . COMMA expression

    RBRACE          shift and go to state 359
    COMMA           shift and go to state 313


state 344

    (176) collection_initializer -> LBRACE element_initializer_list COMMA . RBRACE
    (178) element_initializer_list -> element_initializer_list COMMA . element_initializer
    (179) element_initializer -> . non_assignment_expression
    (180) element_initializer -> . LBRACE expression_list RBRACE
    (188) non_assignment_expression -> . conditional_expression
    (189) conditional_expression -> . conditional_or_expression
    (190) conditional_or_expression -> . conditional_and_expression
    (191) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (192) conditional_and_expression -> . inclusive_or_expression
    (193) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (194) inclusive_or_expression -> . exclusive_or_expression
    (195) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (196) exclusive_or_expression -> . and_expression
    (197) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (198) and_expression -> . equality_expression
    (199) and_expression -> . and_expression AND equality_expression
    (200) equality_expression -> . relational_expression
    (201) equality_expression -> . equality_expression EQ relational_expression
    (202) equality_expression -> . equality_expression NE relational_expression
    (203) relational_expression -> . shift_expression
    (204) relational_expression -> . relational_expression LT shift_expression
    (205) relational_expression -> . relational_expression GT shift_expression
    (206) relational_expression -> . relational_expression LEQ shift_expression
    (207) relational_expression -> . relational_expression GEQ shift_expression
    (208) shift_expression -> . additive_expression
    (209) shift_expression -> . shift_expression LSHIFT additive_expression
    (210) shift_expression -> . shift_expression RSHIFT additive_expression
    (211) additive_expression -> . multiplicative_expression
    (212) additive_expression -> . additive_expression PLUS multiplicative_expression
    (213) additive_expression -> . additive_expression MINUS multiplicative_expression
    (214) multiplicative_expression -> . unary_expression
    (215) multiplicative_expression -> . identifier
    (216) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (217) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (218) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (219) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (220) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (221) multiplicative_expression -> . multiplicative_expression MOD identifier
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 360
    LBRACE          shift and go to state 317
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 170
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    proper_identifier              shift and go to state 160
    object_creation_expression     shift and go to state 157
    post_decrement_expression      shift and go to state 158
    relational_expression          shift and go to state 164
    inclusive_or_expression        shift and go to state 162
    identifier                     shift and go to state 285
    equality_expression            shift and go to state 165
    array_creation_expression      shift and go to state 131
    post_increment_expression      shift and go to state 150
    element_initializer            shift and go to state 361
    typeof_expression              shift and go to state 99
    iMEMAi                         shift and go to state 123
    additive_expression            shift and go to state 167
    element_access                 shift and go to state 107
    conditional_expression         shift and go to state 146
    non_assignment_expression      shift and go to state 319
    unary_expression               shift and go to state 286
    conditional_and_expression     shift and go to state 159
    primary_no_array_creation_expression shift and go to state 138
    exclusive_or_expression        shift and go to state 152
    member_access                  shift and go to state 129
    prefix                         shift and go to state 46
    and_expression                 shift and go to state 166
    parenthesized_expression       shift and go to state 108
    shift_expression               shift and go to state 154
    primary_expression             shift and go to state 168
    predefined_type                shift and go to state 161
    multiplicative_expression      shift and go to state 156
    conditional_or_expression      shift and go to state 169
    literal                        shift and go to state 145
    invocation_expression          shift and go to state 148

state 345

    (175) collection_initializer -> LBRACE element_initializer_list RBRACE .

    TERMINATOR      reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LBRACKET        reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LPAREN          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    INCREMENT       reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    DECREMENT       reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MEMBERACCESS    reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    EQUALS          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    TIMES           reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    DIVIDE          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MOD             reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    PLUS            reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MINUS           reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LSHIFT          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RSHIFT          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LT              reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    GT              reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LEQ             reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    GEQ             reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    EQ              reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    NE              reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    AND             reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    XOR             reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    OR              reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    CONAND          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    CONOR           reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    COMMA           reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RPAREN          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RBRACKET        reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RBRACE          reduce using rule 175 (collection_initializer -> LBRACE element_initializer_list RBRACE .)


state 346

    (158) object_creation_expression -> NEW type LPAREN argument_list RPAREN . object_or_collection_initializer
    (159) object_creation_expression -> NEW type LPAREN argument_list RPAREN .
    (165) object_or_collection_initializer -> . object_initializer
    (166) object_or_collection_initializer -> . collection_initializer
    (167) object_initializer -> . LBRACE member_initializer_list RBRACE
    (168) object_initializer -> . LBRACE RBRACE
    (169) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (175) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (176) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE

    TERMINATOR      reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LBRACKET        reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MOD             reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LT              reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    GT              reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    EQ              reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    NE              reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    AND             reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    XOR             reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    OR              reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 159 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LBRACE          shift and go to state 259

    collection_initializer         shift and go to state 262
    object_initializer             shift and go to state 263
    object_or_collection_initializer shift and go to state 362

state 347

    (181) array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .

    MEMBERACCESS    reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    MOD             reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LT              reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    GT              reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    EQ              reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    NE              reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    AND             reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    XOR             reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    OR              reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    CONAND          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    CONOR           reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    TERMINATOR      reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 181 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)


state 348

    (122) assignment -> identifier . assignment_operator expression
    (109) invocation_expression -> identifier . LPAREN RPAREN
    (110) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (155) post_increment_expression -> identifier . INCREMENT
    (157) post_decrement_expression -> identifier . DECREMENT
    (31) prefix -> identifier . MEMBERACCESS
    (151) element_access -> identifier . LBRACKET expression_list RBRACKET
    (187) iMEMAi -> identifier . MEMBERACCESS identifier
    (123) assignment_operator -> . EQUALS

    LPAREN          shift and go to state 184
    INCREMENT       shift and go to state 188
    DECREMENT       shift and go to state 189
    MEMBERACCESS    shift and go to state 186
    LBRACKET        shift and go to state 187
    EQUALS          shift and go to state 185

    assignment_operator            shift and go to state 183

state 349

    (117) iteration_statement -> while LPAREN expression RPAREN embedded_statement .

    RBRACE          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    PRINT           reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    NEW             reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    PLUS            reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    MINUS           reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    LNOT            reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    TILDE           reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    INTCONST        reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    STRCONST        reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    CHARCONST       reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    LPAREN          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    TYPEOF          reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)
    ELSE            reduce using rule 117 (iteration_statement -> while LPAREN expression RPAREN embedded_statement .)


state 350

    (186) unbound_type_name -> unbound_type_name MEMBERACCESS identifier .

    RPAREN          reduce using rule 186 (unbound_type_name -> unbound_type_name MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 186 (unbound_type_name -> unbound_type_name MEMBERACCESS identifier .)


state 351

    (113) if_statement -> if LPAREN expression RPAREN embedded_statement .
    (114) if_statement -> if LPAREN expression RPAREN embedded_statement . else embedded_statement
    (116) else -> . ELSE

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    PRINT           reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    NEW             reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    PLUS            reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    MINUS           reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    LNOT            reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    TILDE           reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    INTCONST        reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    STRCONST        reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    CHARCONST       reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    LPAREN          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    TYPEOF          reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .)
    ELSE            shift and go to state 364

  ! ELSE            [ reduce using rule 113 (if_statement -> if LPAREN expression RPAREN embedded_statement .) ]

    else                           shift and go to state 363

state 352

    (88) print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .

    RBRACE          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    TERMINATOR      reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    LBRACE          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    PRINT           reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    BREAK           reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    RETURN          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    NEW             reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    IF              reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    WHILE           reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    OBJECT          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    IDENTIFIER      reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    INT             reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    CHAR            reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    PLUS            reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    MINUS           reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    LNOT            reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    TILDE           reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    INTCONST        reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    STRCONST        reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    CHARCONST       reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    LPAREN          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    TYPEOF          reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    ELSE            reduce using rule 88 (print_statement -> PRINT LPAREN expression RPAREN TERMINATOR .)


state 353

    (169) object_initializer -> LBRACE member_initializer_list COMMA RBRACE .

    TERMINATOR      reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LBRACKET        reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LPAREN          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    INCREMENT       reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    DECREMENT       reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MEMBERACCESS    reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    EQUALS          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    TIMES           reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    DIVIDE          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MOD             reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    PLUS            reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MINUS           reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LSHIFT          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RSHIFT          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LT              reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    GT              reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LEQ             reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    GEQ             reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    EQ              reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    NE              reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    AND             reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    XOR             reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    OR              reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    CONAND          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    CONOR           reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RPAREN          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RBRACKET        reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 169 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)


state 354

    (172) member_initializer -> identifier . EQUALS initializer_value

    EQUALS          shift and go to state 342


state 355

    (171) member_initializer_list -> member_initializer_list COMMA member_initializer .

    RBRACE          reduce using rule 171 (member_initializer_list -> member_initializer_list COMMA member_initializer .)
    COMMA           reduce using rule 171 (member_initializer_list -> member_initializer_list COMMA member_initializer .)


state 356

    (174) initializer_value -> object_or_collection_initializer .

    RBRACE          reduce using rule 174 (initializer_value -> object_or_collection_initializer .)
    COMMA           reduce using rule 174 (initializer_value -> object_or_collection_initializer .)


state 357

    (173) initializer_value -> expression .

    RBRACE          reduce using rule 173 (initializer_value -> expression .)
    COMMA           reduce using rule 173 (initializer_value -> expression .)


state 358

    (172) member_initializer -> identifier EQUALS initializer_value .

    RBRACE          reduce using rule 172 (member_initializer -> identifier EQUALS initializer_value .)
    COMMA           reduce using rule 172 (member_initializer -> identifier EQUALS initializer_value .)


state 359

    (180) element_initializer -> LBRACE expression_list RBRACE .

    RBRACE          reduce using rule 180 (element_initializer -> LBRACE expression_list RBRACE .)
    COMMA           reduce using rule 180 (element_initializer -> LBRACE expression_list RBRACE .)


state 360

    (176) collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .

    TERMINATOR      reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LBRACKET        reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LPAREN          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    INCREMENT       reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    DECREMENT       reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MEMBERACCESS    reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    EQUALS          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    TIMES           reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    DIVIDE          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MOD             reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    PLUS            reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MINUS           reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LSHIFT          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RSHIFT          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LT              reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    GT              reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LEQ             reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    GEQ             reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    EQ              reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    NE              reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    AND             reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    XOR             reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    OR              reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    CONAND          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    CONOR           reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RPAREN          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RBRACKET        reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 176 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)


state 361

    (178) element_initializer_list -> element_initializer_list COMMA element_initializer .

    RBRACE          reduce using rule 178 (element_initializer_list -> element_initializer_list COMMA element_initializer .)
    COMMA           reduce using rule 178 (element_initializer_list -> element_initializer_list COMMA element_initializer .)


state 362

    (158) object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .

    TERMINATOR      reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LBRACKET        reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LPAREN          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    INCREMENT       reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    DECREMENT       reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MEMBERACCESS    reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    EQUALS          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    TIMES           reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    DIVIDE          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MOD             reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    PLUS            reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MINUS           reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LSHIFT          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RSHIFT          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LT              reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    GT              reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LEQ             reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    GEQ             reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    EQ              reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    NE              reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    AND             reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    XOR             reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    OR              reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    CONAND          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    CONOR           reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RBRACKET        reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    COMMA           reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RPAREN          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RBRACE          reduce using rule 158 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)


state 363

    (114) if_statement -> if LPAREN expression RPAREN embedded_statement else . embedded_statement
    (80) embedded_statement -> . block
    (81) embedded_statement -> . TERMINATOR
    (82) embedded_statement -> . statement_expression TERMINATOR
    (83) embedded_statement -> . if_statement
    (84) embedded_statement -> . iteration_statement
    (85) embedded_statement -> . print_statement
    (86) embedded_statement -> . break_statement
    (87) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE scope_marker statement_list RBRACE
    (102) statement_expression -> . object_creation_expression
    (103) statement_expression -> . assignment
    (104) statement_expression -> . invocation_expression
    (105) statement_expression -> . post_increment_expression
    (106) statement_expression -> . post_decrement_expression
    (113) if_statement -> . if LPAREN expression RPAREN embedded_statement
    (114) if_statement -> . if LPAREN expression RPAREN embedded_statement else embedded_statement
    (117) iteration_statement -> . while LPAREN expression RPAREN embedded_statement
    (88) print_statement -> . PRINT LPAREN expression RPAREN TERMINATOR
    (89) break_statement -> . BREAK TERMINATOR
    (91) return_statement -> . RETURN TERMINATOR
    (92) return_statement -> . RETURN expression TERMINATOR
    (158) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (159) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (160) object_creation_expression -> . NEW type LPAREN RPAREN
    (161) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (107) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (108) invocation_expression -> . primary_expression LPAREN RPAREN
    (109) invocation_expression -> . identifier LPAREN RPAREN
    (110) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (111) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (112) invocation_expression -> . proper_identifier LPAREN RPAREN
    (154) post_increment_expression -> . primary_expression INCREMENT
    (155) post_increment_expression -> . identifier INCREMENT
    (156) post_decrement_expression -> . primary_expression DECREMENT
    (157) post_decrement_expression -> . identifier DECREMENT
    (115) if -> . IF
    (118) while -> . WHILE
    (124) unary_expression -> . primary_expression
    (125) unary_expression -> . PLUS unary_expression
    (126) unary_expression -> . PLUS identifier
    (127) unary_expression -> . MINUS unary_expression
    (128) unary_expression -> . MINUS identifier
    (129) unary_expression -> . LNOT unary_expression
    (130) unary_expression -> . LNOT identifier
    (131) unary_expression -> . TILDE unary_expression
    (132) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (133) primary_expression -> . primary_no_array_creation_expression
    (134) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (135) primary_no_array_creation_expression -> . literal
    (136) primary_no_array_creation_expression -> . parenthesized_expression
    (137) primary_no_array_creation_expression -> . member_access
    (138) primary_no_array_creation_expression -> . element_access
    (139) primary_no_array_creation_expression -> . post_increment_expression
    (140) primary_no_array_creation_expression -> . invocation_expression
    (141) primary_no_array_creation_expression -> . post_decrement_expression
    (142) primary_no_array_creation_expression -> . object_creation_expression
    (143) primary_no_array_creation_expression -> . typeof_expression
    (181) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (93) literal -> . INTCONST
    (94) literal -> . STRCONST
    (95) literal -> . CHARCONST
    (144) parenthesized_expression -> . LPAREN expression RPAREN
    (145) member_access -> . primary_expression MEMBERACCESS identifier
    (146) member_access -> . iMEMAi
    (147) member_access -> . predefined_type MEMBERACCESS identifier
    (150) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (151) element_access -> . identifier LBRACKET expression_list RBRACKET
    (182) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (183) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (184) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (187) iMEMAi -> . identifier MEMBERACCESS identifier
    (148) predefined_type -> . INT
    (149) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 139
    LBRACE          shift and go to state 57
    PRINT           shift and go to state 143
    BREAK           shift and go to state 136
    RETURN          shift and go to state 113
    NEW             shift and go to state 106
    IF              shift and go to state 115
    WHILE           shift and go to state 125
    PLUS            shift and go to state 134
    MINUS           shift and go to state 130
    LNOT            shift and go to state 137
    TILDE           shift and go to state 142
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 133
    STRCONST        shift and go to state 105
    CHARCONST       shift and go to state 98
    LPAREN          shift and go to state 122
    TYPEOF          shift and go to state 119
    INT             shift and go to state 38
    CHAR            shift and go to state 48

    unary_expression               shift and go to state 126
    iteration_statement            shift and go to state 127
    post_decrement_expression      shift and go to state 128
    identifier                     shift and go to state 348
    array_creation_expression      shift and go to state 131
    typeof_expression              shift and go to state 99
    proper_identifier              shift and go to state 160
    post_increment_expression      shift and go to state 103
    object_creation_expression     shift and go to state 110
    iMEMAi                         shift and go to state 123
    predefined_type                shift and go to state 161
    element_access                 shift and go to state 107
    assignment                     shift and go to state 135
    while                          shift and go to state 114
    parenthesized_expression       shift and go to state 108
    primary_no_array_creation_expression shift and go to state 138
    member_access                  shift and go to state 129
    if_statement                   shift and go to state 111
    block                          shift and go to state 117
    break_statement                shift and go to state 140
    prefix                         shift and go to state 46
    invocation_expression          shift and go to state 124
    return_statement               shift and go to state 112
    embedded_statement             shift and go to state 365
    primary_expression             shift and go to state 144
    statement_expression           shift and go to state 120
    if                             shift and go to state 121
    print_statement                shift and go to state 102
    literal                        shift and go to state 145

state 364

    (116) else -> ELSE .

    TERMINATOR      reduce using rule 116 (else -> ELSE .)
    LBRACE          reduce using rule 116 (else -> ELSE .)
    PRINT           reduce using rule 116 (else -> ELSE .)
    BREAK           reduce using rule 116 (else -> ELSE .)
    RETURN          reduce using rule 116 (else -> ELSE .)
    NEW             reduce using rule 116 (else -> ELSE .)
    IF              reduce using rule 116 (else -> ELSE .)
    WHILE           reduce using rule 116 (else -> ELSE .)
    PLUS            reduce using rule 116 (else -> ELSE .)
    MINUS           reduce using rule 116 (else -> ELSE .)
    LNOT            reduce using rule 116 (else -> ELSE .)
    TILDE           reduce using rule 116 (else -> ELSE .)
    IDENTIFIER      reduce using rule 116 (else -> ELSE .)
    INTCONST        reduce using rule 116 (else -> ELSE .)
    STRCONST        reduce using rule 116 (else -> ELSE .)
    CHARCONST       reduce using rule 116 (else -> ELSE .)
    LPAREN          reduce using rule 116 (else -> ELSE .)
    TYPEOF          reduce using rule 116 (else -> ELSE .)
    INT             reduce using rule 116 (else -> ELSE .)
    CHAR            reduce using rule 116 (else -> ELSE .)


state 365

    (114) if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .

    RBRACE          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    TERMINATOR      reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    LBRACE          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    PRINT           reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    BREAK           reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    RETURN          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    NEW             reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    IF              reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    WHILE           reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    OBJECT          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    IDENTIFIER      reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    INT             reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    CHAR            reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    PLUS            reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    MINUS           reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    LNOT            reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    TILDE           reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    INTCONST        reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    STRCONST        reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    CHARCONST       reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    LPAREN          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    TYPEOF          reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)
    ELSE            reduce using rule 114 (if_statement -> if LPAREN expression RPAREN embedded_statement else embedded_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 100 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 351 resolved as shift
