Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    LNOT
    RSHIFT
    GOTO
    NE
    CONAND
    COLON
    LSHIFT
    NEW
    SIZEOF
    NULL
    MINUS
    GEQ
    NEWLINE
    BACKSLASH
    LT
    SINGLEQUOTE
    PLUS
    INCREMENT
    STRING
    GT
    XOR
    DIVIDE
    CONOR
    COMMENTSLINE
    TIMES
    PLUSEQUAL
    SHORT
    EQ
    DOUBLEQUOTE
    AND
    COMMENTDELIM
    MINUSEQUAL
    LEQ
    USING
    DECREMENT
    OR
    MOD

Grammar

Rule 0     S' -> start
Rule 1     start -> compilation_unit
Rule 2     compilation_unit -> class_declarations
Rule 3     class_declarations -> class_declarations class_declaration
Rule 4     class_declarations -> class_declaration
Rule 5     class_declaration -> modifiers CLASS identifier class_body TERMINATOR
Rule 6     class_declaration -> CLASS identifier class_body TERMINATOR
Rule 7     class_declaration -> CLASS identifier class_body
Rule 8     class_declaration -> modifiers CLASS identifier class_body
Rule 9     class_body -> LBRACE class_member_declarations RBRACE
Rule 10    class_body -> LBRACE RBRACE
Rule 11    identifier -> IDENTIFIER
Rule 12    class_member_declarations -> class_member_declaration
Rule 13    class_member_declarations -> class_member_declarations class_member_declaration
Rule 14    class_member_declaration -> field_declaration
Rule 15    class_member_declaration -> method_declaration
Rule 16    class_member_declaration -> constructor_declaration
Rule 17    class_member_declaration -> destructor_declaration
Rule 18    field_declaration -> modifiers type variable_declarators TERMINATOR
Rule 19    field_declaration -> type variable_declarators TERMINATOR
Rule 20    type -> reference_type
Rule 21    type -> type_parameter
Rule 22    reference_type -> class_type
Rule 23    reference_type -> array_type
Rule 24    class_type -> proper_identifier
Rule 25    class_type -> OBJECT
Rule 26    proper_identifier -> prefix identifier
Rule 27    prefix -> identifier MEMBERACCESS
Rule 28    prefix -> prefix identifier MEMBERACCESS
Rule 29    array_type -> non_array_type LBRACKET RBRACKET
Rule 30    non_array_type -> type
Rule 31    type_parameter -> identifier
Rule 32    type_parameter -> INT
Rule 33    type_parameter -> CHAR
Rule 34    variable_declarators -> variable_declarator
Rule 35    variable_declarators -> variable_declarators COMMA variable_declarator
Rule 36    variable_declarator -> identifier
Rule 37    variable_declarator -> identifier EQUALS variable_initializer
Rule 38    variable_initializer -> expression
Rule 39    variable_initializer -> array_initializer
Rule 40    array_initializer -> LBRACE variable_initializer_list RBRACE
Rule 41    array_initializer -> LBRACE RBRACE
Rule 42    array_initializer -> LBRACE variable_initializer_list COMMA RBRACE
Rule 43    variable_initializer_list -> variable_initializer
Rule 44    variable_initializer_list -> variable_initializer_list COMMA variable_initializer
Rule 45    method_declaration -> method_header
Rule 46    method_declaration -> method_body
Rule 47    method_header -> return_type member_name LPAREN fixed_parameters RPAREN
Rule 48    method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN
Rule 49    method_header -> return_type member_name LPAREN RPAREN
Rule 50    method_header -> modifiers return_type member_name LPAREN RPAREN
Rule 51    modifiers -> modifier
Rule 52    modifiers -> modifiers modifier
Rule 53    modifier -> PUBLIC
Rule 54    modifier -> PRIVATE
Rule 55    return_type -> type
Rule 56    return_type -> VOID
Rule 57    member_name -> identifier
Rule 58    method_body -> block
Rule 59    method_body -> TERMINATOR
Rule 60    fixed_parameters -> fixed_parameter
Rule 61    fixed_parameters -> fixed_parameters COMMA fixed_parameter
Rule 62    fixed_parameter -> type identifier default_argument
Rule 63    fixed_parameter -> type identifier
Rule 64    default_argument -> EQUALS expression
Rule 65    constructor_declaration -> constructor_declarator constructor_body
Rule 66    constructor_declarator -> identifier LPAREN fixed_parameters RPAREN
Rule 67    constructor_declarator -> identifier LPAREN RPAREN
Rule 68    constructor_body -> block
Rule 69    constructor_body -> TERMINATOR
Rule 70    destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body
Rule 71    destructor_body -> block
Rule 72    destructor_body -> TERMINATOR
Rule 73    block -> LBRACE RBRACE
Rule 74    block -> LBRACE statement_list RBRACE
Rule 75    statement_list -> statement
Rule 76    statement_list -> statement_list statement
Rule 77    statement -> local_variable_declaration TERMINATOR
Rule 78    statement -> embedded_statement
Rule 79    embedded_statement -> block
Rule 80    embedded_statement -> TERMINATOR
Rule 81    embedded_statement -> statement_expression TERMINATOR
Rule 82    embedded_statement -> if_statement
Rule 83    embedded_statement -> iteration_statement
Rule 84    embedded_statement -> break_statement
Rule 85    embedded_statement -> continue_statement
Rule 86    embedded_statement -> return_statement
Rule 87    break_statement -> BREAK TERMINATOR
Rule 88    continue_statement -> CONTINUE TERMINATOR
Rule 89    return_statement -> RETURN TERMINATOR
Rule 90    return_statement -> RETURN expression TERMINATOR
Rule 91    literal -> INTCONST
Rule 92    literal -> STRCONST
Rule 93    literal -> CHARCONST
Rule 94    local_variable_declaration -> type local_variable_declarators
Rule 95    local_variable_declarators -> local_variable_declarator
Rule 96    local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator
Rule 97    local_variable_declarator -> identifier
Rule 98    local_variable_declarator -> identifier EQUALS local_variable_initializer
Rule 99    local_variable_initializer -> expression
Rule 100   statement_expression -> object_creation_expression
Rule 101   statement_expression -> assignment
Rule 102   statement_expression -> post_increment_expression
Rule 103   statement_expression -> post_decrement_expression
Rule 104   if_statement -> IF LPAREN expression RPAREN embedded_statement
Rule 105   if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
Rule 106   iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement
Rule 107   expression -> empty
Rule 108   object_creation_expression -> empty
Rule 109   assignment -> empty
Rule 110   post_increment_expression -> empty
Rule 111   post_decrement_expression -> empty
Rule 112   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BACKSLASH            : 
BREAK                : 87
CHAR                 : 33
CHARCONST            : 93
CLASS                : 5 6 7 8
COLON                : 
COMMA                : 35 42 44 61 96
COMMENTDELIM         : 
COMMENTSLINE         : 
CONAND               : 
CONOR                : 
CONTINUE             : 88
DECREMENT            : 
DIVIDE               : 
DOUBLEQUOTE          : 
ELSE                 : 105
EQ                   : 
EQUALS               : 37 64 98
GEQ                  : 
GOTO                 : 
GT                   : 
IDENTIFIER           : 11
IF                   : 104 105
INCREMENT            : 
INT                  : 32
INTCONST             : 91
LBRACE               : 9 10 40 41 42 73 74
LBRACKET             : 29
LEQ                  : 
LNOT                 : 
LPAREN               : 47 48 49 50 66 67 70 104 105 106
LSHIFT               : 
LT                   : 
MEMBERACCESS         : 27 28
MINUS                : 
MINUSEQUAL           : 
MOD                  : 
NE                   : 
NEW                  : 
NEWLINE              : 
NULL                 : 
OBJECT               : 25
OR                   : 
PLUS                 : 
PLUSEQUAL            : 
PRIVATE              : 54
PUBLIC               : 53
RBRACE               : 9 10 40 41 42 73 74
RBRACKET             : 29
RETURN               : 89 90
RPAREN               : 47 48 49 50 66 67 70 104 105 106
RSHIFT               : 
SHORT                : 
SINGLEQUOTE          : 
SIZEOF               : 
STRCONST             : 92
STRING               : 
TERMINATOR           : 5 6 18 19 59 69 72 77 80 81 87 88 89 90
TILDE                : 70
TIMES                : 
USING                : 
VOID                 : 56
WHILE                : 106
XOR                  : 
error                : 

Nonterminals, with rules where they appear

array_initializer    : 39
array_type           : 23
assignment           : 101
block                : 58 68 71 79
break_statement      : 84
class_body           : 5 6 7 8
class_declaration    : 3 4
class_declarations   : 2 3
class_member_declaration : 12 13
class_member_declarations : 9 13
class_type           : 22
compilation_unit     : 1
constructor_body     : 65
constructor_declaration : 16
constructor_declarator : 65
continue_statement   : 85
default_argument     : 62
destructor_body      : 70
destructor_declaration : 17
embedded_statement   : 78 104 105 105 106
empty                : 107 108 109 110 111
expression           : 38 64 90 99 104 105 106
field_declaration    : 14
fixed_parameter      : 60 61
fixed_parameters     : 47 48 61 66
identifier           : 5 6 7 8 26 27 28 31 36 37 57 62 63 66 67 70 97 98
if_statement         : 82
iteration_statement  : 83
literal              : 
local_variable_declaration : 77
local_variable_declarator : 95 96
local_variable_declarators : 94 96
local_variable_initializer : 98
member_name          : 47 48 49 50
method_body          : 46
method_declaration   : 15
method_header        : 45
modifier             : 51 52
modifiers            : 5 8 18 48 50 52
non_array_type       : 29
object_creation_expression : 100
post_decrement_expression : 103
post_increment_expression : 102
prefix               : 26 28
proper_identifier    : 24
reference_type       : 20
return_statement     : 86
return_type          : 47 48 49 50
start                : 0
statement            : 75 76
statement_expression : 81
statement_list       : 74 76
type                 : 18 19 30 55 62 63 94
type_parameter       : 21
variable_declarator  : 34 35
variable_declarators : 18 19 35
variable_initializer : 37 43 44
variable_initializer_list : 40 42 44

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . compilation_unit
    (2) compilation_unit -> . class_declarations
    (3) class_declarations -> . class_declarations class_declaration
    (4) class_declarations -> . class_declaration
    (5) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (6) class_declaration -> . CLASS identifier class_body TERMINATOR
    (7) class_declaration -> . CLASS identifier class_body
    (8) class_declaration -> . modifiers CLASS identifier class_body
    (51) modifiers -> . modifier
    (52) modifiers -> . modifiers modifier
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE

    CLASS           shift and go to state 9
    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3

    class_declarations             shift and go to state 1
    modifiers                      shift and go to state 2
    compilation_unit               shift and go to state 4
    class_declaration              shift and go to state 6
    start                          shift and go to state 7
    modifier                       shift and go to state 8

state 1

    (2) compilation_unit -> class_declarations .
    (3) class_declarations -> class_declarations . class_declaration
    (5) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (6) class_declaration -> . CLASS identifier class_body TERMINATOR
    (7) class_declaration -> . CLASS identifier class_body
    (8) class_declaration -> . modifiers CLASS identifier class_body
    (51) modifiers -> . modifier
    (52) modifiers -> . modifiers modifier
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE

    $end            reduce using rule 2 (compilation_unit -> class_declarations .)
    CLASS           shift and go to state 9
    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3

    modifiers                      shift and go to state 2
    class_declaration              shift and go to state 10
    modifier                       shift and go to state 8

state 2

    (5) class_declaration -> modifiers . CLASS identifier class_body TERMINATOR
    (8) class_declaration -> modifiers . CLASS identifier class_body
    (52) modifiers -> modifiers . modifier
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE

    CLASS           shift and go to state 12
    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3

    modifier                       shift and go to state 11

state 3

    (54) modifier -> PRIVATE .

    PUBLIC          reduce using rule 54 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 54 (modifier -> PRIVATE .)
    VOID            reduce using rule 54 (modifier -> PRIVATE .)
    INT             reduce using rule 54 (modifier -> PRIVATE .)
    CHAR            reduce using rule 54 (modifier -> PRIVATE .)
    OBJECT          reduce using rule 54 (modifier -> PRIVATE .)
    IDENTIFIER      reduce using rule 54 (modifier -> PRIVATE .)
    CLASS           reduce using rule 54 (modifier -> PRIVATE .)


state 4

    (1) start -> compilation_unit .

    $end            reduce using rule 1 (start -> compilation_unit .)


state 5

    (53) modifier -> PUBLIC .

    PUBLIC          reduce using rule 53 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 53 (modifier -> PUBLIC .)
    VOID            reduce using rule 53 (modifier -> PUBLIC .)
    INT             reduce using rule 53 (modifier -> PUBLIC .)
    CHAR            reduce using rule 53 (modifier -> PUBLIC .)
    OBJECT          reduce using rule 53 (modifier -> PUBLIC .)
    IDENTIFIER      reduce using rule 53 (modifier -> PUBLIC .)
    CLASS           reduce using rule 53 (modifier -> PUBLIC .)


state 6

    (4) class_declarations -> class_declaration .

    CLASS           reduce using rule 4 (class_declarations -> class_declaration .)
    PUBLIC          reduce using rule 4 (class_declarations -> class_declaration .)
    PRIVATE         reduce using rule 4 (class_declarations -> class_declaration .)
    $end            reduce using rule 4 (class_declarations -> class_declaration .)


state 7

    (0) S' -> start .



state 8

    (51) modifiers -> modifier .

    CLASS           reduce using rule 51 (modifiers -> modifier .)
    PUBLIC          reduce using rule 51 (modifiers -> modifier .)
    PRIVATE         reduce using rule 51 (modifiers -> modifier .)
    VOID            reduce using rule 51 (modifiers -> modifier .)
    INT             reduce using rule 51 (modifiers -> modifier .)
    CHAR            reduce using rule 51 (modifiers -> modifier .)
    OBJECT          reduce using rule 51 (modifiers -> modifier .)
    IDENTIFIER      reduce using rule 51 (modifiers -> modifier .)


state 9

    (6) class_declaration -> CLASS . identifier class_body TERMINATOR
    (7) class_declaration -> CLASS . identifier class_body
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 14

state 10

    (3) class_declarations -> class_declarations class_declaration .

    CLASS           reduce using rule 3 (class_declarations -> class_declarations class_declaration .)
    PUBLIC          reduce using rule 3 (class_declarations -> class_declarations class_declaration .)
    PRIVATE         reduce using rule 3 (class_declarations -> class_declarations class_declaration .)
    $end            reduce using rule 3 (class_declarations -> class_declarations class_declaration .)


state 11

    (52) modifiers -> modifiers modifier .

    CLASS           reduce using rule 52 (modifiers -> modifiers modifier .)
    PUBLIC          reduce using rule 52 (modifiers -> modifiers modifier .)
    PRIVATE         reduce using rule 52 (modifiers -> modifiers modifier .)
    VOID            reduce using rule 52 (modifiers -> modifiers modifier .)
    INT             reduce using rule 52 (modifiers -> modifiers modifier .)
    CHAR            reduce using rule 52 (modifiers -> modifiers modifier .)
    OBJECT          reduce using rule 52 (modifiers -> modifiers modifier .)
    IDENTIFIER      reduce using rule 52 (modifiers -> modifiers modifier .)


state 12

    (5) class_declaration -> modifiers CLASS . identifier class_body TERMINATOR
    (8) class_declaration -> modifiers CLASS . identifier class_body
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 15

state 13

    (11) identifier -> IDENTIFIER .

    EQUALS          reduce using rule 11 (identifier -> IDENTIFIER .)
    TERMINATOR      reduce using rule 11 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 11 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 11 (identifier -> IDENTIFIER .)
    MEMBERACCESS    reduce using rule 11 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 11 (identifier -> IDENTIFIER .)
    LBRACKET        reduce using rule 11 (identifier -> IDENTIFIER .)
    LBRACE          reduce using rule 11 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 11 (identifier -> IDENTIFIER .)


state 14

    (6) class_declaration -> CLASS identifier . class_body TERMINATOR
    (7) class_declaration -> CLASS identifier . class_body
    (9) class_body -> . LBRACE class_member_declarations RBRACE
    (10) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 16

    class_body                     shift and go to state 17

state 15

    (5) class_declaration -> modifiers CLASS identifier . class_body TERMINATOR
    (8) class_declaration -> modifiers CLASS identifier . class_body
    (9) class_body -> . LBRACE class_member_declarations RBRACE
    (10) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 16

    class_body                     shift and go to state 18

state 16

    (9) class_body -> LBRACE . class_member_declarations RBRACE
    (10) class_body -> LBRACE . RBRACE
    (12) class_member_declarations -> . class_member_declaration
    (13) class_member_declarations -> . class_member_declarations class_member_declaration
    (14) class_member_declaration -> . field_declaration
    (15) class_member_declaration -> . method_declaration
    (16) class_member_declaration -> . constructor_declaration
    (17) class_member_declaration -> . destructor_declaration
    (18) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (19) field_declaration -> . type variable_declarators TERMINATOR
    (45) method_declaration -> . method_header
    (46) method_declaration -> . method_body
    (65) constructor_declaration -> . constructor_declarator constructor_body
    (70) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (51) modifiers -> . modifier
    (52) modifiers -> . modifiers modifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (47) method_header -> . return_type member_name LPAREN fixed_parameters RPAREN
    (48) method_header -> . modifiers return_type member_name LPAREN fixed_parameters RPAREN
    (49) method_header -> . return_type member_name LPAREN RPAREN
    (50) method_header -> . modifiers return_type member_name LPAREN RPAREN
    (58) method_body -> . block
    (59) method_body -> . TERMINATOR
    (66) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> . identifier LPAREN RPAREN
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (55) return_type -> . type
    (56) return_type -> . VOID
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (11) identifier -> . IDENTIFIER
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 34
    TILDE           shift and go to state 30
    TERMINATOR      shift and go to state 38
    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    VOID            shift and go to state 21
    LBRACE          shift and go to state 41
    IDENTIFIER      shift and go to state 13
    OBJECT          shift and go to state 22

    constructor_declarator         shift and go to state 19
    reference_type                 shift and go to state 20
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    type_parameter                 shift and go to state 26
    constructor_declaration        shift and go to state 28
    method_declaration             shift and go to state 29
    class_member_declarations      shift and go to state 31
    type                           shift and go to state 32
    identifier                     shift and go to state 33
    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    method_body                    shift and go to state 36
    array_type                     shift and go to state 39
    return_type                    shift and go to state 40
    modifiers                      shift and go to state 37
    class_member_declaration       shift and go to state 42
    method_header                  shift and go to state 43
    field_declaration              shift and go to state 45
    destructor_declaration         shift and go to state 46
    modifier                       shift and go to state 8
    block                          shift and go to state 47

state 17

    (6) class_declaration -> CLASS identifier class_body . TERMINATOR
    (7) class_declaration -> CLASS identifier class_body .

    TERMINATOR      shift and go to state 48
    CLASS           reduce using rule 7 (class_declaration -> CLASS identifier class_body .)
    PUBLIC          reduce using rule 7 (class_declaration -> CLASS identifier class_body .)
    PRIVATE         reduce using rule 7 (class_declaration -> CLASS identifier class_body .)
    $end            reduce using rule 7 (class_declaration -> CLASS identifier class_body .)


state 18

    (5) class_declaration -> modifiers CLASS identifier class_body . TERMINATOR
    (8) class_declaration -> modifiers CLASS identifier class_body .

    TERMINATOR      shift and go to state 49
    CLASS           reduce using rule 8 (class_declaration -> modifiers CLASS identifier class_body .)
    PUBLIC          reduce using rule 8 (class_declaration -> modifiers CLASS identifier class_body .)
    PRIVATE         reduce using rule 8 (class_declaration -> modifiers CLASS identifier class_body .)
    $end            reduce using rule 8 (class_declaration -> modifiers CLASS identifier class_body .)


state 19

    (65) constructor_declaration -> constructor_declarator . constructor_body
    (68) constructor_body -> . block
    (69) constructor_body -> . TERMINATOR
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE

    TERMINATOR      shift and go to state 51
    LBRACE          shift and go to state 41

    constructor_body               shift and go to state 50
    block                          shift and go to state 52

state 20

    (20) type -> reference_type .

    IDENTIFIER      reduce using rule 20 (type -> reference_type .)
    LBRACKET        reduce using rule 20 (type -> reference_type .)


state 21

    (56) return_type -> VOID .

    IDENTIFIER      reduce using rule 56 (return_type -> VOID .)


state 22

    (25) class_type -> OBJECT .

    IDENTIFIER      reduce using rule 25 (class_type -> OBJECT .)
    LBRACKET        reduce using rule 25 (class_type -> OBJECT .)


state 23

    (24) class_type -> proper_identifier .

    IDENTIFIER      reduce using rule 24 (class_type -> proper_identifier .)
    LBRACKET        reduce using rule 24 (class_type -> proper_identifier .)


state 24

    (33) type_parameter -> CHAR .

    IDENTIFIER      reduce using rule 33 (type_parameter -> CHAR .)
    LBRACKET        reduce using rule 33 (type_parameter -> CHAR .)


state 25

    (26) proper_identifier -> prefix . identifier
    (28) prefix -> prefix . identifier MEMBERACCESS
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 53

state 26

    (21) type -> type_parameter .

    IDENTIFIER      reduce using rule 21 (type -> type_parameter .)
    LBRACKET        reduce using rule 21 (type -> type_parameter .)


state 27

    (22) reference_type -> class_type .

    IDENTIFIER      reduce using rule 22 (reference_type -> class_type .)
    LBRACKET        reduce using rule 22 (reference_type -> class_type .)


state 28

    (16) class_member_declaration -> constructor_declaration .

    RBRACE          reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    TILDE           reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    TERMINATOR      reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    PUBLIC          reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    PRIVATE         reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    INT             reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    CHAR            reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    VOID            reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    LBRACE          reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    IDENTIFIER      reduce using rule 16 (class_member_declaration -> constructor_declaration .)
    OBJECT          reduce using rule 16 (class_member_declaration -> constructor_declaration .)


state 29

    (15) class_member_declaration -> method_declaration .

    RBRACE          reduce using rule 15 (class_member_declaration -> method_declaration .)
    TILDE           reduce using rule 15 (class_member_declaration -> method_declaration .)
    TERMINATOR      reduce using rule 15 (class_member_declaration -> method_declaration .)
    PUBLIC          reduce using rule 15 (class_member_declaration -> method_declaration .)
    PRIVATE         reduce using rule 15 (class_member_declaration -> method_declaration .)
    INT             reduce using rule 15 (class_member_declaration -> method_declaration .)
    CHAR            reduce using rule 15 (class_member_declaration -> method_declaration .)
    VOID            reduce using rule 15 (class_member_declaration -> method_declaration .)
    LBRACE          reduce using rule 15 (class_member_declaration -> method_declaration .)
    IDENTIFIER      reduce using rule 15 (class_member_declaration -> method_declaration .)
    OBJECT          reduce using rule 15 (class_member_declaration -> method_declaration .)


state 30

    (70) destructor_declaration -> TILDE . identifier LPAREN RPAREN destructor_body
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 54

state 31

    (9) class_body -> LBRACE class_member_declarations . RBRACE
    (13) class_member_declarations -> class_member_declarations . class_member_declaration
    (14) class_member_declaration -> . field_declaration
    (15) class_member_declaration -> . method_declaration
    (16) class_member_declaration -> . constructor_declaration
    (17) class_member_declaration -> . destructor_declaration
    (18) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (19) field_declaration -> . type variable_declarators TERMINATOR
    (45) method_declaration -> . method_header
    (46) method_declaration -> . method_body
    (65) constructor_declaration -> . constructor_declarator constructor_body
    (70) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (51) modifiers -> . modifier
    (52) modifiers -> . modifiers modifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (47) method_header -> . return_type member_name LPAREN fixed_parameters RPAREN
    (48) method_header -> . modifiers return_type member_name LPAREN fixed_parameters RPAREN
    (49) method_header -> . return_type member_name LPAREN RPAREN
    (50) method_header -> . modifiers return_type member_name LPAREN RPAREN
    (58) method_body -> . block
    (59) method_body -> . TERMINATOR
    (66) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> . identifier LPAREN RPAREN
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (55) return_type -> . type
    (56) return_type -> . VOID
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (11) identifier -> . IDENTIFIER
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 55
    TILDE           shift and go to state 30
    TERMINATOR      shift and go to state 38
    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    VOID            shift and go to state 21
    LBRACE          shift and go to state 41
    IDENTIFIER      shift and go to state 13
    OBJECT          shift and go to state 22

    constructor_declarator         shift and go to state 19
    reference_type                 shift and go to state 20
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    type_parameter                 shift and go to state 26
    constructor_declaration        shift and go to state 28
    method_declaration             shift and go to state 29
    type                           shift and go to state 32
    identifier                     shift and go to state 33
    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    method_body                    shift and go to state 36
    array_type                     shift and go to state 39
    return_type                    shift and go to state 40
    modifiers                      shift and go to state 37
    class_member_declaration       shift and go to state 56
    method_header                  shift and go to state 43
    field_declaration              shift and go to state 45
    destructor_declaration         shift and go to state 46
    modifier                       shift and go to state 8
    block                          shift and go to state 47

state 32

    (19) field_declaration -> type . variable_declarators TERMINATOR
    (55) return_type -> type .
    (30) non_array_type -> type .
    (34) variable_declarators -> . variable_declarator
    (35) variable_declarators -> . variable_declarators COMMA variable_declarator
    (36) variable_declarator -> . identifier
    (37) variable_declarator -> . identifier EQUALS variable_initializer
    (11) identifier -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACKET        reduce using rule 30 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 13

  ! IDENTIFIER      [ reduce using rule 55 (return_type -> type .) ]

    variable_declarators           shift and go to state 57
    identifier                     shift and go to state 59
    variable_declarator            shift and go to state 58

state 33

    (66) constructor_declarator -> identifier . LPAREN fixed_parameters RPAREN
    (67) constructor_declarator -> identifier . LPAREN RPAREN
    (31) type_parameter -> identifier .
    (27) prefix -> identifier . MEMBERACCESS

    LPAREN          shift and go to state 61
    IDENTIFIER      reduce using rule 31 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 31 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 60


state 34

    (10) class_body -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 10 (class_body -> LBRACE RBRACE .)
    CLASS           reduce using rule 10 (class_body -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 10 (class_body -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 10 (class_body -> LBRACE RBRACE .)
    $end            reduce using rule 10 (class_body -> LBRACE RBRACE .)


state 35

    (29) array_type -> non_array_type . LBRACKET RBRACKET

    LBRACKET        shift and go to state 62


state 36

    (46) method_declaration -> method_body .

    RBRACE          reduce using rule 46 (method_declaration -> method_body .)
    TILDE           reduce using rule 46 (method_declaration -> method_body .)
    TERMINATOR      reduce using rule 46 (method_declaration -> method_body .)
    PUBLIC          reduce using rule 46 (method_declaration -> method_body .)
    PRIVATE         reduce using rule 46 (method_declaration -> method_body .)
    INT             reduce using rule 46 (method_declaration -> method_body .)
    CHAR            reduce using rule 46 (method_declaration -> method_body .)
    VOID            reduce using rule 46 (method_declaration -> method_body .)
    LBRACE          reduce using rule 46 (method_declaration -> method_body .)
    IDENTIFIER      reduce using rule 46 (method_declaration -> method_body .)
    OBJECT          reduce using rule 46 (method_declaration -> method_body .)


state 37

    (18) field_declaration -> modifiers . type variable_declarators TERMINATOR
    (52) modifiers -> modifiers . modifier
    (48) method_header -> modifiers . return_type member_name LPAREN fixed_parameters RPAREN
    (50) method_header -> modifiers . return_type member_name LPAREN RPAREN
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (53) modifier -> . PUBLIC
    (54) modifier -> . PRIVATE
    (55) return_type -> . type
    (56) return_type -> . VOID
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    PUBLIC          shift and go to state 5
    PRIVATE         shift and go to state 3
    VOID            shift and go to state 21
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

    class_type                     shift and go to state 27
    identifier                     shift and go to state 65
    non_array_type                 shift and go to state 35
    reference_type                 shift and go to state 20
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    array_type                     shift and go to state 39
    return_type                    shift and go to state 64
    modifier                       shift and go to state 11
    type                           shift and go to state 63
    type_parameter                 shift and go to state 26

state 38

    (59) method_body -> TERMINATOR .

    RBRACE          reduce using rule 59 (method_body -> TERMINATOR .)
    TILDE           reduce using rule 59 (method_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 59 (method_body -> TERMINATOR .)
    PUBLIC          reduce using rule 59 (method_body -> TERMINATOR .)
    PRIVATE         reduce using rule 59 (method_body -> TERMINATOR .)
    INT             reduce using rule 59 (method_body -> TERMINATOR .)
    CHAR            reduce using rule 59 (method_body -> TERMINATOR .)
    VOID            reduce using rule 59 (method_body -> TERMINATOR .)
    LBRACE          reduce using rule 59 (method_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 59 (method_body -> TERMINATOR .)
    OBJECT          reduce using rule 59 (method_body -> TERMINATOR .)


state 39

    (23) reference_type -> array_type .

    IDENTIFIER      reduce using rule 23 (reference_type -> array_type .)
    LBRACKET        reduce using rule 23 (reference_type -> array_type .)


state 40

    (47) method_header -> return_type . member_name LPAREN fixed_parameters RPAREN
    (49) method_header -> return_type . member_name LPAREN RPAREN
    (57) member_name -> . identifier
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 67
    member_name                    shift and go to state 66

state 41

    (73) block -> LBRACE . RBRACE
    (74) block -> LBRACE . statement_list RBRACE
    (75) statement_list -> . statement
    (76) statement_list -> . statement_list statement
    (77) statement -> . local_variable_declaration TERMINATOR
    (78) statement -> . embedded_statement
    (94) local_variable_declaration -> . type local_variable_declarators
    (79) embedded_statement -> . block
    (80) embedded_statement -> . TERMINATOR
    (81) embedded_statement -> . statement_expression TERMINATOR
    (82) embedded_statement -> . if_statement
    (83) embedded_statement -> . iteration_statement
    (84) embedded_statement -> . break_statement
    (85) embedded_statement -> . continue_statement
    (86) embedded_statement -> . return_statement
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (100) statement_expression -> . object_creation_expression
    (101) statement_expression -> . assignment
    (102) statement_expression -> . post_increment_expression
    (103) statement_expression -> . post_decrement_expression
    (104) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (105) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (87) break_statement -> . BREAK TERMINATOR
    (88) continue_statement -> . CONTINUE TERMINATOR
    (89) return_statement -> . RETURN TERMINATOR
    (90) return_statement -> . RETURN expression TERMINATOR
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (108) object_creation_expression -> . empty
    (109) assignment -> . empty
    (110) post_increment_expression -> . empty
    (111) post_decrement_expression -> . empty
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (112) empty -> .
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

  ! shift/reduce conflict for TERMINATOR resolved as shift
    RBRACE          shift and go to state 82
    TERMINATOR      shift and go to state 84
    LBRACE          shift and go to state 41
    IF              shift and go to state 85
    WHILE           shift and go to state 71
    BREAK           shift and go to state 86
    CONTINUE        shift and go to state 87
    RETURN          shift and go to state 69
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    object_creation_expression     shift and go to state 68
    proper_identifier              shift and go to state 23
    break_statement                shift and go to state 70
    prefix                         shift and go to state 25
    iteration_statement            shift and go to state 72
    type_parameter                 shift and go to state 26
    post_decrement_expression      shift and go to state 73
    reference_type                 shift and go to state 20
    embedded_statement             shift and go to state 74
    return_statement               shift and go to state 75
    continue_statement             shift and go to state 76
    statement                      shift and go to state 77
    statement_expression           shift and go to state 78
    if_statement                   shift and go to state 80
    type                           shift and go to state 79
    empty                          shift and go to state 81
    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    assignment                     shift and go to state 83
    array_type                     shift and go to state 39
    post_increment_expression      shift and go to state 88
    local_variable_declaration     shift and go to state 89
    statement_list                 shift and go to state 90
    identifier                     shift and go to state 65
    block                          shift and go to state 91

state 42

    (12) class_member_declarations -> class_member_declaration .

    RBRACE          reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    TILDE           reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    TERMINATOR      reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    PUBLIC          reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    PRIVATE         reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    INT             reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    CHAR            reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    VOID            reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    LBRACE          reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    IDENTIFIER      reduce using rule 12 (class_member_declarations -> class_member_declaration .)
    OBJECT          reduce using rule 12 (class_member_declarations -> class_member_declaration .)


state 43

    (45) method_declaration -> method_header .

    RBRACE          reduce using rule 45 (method_declaration -> method_header .)
    TILDE           reduce using rule 45 (method_declaration -> method_header .)
    TERMINATOR      reduce using rule 45 (method_declaration -> method_header .)
    PUBLIC          reduce using rule 45 (method_declaration -> method_header .)
    PRIVATE         reduce using rule 45 (method_declaration -> method_header .)
    INT             reduce using rule 45 (method_declaration -> method_header .)
    CHAR            reduce using rule 45 (method_declaration -> method_header .)
    VOID            reduce using rule 45 (method_declaration -> method_header .)
    LBRACE          reduce using rule 45 (method_declaration -> method_header .)
    IDENTIFIER      reduce using rule 45 (method_declaration -> method_header .)
    OBJECT          reduce using rule 45 (method_declaration -> method_header .)


state 44

    (32) type_parameter -> INT .

    IDENTIFIER      reduce using rule 32 (type_parameter -> INT .)
    LBRACKET        reduce using rule 32 (type_parameter -> INT .)


state 45

    (14) class_member_declaration -> field_declaration .

    RBRACE          reduce using rule 14 (class_member_declaration -> field_declaration .)
    TILDE           reduce using rule 14 (class_member_declaration -> field_declaration .)
    TERMINATOR      reduce using rule 14 (class_member_declaration -> field_declaration .)
    PUBLIC          reduce using rule 14 (class_member_declaration -> field_declaration .)
    PRIVATE         reduce using rule 14 (class_member_declaration -> field_declaration .)
    INT             reduce using rule 14 (class_member_declaration -> field_declaration .)
    CHAR            reduce using rule 14 (class_member_declaration -> field_declaration .)
    VOID            reduce using rule 14 (class_member_declaration -> field_declaration .)
    LBRACE          reduce using rule 14 (class_member_declaration -> field_declaration .)
    IDENTIFIER      reduce using rule 14 (class_member_declaration -> field_declaration .)
    OBJECT          reduce using rule 14 (class_member_declaration -> field_declaration .)


state 46

    (17) class_member_declaration -> destructor_declaration .

    RBRACE          reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    TILDE           reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    TERMINATOR      reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    PUBLIC          reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    PRIVATE         reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    INT             reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    CHAR            reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    VOID            reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    LBRACE          reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    IDENTIFIER      reduce using rule 17 (class_member_declaration -> destructor_declaration .)
    OBJECT          reduce using rule 17 (class_member_declaration -> destructor_declaration .)


state 47

    (58) method_body -> block .

    RBRACE          reduce using rule 58 (method_body -> block .)
    TILDE           reduce using rule 58 (method_body -> block .)
    TERMINATOR      reduce using rule 58 (method_body -> block .)
    PUBLIC          reduce using rule 58 (method_body -> block .)
    PRIVATE         reduce using rule 58 (method_body -> block .)
    INT             reduce using rule 58 (method_body -> block .)
    CHAR            reduce using rule 58 (method_body -> block .)
    VOID            reduce using rule 58 (method_body -> block .)
    LBRACE          reduce using rule 58 (method_body -> block .)
    IDENTIFIER      reduce using rule 58 (method_body -> block .)
    OBJECT          reduce using rule 58 (method_body -> block .)


state 48

    (6) class_declaration -> CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 6 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 6 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 6 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 6 (class_declaration -> CLASS identifier class_body TERMINATOR .)


state 49

    (5) class_declaration -> modifiers CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 5 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 5 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 5 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 5 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)


state 50

    (65) constructor_declaration -> constructor_declarator constructor_body .

    RBRACE          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    TILDE           reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    TERMINATOR      reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    PUBLIC          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    PRIVATE         reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    INT             reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    CHAR            reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    VOID            reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    LBRACE          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    IDENTIFIER      reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)
    OBJECT          reduce using rule 65 (constructor_declaration -> constructor_declarator constructor_body .)


state 51

    (69) constructor_body -> TERMINATOR .

    RBRACE          reduce using rule 69 (constructor_body -> TERMINATOR .)
    TILDE           reduce using rule 69 (constructor_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 69 (constructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 69 (constructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 69 (constructor_body -> TERMINATOR .)
    INT             reduce using rule 69 (constructor_body -> TERMINATOR .)
    CHAR            reduce using rule 69 (constructor_body -> TERMINATOR .)
    VOID            reduce using rule 69 (constructor_body -> TERMINATOR .)
    LBRACE          reduce using rule 69 (constructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 69 (constructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 69 (constructor_body -> TERMINATOR .)


state 52

    (68) constructor_body -> block .

    RBRACE          reduce using rule 68 (constructor_body -> block .)
    TILDE           reduce using rule 68 (constructor_body -> block .)
    TERMINATOR      reduce using rule 68 (constructor_body -> block .)
    PUBLIC          reduce using rule 68 (constructor_body -> block .)
    PRIVATE         reduce using rule 68 (constructor_body -> block .)
    INT             reduce using rule 68 (constructor_body -> block .)
    CHAR            reduce using rule 68 (constructor_body -> block .)
    VOID            reduce using rule 68 (constructor_body -> block .)
    LBRACE          reduce using rule 68 (constructor_body -> block .)
    IDENTIFIER      reduce using rule 68 (constructor_body -> block .)
    OBJECT          reduce using rule 68 (constructor_body -> block .)


state 53

    (26) proper_identifier -> prefix identifier .
    (28) prefix -> prefix identifier . MEMBERACCESS

    IDENTIFIER      reduce using rule 26 (proper_identifier -> prefix identifier .)
    LBRACKET        reduce using rule 26 (proper_identifier -> prefix identifier .)
    MEMBERACCESS    shift and go to state 92


state 54

    (70) destructor_declaration -> TILDE identifier . LPAREN RPAREN destructor_body

    LPAREN          shift and go to state 93


state 55

    (9) class_body -> LBRACE class_member_declarations RBRACE .

    TERMINATOR      reduce using rule 9 (class_body -> LBRACE class_member_declarations RBRACE .)
    CLASS           reduce using rule 9 (class_body -> LBRACE class_member_declarations RBRACE .)
    PUBLIC          reduce using rule 9 (class_body -> LBRACE class_member_declarations RBRACE .)
    PRIVATE         reduce using rule 9 (class_body -> LBRACE class_member_declarations RBRACE .)
    $end            reduce using rule 9 (class_body -> LBRACE class_member_declarations RBRACE .)


state 56

    (13) class_member_declarations -> class_member_declarations class_member_declaration .

    RBRACE          reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    TILDE           reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    TERMINATOR      reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PUBLIC          reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PRIVATE         reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    INT             reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    CHAR            reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    VOID            reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    LBRACE          reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    IDENTIFIER      reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)
    OBJECT          reduce using rule 13 (class_member_declarations -> class_member_declarations class_member_declaration .)


state 57

    (19) field_declaration -> type variable_declarators . TERMINATOR
    (35) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 95
    COMMA           shift and go to state 94


state 58

    (34) variable_declarators -> variable_declarator .

    TERMINATOR      reduce using rule 34 (variable_declarators -> variable_declarator .)
    COMMA           reduce using rule 34 (variable_declarators -> variable_declarator .)


state 59

    (36) variable_declarator -> identifier .
    (37) variable_declarator -> identifier . EQUALS variable_initializer

    TERMINATOR      reduce using rule 36 (variable_declarator -> identifier .)
    COMMA           reduce using rule 36 (variable_declarator -> identifier .)
    EQUALS          shift and go to state 96


state 60

    (27) prefix -> identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 27 (prefix -> identifier MEMBERACCESS .)


state 61

    (66) constructor_declarator -> identifier LPAREN . fixed_parameters RPAREN
    (67) constructor_declarator -> identifier LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 97
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    reference_type                 shift and go to state 20
    fixed_parameters               shift and go to state 100
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    fixed_parameter                shift and go to state 99
    array_type                     shift and go to state 39
    identifier                     shift and go to state 65
    type                           shift and go to state 98
    type_parameter                 shift and go to state 26

state 62

    (29) array_type -> non_array_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 101


state 63

    (18) field_declaration -> modifiers type . variable_declarators TERMINATOR
    (55) return_type -> type .
    (30) non_array_type -> type .
    (34) variable_declarators -> . variable_declarator
    (35) variable_declarators -> . variable_declarators COMMA variable_declarator
    (36) variable_declarator -> . identifier
    (37) variable_declarator -> . identifier EQUALS variable_initializer
    (11) identifier -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACKET        reduce using rule 30 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 13

  ! IDENTIFIER      [ reduce using rule 55 (return_type -> type .) ]

    variable_declarators           shift and go to state 102
    variable_declarator            shift and go to state 58
    identifier                     shift and go to state 59

state 64

    (48) method_header -> modifiers return_type . member_name LPAREN fixed_parameters RPAREN
    (50) method_header -> modifiers return_type . member_name LPAREN RPAREN
    (57) member_name -> . identifier
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 67
    member_name                    shift and go to state 103

state 65

    (31) type_parameter -> identifier .
    (27) prefix -> identifier . MEMBERACCESS

    IDENTIFIER      reduce using rule 31 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 31 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 60


state 66

    (47) method_header -> return_type member_name . LPAREN fixed_parameters RPAREN
    (49) method_header -> return_type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 67

    (57) member_name -> identifier .

    LPAREN          reduce using rule 57 (member_name -> identifier .)


state 68

    (100) statement_expression -> object_creation_expression .

    TERMINATOR      reduce using rule 100 (statement_expression -> object_creation_expression .)


state 69

    (89) return_statement -> RETURN . TERMINATOR
    (90) return_statement -> RETURN . expression TERMINATOR
    (107) expression -> . empty
    (112) empty -> .

  ! shift/reduce conflict for TERMINATOR resolved as shift
    TERMINATOR      shift and go to state 106

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 105
    empty                          shift and go to state 107

state 70

    (84) embedded_statement -> break_statement .

    RBRACE          reduce using rule 84 (embedded_statement -> break_statement .)
    TERMINATOR      reduce using rule 84 (embedded_statement -> break_statement .)
    LBRACE          reduce using rule 84 (embedded_statement -> break_statement .)
    IF              reduce using rule 84 (embedded_statement -> break_statement .)
    WHILE           reduce using rule 84 (embedded_statement -> break_statement .)
    BREAK           reduce using rule 84 (embedded_statement -> break_statement .)
    CONTINUE        reduce using rule 84 (embedded_statement -> break_statement .)
    RETURN          reduce using rule 84 (embedded_statement -> break_statement .)
    INT             reduce using rule 84 (embedded_statement -> break_statement .)
    CHAR            reduce using rule 84 (embedded_statement -> break_statement .)
    OBJECT          reduce using rule 84 (embedded_statement -> break_statement .)
    IDENTIFIER      reduce using rule 84 (embedded_statement -> break_statement .)
    ELSE            reduce using rule 84 (embedded_statement -> break_statement .)


state 71

    (106) iteration_statement -> WHILE . LPAREN expression RPAREN embedded_statement

    LPAREN          shift and go to state 108


state 72

    (83) embedded_statement -> iteration_statement .

    RBRACE          reduce using rule 83 (embedded_statement -> iteration_statement .)
    TERMINATOR      reduce using rule 83 (embedded_statement -> iteration_statement .)
    LBRACE          reduce using rule 83 (embedded_statement -> iteration_statement .)
    IF              reduce using rule 83 (embedded_statement -> iteration_statement .)
    WHILE           reduce using rule 83 (embedded_statement -> iteration_statement .)
    BREAK           reduce using rule 83 (embedded_statement -> iteration_statement .)
    CONTINUE        reduce using rule 83 (embedded_statement -> iteration_statement .)
    RETURN          reduce using rule 83 (embedded_statement -> iteration_statement .)
    INT             reduce using rule 83 (embedded_statement -> iteration_statement .)
    CHAR            reduce using rule 83 (embedded_statement -> iteration_statement .)
    OBJECT          reduce using rule 83 (embedded_statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 83 (embedded_statement -> iteration_statement .)
    ELSE            reduce using rule 83 (embedded_statement -> iteration_statement .)


state 73

    (103) statement_expression -> post_decrement_expression .

    TERMINATOR      reduce using rule 103 (statement_expression -> post_decrement_expression .)


state 74

    (78) statement -> embedded_statement .

    RBRACE          reduce using rule 78 (statement -> embedded_statement .)
    TERMINATOR      reduce using rule 78 (statement -> embedded_statement .)
    LBRACE          reduce using rule 78 (statement -> embedded_statement .)
    IF              reduce using rule 78 (statement -> embedded_statement .)
    WHILE           reduce using rule 78 (statement -> embedded_statement .)
    BREAK           reduce using rule 78 (statement -> embedded_statement .)
    CONTINUE        reduce using rule 78 (statement -> embedded_statement .)
    RETURN          reduce using rule 78 (statement -> embedded_statement .)
    INT             reduce using rule 78 (statement -> embedded_statement .)
    CHAR            reduce using rule 78 (statement -> embedded_statement .)
    OBJECT          reduce using rule 78 (statement -> embedded_statement .)
    IDENTIFIER      reduce using rule 78 (statement -> embedded_statement .)


state 75

    (86) embedded_statement -> return_statement .

    RBRACE          reduce using rule 86 (embedded_statement -> return_statement .)
    TERMINATOR      reduce using rule 86 (embedded_statement -> return_statement .)
    LBRACE          reduce using rule 86 (embedded_statement -> return_statement .)
    IF              reduce using rule 86 (embedded_statement -> return_statement .)
    WHILE           reduce using rule 86 (embedded_statement -> return_statement .)
    BREAK           reduce using rule 86 (embedded_statement -> return_statement .)
    CONTINUE        reduce using rule 86 (embedded_statement -> return_statement .)
    RETURN          reduce using rule 86 (embedded_statement -> return_statement .)
    INT             reduce using rule 86 (embedded_statement -> return_statement .)
    CHAR            reduce using rule 86 (embedded_statement -> return_statement .)
    OBJECT          reduce using rule 86 (embedded_statement -> return_statement .)
    IDENTIFIER      reduce using rule 86 (embedded_statement -> return_statement .)
    ELSE            reduce using rule 86 (embedded_statement -> return_statement .)


state 76

    (85) embedded_statement -> continue_statement .

    RBRACE          reduce using rule 85 (embedded_statement -> continue_statement .)
    TERMINATOR      reduce using rule 85 (embedded_statement -> continue_statement .)
    LBRACE          reduce using rule 85 (embedded_statement -> continue_statement .)
    IF              reduce using rule 85 (embedded_statement -> continue_statement .)
    WHILE           reduce using rule 85 (embedded_statement -> continue_statement .)
    BREAK           reduce using rule 85 (embedded_statement -> continue_statement .)
    CONTINUE        reduce using rule 85 (embedded_statement -> continue_statement .)
    RETURN          reduce using rule 85 (embedded_statement -> continue_statement .)
    INT             reduce using rule 85 (embedded_statement -> continue_statement .)
    CHAR            reduce using rule 85 (embedded_statement -> continue_statement .)
    OBJECT          reduce using rule 85 (embedded_statement -> continue_statement .)
    IDENTIFIER      reduce using rule 85 (embedded_statement -> continue_statement .)
    ELSE            reduce using rule 85 (embedded_statement -> continue_statement .)


state 77

    (75) statement_list -> statement .

    RBRACE          reduce using rule 75 (statement_list -> statement .)
    TERMINATOR      reduce using rule 75 (statement_list -> statement .)
    LBRACE          reduce using rule 75 (statement_list -> statement .)
    IF              reduce using rule 75 (statement_list -> statement .)
    WHILE           reduce using rule 75 (statement_list -> statement .)
    BREAK           reduce using rule 75 (statement_list -> statement .)
    CONTINUE        reduce using rule 75 (statement_list -> statement .)
    RETURN          reduce using rule 75 (statement_list -> statement .)
    INT             reduce using rule 75 (statement_list -> statement .)
    CHAR            reduce using rule 75 (statement_list -> statement .)
    OBJECT          reduce using rule 75 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 75 (statement_list -> statement .)


state 78

    (81) embedded_statement -> statement_expression . TERMINATOR

    TERMINATOR      shift and go to state 109


state 79

    (94) local_variable_declaration -> type . local_variable_declarators
    (30) non_array_type -> type .
    (95) local_variable_declarators -> . local_variable_declarator
    (96) local_variable_declarators -> . local_variable_declarators COMMA local_variable_declarator
    (97) local_variable_declarator -> . identifier
    (98) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (11) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 30 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 13

    local_variable_declarators     shift and go to state 111
    identifier                     shift and go to state 110
    local_variable_declarator      shift and go to state 112

state 80

    (82) embedded_statement -> if_statement .

    RBRACE          reduce using rule 82 (embedded_statement -> if_statement .)
    TERMINATOR      reduce using rule 82 (embedded_statement -> if_statement .)
    LBRACE          reduce using rule 82 (embedded_statement -> if_statement .)
    IF              reduce using rule 82 (embedded_statement -> if_statement .)
    WHILE           reduce using rule 82 (embedded_statement -> if_statement .)
    BREAK           reduce using rule 82 (embedded_statement -> if_statement .)
    CONTINUE        reduce using rule 82 (embedded_statement -> if_statement .)
    RETURN          reduce using rule 82 (embedded_statement -> if_statement .)
    INT             reduce using rule 82 (embedded_statement -> if_statement .)
    CHAR            reduce using rule 82 (embedded_statement -> if_statement .)
    OBJECT          reduce using rule 82 (embedded_statement -> if_statement .)
    IDENTIFIER      reduce using rule 82 (embedded_statement -> if_statement .)
    ELSE            reduce using rule 82 (embedded_statement -> if_statement .)


state 81

    (108) object_creation_expression -> empty .
    (109) assignment -> empty .
    (110) post_increment_expression -> empty .
    (111) post_decrement_expression -> empty .

  ! reduce/reduce conflict for TERMINATOR resolved using rule 108 (object_creation_expression -> empty .)
  ! reduce/reduce conflict for TERMINATOR resolved using rule 108 (object_creation_expression -> empty .)
  ! reduce/reduce conflict for TERMINATOR resolved using rule 108 (object_creation_expression -> empty .)
    TERMINATOR      reduce using rule 108 (object_creation_expression -> empty .)

  ! TERMINATOR      [ reduce using rule 109 (assignment -> empty .) ]
  ! TERMINATOR      [ reduce using rule 110 (post_increment_expression -> empty .) ]
  ! TERMINATOR      [ reduce using rule 111 (post_decrement_expression -> empty .) ]


state 82

    (73) block -> LBRACE RBRACE .

    RBRACE          reduce using rule 73 (block -> LBRACE RBRACE .)
    TERMINATOR      reduce using rule 73 (block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 73 (block -> LBRACE RBRACE .)
    IF              reduce using rule 73 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 73 (block -> LBRACE RBRACE .)
    BREAK           reduce using rule 73 (block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 73 (block -> LBRACE RBRACE .)
    RETURN          reduce using rule 73 (block -> LBRACE RBRACE .)
    INT             reduce using rule 73 (block -> LBRACE RBRACE .)
    CHAR            reduce using rule 73 (block -> LBRACE RBRACE .)
    OBJECT          reduce using rule 73 (block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 73 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 73 (block -> LBRACE RBRACE .)
    TILDE           reduce using rule 73 (block -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 73 (block -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 73 (block -> LBRACE RBRACE .)
    VOID            reduce using rule 73 (block -> LBRACE RBRACE .)


state 83

    (101) statement_expression -> assignment .

    TERMINATOR      reduce using rule 101 (statement_expression -> assignment .)


state 84

    (80) embedded_statement -> TERMINATOR .

    RBRACE          reduce using rule 80 (embedded_statement -> TERMINATOR .)
    TERMINATOR      reduce using rule 80 (embedded_statement -> TERMINATOR .)
    LBRACE          reduce using rule 80 (embedded_statement -> TERMINATOR .)
    IF              reduce using rule 80 (embedded_statement -> TERMINATOR .)
    WHILE           reduce using rule 80 (embedded_statement -> TERMINATOR .)
    BREAK           reduce using rule 80 (embedded_statement -> TERMINATOR .)
    CONTINUE        reduce using rule 80 (embedded_statement -> TERMINATOR .)
    RETURN          reduce using rule 80 (embedded_statement -> TERMINATOR .)
    INT             reduce using rule 80 (embedded_statement -> TERMINATOR .)
    CHAR            reduce using rule 80 (embedded_statement -> TERMINATOR .)
    OBJECT          reduce using rule 80 (embedded_statement -> TERMINATOR .)
    IDENTIFIER      reduce using rule 80 (embedded_statement -> TERMINATOR .)
    ELSE            reduce using rule 80 (embedded_statement -> TERMINATOR .)


state 85

    (104) if_statement -> IF . LPAREN expression RPAREN embedded_statement
    (105) if_statement -> IF . LPAREN expression RPAREN embedded_statement ELSE embedded_statement

    LPAREN          shift and go to state 113


state 86

    (87) break_statement -> BREAK . TERMINATOR

    TERMINATOR      shift and go to state 114


state 87

    (88) continue_statement -> CONTINUE . TERMINATOR

    TERMINATOR      shift and go to state 115


state 88

    (102) statement_expression -> post_increment_expression .

    TERMINATOR      reduce using rule 102 (statement_expression -> post_increment_expression .)


state 89

    (77) statement -> local_variable_declaration . TERMINATOR

    TERMINATOR      shift and go to state 116


state 90

    (74) block -> LBRACE statement_list . RBRACE
    (76) statement_list -> statement_list . statement
    (77) statement -> . local_variable_declaration TERMINATOR
    (78) statement -> . embedded_statement
    (94) local_variable_declaration -> . type local_variable_declarators
    (79) embedded_statement -> . block
    (80) embedded_statement -> . TERMINATOR
    (81) embedded_statement -> . statement_expression TERMINATOR
    (82) embedded_statement -> . if_statement
    (83) embedded_statement -> . iteration_statement
    (84) embedded_statement -> . break_statement
    (85) embedded_statement -> . continue_statement
    (86) embedded_statement -> . return_statement
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (100) statement_expression -> . object_creation_expression
    (101) statement_expression -> . assignment
    (102) statement_expression -> . post_increment_expression
    (103) statement_expression -> . post_decrement_expression
    (104) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (105) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (87) break_statement -> . BREAK TERMINATOR
    (88) continue_statement -> . CONTINUE TERMINATOR
    (89) return_statement -> . RETURN TERMINATOR
    (90) return_statement -> . RETURN expression TERMINATOR
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (108) object_creation_expression -> . empty
    (109) assignment -> . empty
    (110) post_increment_expression -> . empty
    (111) post_decrement_expression -> . empty
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (112) empty -> .
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

  ! shift/reduce conflict for TERMINATOR resolved as shift
    RBRACE          shift and go to state 118
    TERMINATOR      shift and go to state 84
    LBRACE          shift and go to state 41
    IF              shift and go to state 85
    WHILE           shift and go to state 71
    BREAK           shift and go to state 86
    CONTINUE        shift and go to state 87
    RETURN          shift and go to state 69
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    object_creation_expression     shift and go to state 68
    proper_identifier              shift and go to state 23
    break_statement                shift and go to state 70
    prefix                         shift and go to state 25
    iteration_statement            shift and go to state 72
    type_parameter                 shift and go to state 26
    post_decrement_expression      shift and go to state 73
    reference_type                 shift and go to state 20
    embedded_statement             shift and go to state 74
    return_statement               shift and go to state 75
    continue_statement             shift and go to state 76
    statement                      shift and go to state 117
    statement_expression           shift and go to state 78
    if_statement                   shift and go to state 80
    type                           shift and go to state 79
    empty                          shift and go to state 81
    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    assignment                     shift and go to state 83
    array_type                     shift and go to state 39
    post_increment_expression      shift and go to state 88
    local_variable_declaration     shift and go to state 89
    identifier                     shift and go to state 65
    block                          shift and go to state 91

state 91

    (79) embedded_statement -> block .

    RBRACE          reduce using rule 79 (embedded_statement -> block .)
    TERMINATOR      reduce using rule 79 (embedded_statement -> block .)
    LBRACE          reduce using rule 79 (embedded_statement -> block .)
    IF              reduce using rule 79 (embedded_statement -> block .)
    WHILE           reduce using rule 79 (embedded_statement -> block .)
    BREAK           reduce using rule 79 (embedded_statement -> block .)
    CONTINUE        reduce using rule 79 (embedded_statement -> block .)
    RETURN          reduce using rule 79 (embedded_statement -> block .)
    INT             reduce using rule 79 (embedded_statement -> block .)
    CHAR            reduce using rule 79 (embedded_statement -> block .)
    OBJECT          reduce using rule 79 (embedded_statement -> block .)
    IDENTIFIER      reduce using rule 79 (embedded_statement -> block .)
    ELSE            reduce using rule 79 (embedded_statement -> block .)


state 92

    (28) prefix -> prefix identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 28 (prefix -> prefix identifier MEMBERACCESS .)


state 93

    (70) destructor_declaration -> TILDE identifier LPAREN . RPAREN destructor_body

    RPAREN          shift and go to state 119


state 94

    (35) variable_declarators -> variable_declarators COMMA . variable_declarator
    (36) variable_declarator -> . identifier
    (37) variable_declarator -> . identifier EQUALS variable_initializer
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 59
    variable_declarator            shift and go to state 120

state 95

    (19) field_declaration -> type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    TERMINATOR      reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    INT             reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    VOID            reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    LBRACE          reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 19 (field_declaration -> type variable_declarators TERMINATOR .)


state 96

    (37) variable_declarator -> identifier EQUALS . variable_initializer
    (38) variable_initializer -> . expression
    (39) variable_initializer -> . array_initializer
    (107) expression -> . empty
    (40) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (41) array_initializer -> . LBRACE RBRACE
    (42) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (112) empty -> .

    LBRACE          shift and go to state 121
    TERMINATOR      reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)

    variable_initializer           shift and go to state 122
    expression                     shift and go to state 123
    empty                          shift and go to state 107
    array_initializer              shift and go to state 124

state 97

    (67) constructor_declarator -> identifier LPAREN RPAREN .

    TERMINATOR      reduce using rule 67 (constructor_declarator -> identifier LPAREN RPAREN .)
    LBRACE          reduce using rule 67 (constructor_declarator -> identifier LPAREN RPAREN .)


state 98

    (62) fixed_parameter -> type . identifier default_argument
    (63) fixed_parameter -> type . identifier
    (30) non_array_type -> type .
    (11) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 30 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 125

state 99

    (60) fixed_parameters -> fixed_parameter .

    RPAREN          reduce using rule 60 (fixed_parameters -> fixed_parameter .)
    COMMA           reduce using rule 60 (fixed_parameters -> fixed_parameter .)


state 100

    (66) constructor_declarator -> identifier LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 126
    COMMA           shift and go to state 127


state 101

    (29) array_type -> non_array_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 29 (array_type -> non_array_type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 29 (array_type -> non_array_type LBRACKET RBRACKET .)


state 102

    (18) field_declaration -> modifiers type variable_declarators . TERMINATOR
    (35) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 128
    COMMA           shift and go to state 94


state 103

    (48) method_header -> modifiers return_type member_name . LPAREN fixed_parameters RPAREN
    (50) method_header -> modifiers return_type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 129


state 104

    (47) method_header -> return_type member_name LPAREN . fixed_parameters RPAREN
    (49) method_header -> return_type member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 130
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    reference_type                 shift and go to state 20
    fixed_parameters               shift and go to state 131
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    fixed_parameter                shift and go to state 99
    array_type                     shift and go to state 39
    identifier                     shift and go to state 65
    type                           shift and go to state 98
    type_parameter                 shift and go to state 26

state 105

    (90) return_statement -> RETURN expression . TERMINATOR

    TERMINATOR      shift and go to state 132


state 106

    (89) return_statement -> RETURN TERMINATOR .

    RBRACE          reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    TERMINATOR      reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    LBRACE          reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    IF              reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    WHILE           reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    BREAK           reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    CONTINUE        reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    RETURN          reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    INT             reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    CHAR            reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    OBJECT          reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    IDENTIFIER      reduce using rule 89 (return_statement -> RETURN TERMINATOR .)
    ELSE            reduce using rule 89 (return_statement -> RETURN TERMINATOR .)


state 107

    (107) expression -> empty .

    RPAREN          reduce using rule 107 (expression -> empty .)
    COMMA           reduce using rule 107 (expression -> empty .)
    RBRACE          reduce using rule 107 (expression -> empty .)
    TERMINATOR      reduce using rule 107 (expression -> empty .)


state 108

    (106) iteration_statement -> WHILE LPAREN . expression RPAREN embedded_statement
    (107) expression -> . empty
    (112) empty -> .

    RPAREN          reduce using rule 112 (empty -> .)

    expression                     shift and go to state 133
    empty                          shift and go to state 107

state 109

    (81) embedded_statement -> statement_expression TERMINATOR .

    RBRACE          reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    TERMINATOR      reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    LBRACE          reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    IF              reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    WHILE           reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    BREAK           reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    CONTINUE        reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    RETURN          reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    INT             reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    CHAR            reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    OBJECT          reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    IDENTIFIER      reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)
    ELSE            reduce using rule 81 (embedded_statement -> statement_expression TERMINATOR .)


state 110

    (97) local_variable_declarator -> identifier .
    (98) local_variable_declarator -> identifier . EQUALS local_variable_initializer

    COMMA           reduce using rule 97 (local_variable_declarator -> identifier .)
    TERMINATOR      reduce using rule 97 (local_variable_declarator -> identifier .)
    EQUALS          shift and go to state 134


state 111

    (94) local_variable_declaration -> type local_variable_declarators .
    (96) local_variable_declarators -> local_variable_declarators . COMMA local_variable_declarator

    TERMINATOR      reduce using rule 94 (local_variable_declaration -> type local_variable_declarators .)
    COMMA           shift and go to state 135


state 112

    (95) local_variable_declarators -> local_variable_declarator .

    COMMA           reduce using rule 95 (local_variable_declarators -> local_variable_declarator .)
    TERMINATOR      reduce using rule 95 (local_variable_declarators -> local_variable_declarator .)


state 113

    (104) if_statement -> IF LPAREN . expression RPAREN embedded_statement
    (105) if_statement -> IF LPAREN . expression RPAREN embedded_statement ELSE embedded_statement
    (107) expression -> . empty
    (112) empty -> .

    RPAREN          reduce using rule 112 (empty -> .)

    expression                     shift and go to state 136
    empty                          shift and go to state 107

state 114

    (87) break_statement -> BREAK TERMINATOR .

    RBRACE          reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    TERMINATOR      reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    LBRACE          reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    IF              reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    WHILE           reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    BREAK           reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    CONTINUE        reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    RETURN          reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    INT             reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    CHAR            reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    OBJECT          reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    IDENTIFIER      reduce using rule 87 (break_statement -> BREAK TERMINATOR .)
    ELSE            reduce using rule 87 (break_statement -> BREAK TERMINATOR .)


state 115

    (88) continue_statement -> CONTINUE TERMINATOR .

    RBRACE          reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    TERMINATOR      reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    LBRACE          reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    IF              reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    WHILE           reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    BREAK           reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    CONTINUE        reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    RETURN          reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    INT             reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    CHAR            reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    OBJECT          reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    IDENTIFIER      reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)
    ELSE            reduce using rule 88 (continue_statement -> CONTINUE TERMINATOR .)


state 116

    (77) statement -> local_variable_declaration TERMINATOR .

    RBRACE          reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    TERMINATOR      reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    LBRACE          reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    IF              reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    WHILE           reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    BREAK           reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    CONTINUE        reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    RETURN          reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    INT             reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    CHAR            reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    OBJECT          reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)
    IDENTIFIER      reduce using rule 77 (statement -> local_variable_declaration TERMINATOR .)


state 117

    (76) statement_list -> statement_list statement .

    RBRACE          reduce using rule 76 (statement_list -> statement_list statement .)
    TERMINATOR      reduce using rule 76 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 76 (statement_list -> statement_list statement .)
    IF              reduce using rule 76 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 76 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 76 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 76 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 76 (statement_list -> statement_list statement .)
    INT             reduce using rule 76 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 76 (statement_list -> statement_list statement .)
    OBJECT          reduce using rule 76 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 76 (statement_list -> statement_list statement .)


state 118

    (74) block -> LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    TERMINATOR      reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    OBJECT          reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    TILDE           reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    PUBLIC          reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    PRIVATE         reduce using rule 74 (block -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 74 (block -> LBRACE statement_list RBRACE .)


state 119

    (70) destructor_declaration -> TILDE identifier LPAREN RPAREN . destructor_body
    (71) destructor_body -> . block
    (72) destructor_body -> . TERMINATOR
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE

    TERMINATOR      shift and go to state 137
    LBRACE          shift and go to state 41

    block                          shift and go to state 139
    destructor_body                shift and go to state 138

state 120

    (35) variable_declarators -> variable_declarators COMMA variable_declarator .

    TERMINATOR      reduce using rule 35 (variable_declarators -> variable_declarators COMMA variable_declarator .)
    COMMA           reduce using rule 35 (variable_declarators -> variable_declarators COMMA variable_declarator .)


state 121

    (40) array_initializer -> LBRACE . variable_initializer_list RBRACE
    (41) array_initializer -> LBRACE . RBRACE
    (42) array_initializer -> LBRACE . variable_initializer_list COMMA RBRACE
    (43) variable_initializer_list -> . variable_initializer
    (44) variable_initializer_list -> . variable_initializer_list COMMA variable_initializer
    (38) variable_initializer -> . expression
    (39) variable_initializer -> . array_initializer
    (107) expression -> . empty
    (40) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (41) array_initializer -> . LBRACE RBRACE
    (42) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (112) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 140
    LBRACE          shift and go to state 121
    COMMA           reduce using rule 112 (empty -> .)

  ! RBRACE          [ reduce using rule 112 (empty -> .) ]

    array_initializer              shift and go to state 124
    expression                     shift and go to state 123
    variable_initializer_list      shift and go to state 142
    empty                          shift and go to state 107
    variable_initializer           shift and go to state 141

state 122

    (37) variable_declarator -> identifier EQUALS variable_initializer .

    TERMINATOR      reduce using rule 37 (variable_declarator -> identifier EQUALS variable_initializer .)
    COMMA           reduce using rule 37 (variable_declarator -> identifier EQUALS variable_initializer .)


state 123

    (38) variable_initializer -> expression .

    RBRACE          reduce using rule 38 (variable_initializer -> expression .)
    COMMA           reduce using rule 38 (variable_initializer -> expression .)
    TERMINATOR      reduce using rule 38 (variable_initializer -> expression .)


state 124

    (39) variable_initializer -> array_initializer .

    RBRACE          reduce using rule 39 (variable_initializer -> array_initializer .)
    COMMA           reduce using rule 39 (variable_initializer -> array_initializer .)
    TERMINATOR      reduce using rule 39 (variable_initializer -> array_initializer .)


state 125

    (62) fixed_parameter -> type identifier . default_argument
    (63) fixed_parameter -> type identifier .
    (64) default_argument -> . EQUALS expression

    RPAREN          reduce using rule 63 (fixed_parameter -> type identifier .)
    COMMA           reduce using rule 63 (fixed_parameter -> type identifier .)
    EQUALS          shift and go to state 143

    default_argument               shift and go to state 144

state 126

    (66) constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 66 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 66 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)


state 127

    (61) fixed_parameters -> fixed_parameters COMMA . fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    reference_type                 shift and go to state 20
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    fixed_parameter                shift and go to state 145
    array_type                     shift and go to state 39
    identifier                     shift and go to state 65
    type                           shift and go to state 98
    type_parameter                 shift and go to state 26

state 128

    (18) field_declaration -> modifiers type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    TERMINATOR      reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    INT             reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    VOID            reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    LBRACE          reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 18 (field_declaration -> modifiers type variable_declarators TERMINATOR .)


state 129

    (48) method_header -> modifiers return_type member_name LPAREN . fixed_parameters RPAREN
    (50) method_header -> modifiers return_type member_name LPAREN . RPAREN
    (60) fixed_parameters -> . fixed_parameter
    (61) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (62) fixed_parameter -> . type identifier default_argument
    (63) fixed_parameter -> . type identifier
    (20) type -> . reference_type
    (21) type -> . type_parameter
    (22) reference_type -> . class_type
    (23) reference_type -> . array_type
    (31) type_parameter -> . identifier
    (32) type_parameter -> . INT
    (33) type_parameter -> . CHAR
    (24) class_type -> . proper_identifier
    (25) class_type -> . OBJECT
    (29) array_type -> . non_array_type LBRACKET RBRACKET
    (11) identifier -> . IDENTIFIER
    (26) proper_identifier -> . prefix identifier
    (30) non_array_type -> . type
    (27) prefix -> . identifier MEMBERACCESS
    (28) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 146
    INT             shift and go to state 44
    CHAR            shift and go to state 24
    OBJECT          shift and go to state 22
    IDENTIFIER      shift and go to state 13

    class_type                     shift and go to state 27
    non_array_type                 shift and go to state 35
    reference_type                 shift and go to state 20
    fixed_parameters               shift and go to state 147
    proper_identifier              shift and go to state 23
    prefix                         shift and go to state 25
    fixed_parameter                shift and go to state 99
    array_type                     shift and go to state 39
    identifier                     shift and go to state 65
    type                           shift and go to state 98
    type_parameter                 shift and go to state 26

state 130

    (49) method_header -> return_type member_name LPAREN RPAREN .

    RBRACE          reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    TILDE           reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    INT             reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    CHAR            reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    VOID            reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 49 (method_header -> return_type member_name LPAREN RPAREN .)


state 131

    (47) method_header -> return_type member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 148
    COMMA           shift and go to state 127


state 132

    (90) return_statement -> RETURN expression TERMINATOR .

    RBRACE          reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    TERMINATOR      reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    LBRACE          reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    IF              reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    WHILE           reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    BREAK           reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    CONTINUE        reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    RETURN          reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    INT             reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    CHAR            reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    OBJECT          reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    IDENTIFIER      reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)
    ELSE            reduce using rule 90 (return_statement -> RETURN expression TERMINATOR .)


state 133

    (106) iteration_statement -> WHILE LPAREN expression . RPAREN embedded_statement

    RPAREN          shift and go to state 149


state 134

    (98) local_variable_declarator -> identifier EQUALS . local_variable_initializer
    (99) local_variable_initializer -> . expression
    (107) expression -> . empty
    (112) empty -> .

    COMMA           reduce using rule 112 (empty -> .)
    TERMINATOR      reduce using rule 112 (empty -> .)

    expression                     shift and go to state 150
    empty                          shift and go to state 107
    local_variable_initializer     shift and go to state 151

state 135

    (96) local_variable_declarators -> local_variable_declarators COMMA . local_variable_declarator
    (97) local_variable_declarator -> . identifier
    (98) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (11) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13

    identifier                     shift and go to state 110
    local_variable_declarator      shift and go to state 152

state 136

    (104) if_statement -> IF LPAREN expression . RPAREN embedded_statement
    (105) if_statement -> IF LPAREN expression . RPAREN embedded_statement ELSE embedded_statement

    RPAREN          shift and go to state 153


state 137

    (72) destructor_body -> TERMINATOR .

    RBRACE          reduce using rule 72 (destructor_body -> TERMINATOR .)
    TILDE           reduce using rule 72 (destructor_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 72 (destructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 72 (destructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 72 (destructor_body -> TERMINATOR .)
    INT             reduce using rule 72 (destructor_body -> TERMINATOR .)
    CHAR            reduce using rule 72 (destructor_body -> TERMINATOR .)
    VOID            reduce using rule 72 (destructor_body -> TERMINATOR .)
    LBRACE          reduce using rule 72 (destructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 72 (destructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 72 (destructor_body -> TERMINATOR .)


state 138

    (70) destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .

    RBRACE          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    TILDE           reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    TERMINATOR      reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PUBLIC          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PRIVATE         reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    INT             reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    CHAR            reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    VOID            reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    LBRACE          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    IDENTIFIER      reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    OBJECT          reduce using rule 70 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)


state 139

    (71) destructor_body -> block .

    RBRACE          reduce using rule 71 (destructor_body -> block .)
    TILDE           reduce using rule 71 (destructor_body -> block .)
    TERMINATOR      reduce using rule 71 (destructor_body -> block .)
    PUBLIC          reduce using rule 71 (destructor_body -> block .)
    PRIVATE         reduce using rule 71 (destructor_body -> block .)
    INT             reduce using rule 71 (destructor_body -> block .)
    CHAR            reduce using rule 71 (destructor_body -> block .)
    VOID            reduce using rule 71 (destructor_body -> block .)
    LBRACE          reduce using rule 71 (destructor_body -> block .)
    IDENTIFIER      reduce using rule 71 (destructor_body -> block .)
    OBJECT          reduce using rule 71 (destructor_body -> block .)


state 140

    (41) array_initializer -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 41 (array_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 41 (array_initializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 41 (array_initializer -> LBRACE RBRACE .)


state 141

    (43) variable_initializer_list -> variable_initializer .

    RBRACE          reduce using rule 43 (variable_initializer_list -> variable_initializer .)
    COMMA           reduce using rule 43 (variable_initializer_list -> variable_initializer .)


state 142

    (40) array_initializer -> LBRACE variable_initializer_list . RBRACE
    (42) array_initializer -> LBRACE variable_initializer_list . COMMA RBRACE
    (44) variable_initializer_list -> variable_initializer_list . COMMA variable_initializer

    RBRACE          shift and go to state 155
    COMMA           shift and go to state 154


state 143

    (64) default_argument -> EQUALS . expression
    (107) expression -> . empty
    (112) empty -> .

    RPAREN          reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)

    expression                     shift and go to state 156
    empty                          shift and go to state 107

state 144

    (62) fixed_parameter -> type identifier default_argument .

    RPAREN          reduce using rule 62 (fixed_parameter -> type identifier default_argument .)
    COMMA           reduce using rule 62 (fixed_parameter -> type identifier default_argument .)


state 145

    (61) fixed_parameters -> fixed_parameters COMMA fixed_parameter .

    RPAREN          reduce using rule 61 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)
    COMMA           reduce using rule 61 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)


state 146

    (50) method_header -> modifiers return_type member_name LPAREN RPAREN .

    RBRACE          reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    TILDE           reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    INT             reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    CHAR            reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    VOID            reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 50 (method_header -> modifiers return_type member_name LPAREN RPAREN .)


state 147

    (48) method_header -> modifiers return_type member_name LPAREN fixed_parameters . RPAREN
    (61) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 157
    COMMA           shift and go to state 127


state 148

    (47) method_header -> return_type member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 47 (method_header -> return_type member_name LPAREN fixed_parameters RPAREN .)


state 149

    (106) iteration_statement -> WHILE LPAREN expression RPAREN . embedded_statement
    (79) embedded_statement -> . block
    (80) embedded_statement -> . TERMINATOR
    (81) embedded_statement -> . statement_expression TERMINATOR
    (82) embedded_statement -> . if_statement
    (83) embedded_statement -> . iteration_statement
    (84) embedded_statement -> . break_statement
    (85) embedded_statement -> . continue_statement
    (86) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (100) statement_expression -> . object_creation_expression
    (101) statement_expression -> . assignment
    (102) statement_expression -> . post_increment_expression
    (103) statement_expression -> . post_decrement_expression
    (104) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (105) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (87) break_statement -> . BREAK TERMINATOR
    (88) continue_statement -> . CONTINUE TERMINATOR
    (89) return_statement -> . RETURN TERMINATOR
    (90) return_statement -> . RETURN expression TERMINATOR
    (108) object_creation_expression -> . empty
    (109) assignment -> . empty
    (110) post_increment_expression -> . empty
    (111) post_decrement_expression -> . empty
    (112) empty -> .

  ! shift/reduce conflict for TERMINATOR resolved as shift
    TERMINATOR      shift and go to state 84
    LBRACE          shift and go to state 41
    IF              shift and go to state 85
    WHILE           shift and go to state 71
    BREAK           shift and go to state 86
    CONTINUE        shift and go to state 87
    RETURN          shift and go to state 69

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    return_statement               shift and go to state 75
    object_creation_expression     shift and go to state 68
    embedded_statement             shift and go to state 158
    break_statement                shift and go to state 70
    continue_statement             shift and go to state 76
    post_increment_expression      shift and go to state 88
    empty                          shift and go to state 81
    assignment                     shift and go to state 83
    statement_expression           shift and go to state 78
    post_decrement_expression      shift and go to state 73
    if_statement                   shift and go to state 80
    iteration_statement            shift and go to state 72
    block                          shift and go to state 91

state 150

    (99) local_variable_initializer -> expression .

    COMMA           reduce using rule 99 (local_variable_initializer -> expression .)
    TERMINATOR      reduce using rule 99 (local_variable_initializer -> expression .)


state 151

    (98) local_variable_declarator -> identifier EQUALS local_variable_initializer .

    COMMA           reduce using rule 98 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)
    TERMINATOR      reduce using rule 98 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)


state 152

    (96) local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .

    COMMA           reduce using rule 96 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)
    TERMINATOR      reduce using rule 96 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)


state 153

    (104) if_statement -> IF LPAREN expression RPAREN . embedded_statement
    (105) if_statement -> IF LPAREN expression RPAREN . embedded_statement ELSE embedded_statement
    (79) embedded_statement -> . block
    (80) embedded_statement -> . TERMINATOR
    (81) embedded_statement -> . statement_expression TERMINATOR
    (82) embedded_statement -> . if_statement
    (83) embedded_statement -> . iteration_statement
    (84) embedded_statement -> . break_statement
    (85) embedded_statement -> . continue_statement
    (86) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (100) statement_expression -> . object_creation_expression
    (101) statement_expression -> . assignment
    (102) statement_expression -> . post_increment_expression
    (103) statement_expression -> . post_decrement_expression
    (104) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (105) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (87) break_statement -> . BREAK TERMINATOR
    (88) continue_statement -> . CONTINUE TERMINATOR
    (89) return_statement -> . RETURN TERMINATOR
    (90) return_statement -> . RETURN expression TERMINATOR
    (108) object_creation_expression -> . empty
    (109) assignment -> . empty
    (110) post_increment_expression -> . empty
    (111) post_decrement_expression -> . empty
    (112) empty -> .

  ! shift/reduce conflict for TERMINATOR resolved as shift
    TERMINATOR      shift and go to state 84
    LBRACE          shift and go to state 41
    IF              shift and go to state 85
    WHILE           shift and go to state 71
    BREAK           shift and go to state 86
    CONTINUE        shift and go to state 87
    RETURN          shift and go to state 69

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    return_statement               shift and go to state 75
    object_creation_expression     shift and go to state 68
    embedded_statement             shift and go to state 159
    break_statement                shift and go to state 70
    continue_statement             shift and go to state 76
    post_increment_expression      shift and go to state 88
    empty                          shift and go to state 81
    assignment                     shift and go to state 83
    statement_expression           shift and go to state 78
    post_decrement_expression      shift and go to state 73
    if_statement                   shift and go to state 80
    iteration_statement            shift and go to state 72
    block                          shift and go to state 91

state 154

    (42) array_initializer -> LBRACE variable_initializer_list COMMA . RBRACE
    (44) variable_initializer_list -> variable_initializer_list COMMA . variable_initializer
    (38) variable_initializer -> . expression
    (39) variable_initializer -> . array_initializer
    (107) expression -> . empty
    (40) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (41) array_initializer -> . LBRACE RBRACE
    (42) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (112) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 160
    LBRACE          shift and go to state 121
    COMMA           reduce using rule 112 (empty -> .)

  ! RBRACE          [ reduce using rule 112 (empty -> .) ]

    array_initializer              shift and go to state 124
    expression                     shift and go to state 123
    empty                          shift and go to state 107
    variable_initializer           shift and go to state 161

state 155

    (40) array_initializer -> LBRACE variable_initializer_list RBRACE .

    TERMINATOR      reduce using rule 40 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    COMMA           reduce using rule 40 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    RBRACE          reduce using rule 40 (array_initializer -> LBRACE variable_initializer_list RBRACE .)


state 156

    (64) default_argument -> EQUALS expression .

    RPAREN          reduce using rule 64 (default_argument -> EQUALS expression .)
    COMMA           reduce using rule 64 (default_argument -> EQUALS expression .)


state 157

    (48) method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 48 (method_header -> modifiers return_type member_name LPAREN fixed_parameters RPAREN .)


state 158

    (106) iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .

    RBRACE          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    CONTINUE        reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    ELSE            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)


state 159

    (104) if_statement -> IF LPAREN expression RPAREN embedded_statement .
    (105) if_statement -> IF LPAREN expression RPAREN embedded_statement . ELSE embedded_statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    CONTINUE        reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    ELSE            shift and go to state 162

  ! ELSE            [ reduce using rule 104 (if_statement -> IF LPAREN expression RPAREN embedded_statement .) ]


state 160

    (42) array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .

    TERMINATOR      reduce using rule 42 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 42 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 42 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)


state 161

    (44) variable_initializer_list -> variable_initializer_list COMMA variable_initializer .

    RBRACE          reduce using rule 44 (variable_initializer_list -> variable_initializer_list COMMA variable_initializer .)
    COMMA           reduce using rule 44 (variable_initializer_list -> variable_initializer_list COMMA variable_initializer .)


state 162

    (105) if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE . embedded_statement
    (79) embedded_statement -> . block
    (80) embedded_statement -> . TERMINATOR
    (81) embedded_statement -> . statement_expression TERMINATOR
    (82) embedded_statement -> . if_statement
    (83) embedded_statement -> . iteration_statement
    (84) embedded_statement -> . break_statement
    (85) embedded_statement -> . continue_statement
    (86) embedded_statement -> . return_statement
    (73) block -> . LBRACE RBRACE
    (74) block -> . LBRACE statement_list RBRACE
    (100) statement_expression -> . object_creation_expression
    (101) statement_expression -> . assignment
    (102) statement_expression -> . post_increment_expression
    (103) statement_expression -> . post_decrement_expression
    (104) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (105) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (87) break_statement -> . BREAK TERMINATOR
    (88) continue_statement -> . CONTINUE TERMINATOR
    (89) return_statement -> . RETURN TERMINATOR
    (90) return_statement -> . RETURN expression TERMINATOR
    (108) object_creation_expression -> . empty
    (109) assignment -> . empty
    (110) post_increment_expression -> . empty
    (111) post_decrement_expression -> . empty
    (112) empty -> .

  ! shift/reduce conflict for TERMINATOR resolved as shift
    TERMINATOR      shift and go to state 84
    LBRACE          shift and go to state 41
    IF              shift and go to state 85
    WHILE           shift and go to state 71
    BREAK           shift and go to state 86
    CONTINUE        shift and go to state 87
    RETURN          shift and go to state 69

  ! TERMINATOR      [ reduce using rule 112 (empty -> .) ]

    return_statement               shift and go to state 75
    object_creation_expression     shift and go to state 68
    embedded_statement             shift and go to state 163
    break_statement                shift and go to state 70
    continue_statement             shift and go to state 76
    post_increment_expression      shift and go to state 88
    empty                          shift and go to state 81
    assignment                     shift and go to state 83
    statement_expression           shift and go to state 78
    post_decrement_expression      shift and go to state 73
    if_statement                   shift and go to state 80
    iteration_statement            shift and go to state 72
    block                          shift and go to state 91

state 163

    (105) if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .

    RBRACE          reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    TERMINATOR      reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    LBRACE          reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    IF              reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    WHILE           reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    BREAK           reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    CONTINUE        reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    RETURN          reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    INT             reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    CHAR            reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    OBJECT          reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    IDENTIFIER      reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    ELSE            reduce using rule 105 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 32 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 41 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 63 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 69 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 90 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 121 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 149 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 153 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 154 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 159 resolved as shift
WARNING: shift/reduce conflict for TERMINATOR in state 162 resolved as shift
WARNING: reduce/reduce conflict in state 81 resolved using rule (object_creation_expression -> empty)
WARNING: rejected rule (assignment -> empty) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (object_creation_expression -> empty)
WARNING: rejected rule (post_increment_expression -> empty) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (object_creation_expression -> empty)
WARNING: rejected rule (post_decrement_expression -> empty) in state 81
WARNING: Rule (assignment -> empty) is never reduced
WARNING: Rule (post_increment_expression -> empty) is never reduced
WARNING: Rule (post_decrement_expression -> empty) is never reduced
