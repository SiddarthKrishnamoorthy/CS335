Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    STRING
    SIZEOF
    CONOR
    SINGLEQUOTE
    GOTO
    IF
    LT
    NULL
    MOD
    GT
    DOUBLEQUOTE
    SHORT
    AND
    USING
    PLUS
    NE
    ELSE
    NEWLINE
    GEQ
    COLON
    INCREMENT
    OR
    COMMENTDELIM
    WHILE
    XOR
    DIVIDE
    LSHIFT
    NEW
    MINUSEQUAL
    BACKSLASH
    RSHIFT
    PLUSEQUAL
    LEQ
    COMMENTSLINE
    EQ
    LNOT
    DECREMENT
    TIMES
    CONAND
    MINUS

Grammar

Rule 0     S' -> compilation_unit
Rule 1     start -> compilation_unit
Rule 2     compilation_unit -> class_declarations
Rule 3     class_declarations -> class_declarations class_declaration
Rule 4     class_declarations -> class_declaration
Rule 5     class_declaration -> class_modifiers CLASS identifier class_body TERMINATOR
Rule 6     class_declaration -> CLASS identifier class_body TERMINATOR
Rule 7     class_declaration -> CLASS identifier class_body
Rule 8     class_declaration -> class_modifiers CLASS identifier class_body
Rule 9     class_modifiers -> class_modifier
Rule 10    class_modifiers -> class_modifiers class_modifier
Rule 11    class_modifier -> PUBLIC
Rule 12    class_modifier -> PRIVATE
Rule 13    class_body -> LBRACE class_member_declarations RBRACE
Rule 14    class_body -> LBRACE RBRACE
Rule 15    identifier -> IDENTIFIER
Rule 16    class_member_declarations -> class_member_declaration
Rule 17    class_member_declarations -> class_member_declarations class_member_declaration
Rule 18    class_member_declaration -> field_declaration
Rule 19    class_member_declaration -> method_declaration
Rule 20    class_member_declaration -> constructor_declaration
Rule 21    class_member_declaration -> destructor_declaration
Rule 22    field_declaration -> field_modifiers type variable_declarators TERMINATOR
Rule 23    field_declaration -> type variable_declarators TERMINATOR
Rule 24    field_modifiers -> field_modifier
Rule 25    field_modifiers -> field_modifiers field_modifier
Rule 26    field_modifier -> PUBLIC
Rule 27    field_modifier -> PRIVATE
Rule 28    type -> reference_type
Rule 29    type -> type_parameter
Rule 30    reference_type -> class_type
Rule 31    reference_type -> array_type
Rule 32    class_type -> type_name
Rule 33    class_type -> OBJECT
Rule 34    type_name -> proper_identifier
Rule 35    proper_identifier -> identifier
Rule 36    proper_identifier -> prefix identifier
Rule 37    prefix -> identifier MEMBERACCESS
Rule 38    prefix -> prefix identifier MEMBERACCESS
Rule 39    array_type -> non_array_type LBRACKET RBRACKET
Rule 40    non_array_type -> type
Rule 41    type_parameter -> identifier
Rule 42    type_parameter -> INT
Rule 43    type_parameter -> CHAR
Rule 44    variable_declarators -> variable_declarator
Rule 45    variable_declarators -> variable_declarators COMMA variable_declarator
Rule 46    variable_declarator -> identifier
Rule 47    variable_declarator -> identifier EQUALS variable_initializer
Rule 48    variable_initializer -> expression
Rule 49    variable_initializer -> array_initializer
Rule 50    array_initializer -> LBRACE variable_initializer_list RBRACE
Rule 51    array_initializer -> LBRACE RBRACE
Rule 52    array_initializer -> LBRACE variable_initializer_list COMMA RBRACE
Rule 53    variable_initializer_list -> variable_initializer
Rule 54    variable_initializer_list -> variable_initializer_list COMMA variable_initializer
Rule 55    method_declaration -> method_header
Rule 56    method_declaration -> method_body
Rule 57    method_header -> return_type member_name LPAREN fixed_parameters RPAREN
Rule 58    method_header -> method_modifiers return_type member_name LPAREN fixed_parameters RPAREN
Rule 59    method_header -> return_type member_name LPAREN RPAREN
Rule 60    method_header -> method_modifiers return_type member_name LPAREN RPAREN
Rule 61    method_modifiers -> method_modifier
Rule 62    method_modifiers -> method_modifiers method_modifier
Rule 63    method_modifier -> PUBLIC
Rule 64    method_modifier -> PRIVATE
Rule 65    return_type -> type
Rule 66    return_type -> VOID
Rule 67    member_name -> identifier
Rule 68    method_body -> block
Rule 69    method_body -> TERMINATOR
Rule 70    fixed_parameters -> fixed_parameter
Rule 71    fixed_parameters -> fixed_parameters COMMA fixed_parameter
Rule 72    fixed_parameter -> type identifier default_argument
Rule 73    fixed_parameter -> type identifier
Rule 74    default_argument -> EQUALS expression
Rule 75    constructor_declaration -> constructor_declarator constructor_body
Rule 76    constructor_declarator -> identifier LPAREN fixed_parameters RPAREN
Rule 77    constructor_declarator -> identifier LPAREN RPAREN
Rule 78    constructor_body -> block
Rule 79    constructor_body -> TERMINATOR
Rule 80    destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body
Rule 81    destructor_body -> block
Rule 82    destructor_body -> TERMINATOR
Rule 83    block -> LBRACE RBRACE
Rule 84    block -> LBRACE statement_list RBRACE
Rule 85    statement_list -> statement
Rule 86    statement_list -> statement_list statement
Rule 87    statement -> local_variable_declaration TERMINATOR
Rule 88    statement -> embedded_statement
Rule 89    embedded_statement -> block
Rule 90    embedded_statement -> TERMINATOR
Rule 91    embedded_statement -> statement_expression TERMINATOR
Rule 92    embedded_statement -> if_statement
Rule 93    embedded_statement -> iteration_statement
Rule 94    embedded_statement -> break_statement
Rule 95    embedded_statement -> continue_statement
Rule 96    embedded_statement -> return_statement
Rule 97    break_statement -> BREAK TERMINATOR
Rule 98    continue_statement -> CONTINUE TERMINATOR
Rule 99    return_statement -> RETURN TERMINATOR
Rule 100   return_statement -> RETURN expression TERMINATOR
Rule 101   literal -> INTCONST
Rule 102   literal -> STRCONST
Rule 103   literal -> CHARCONST
Rule 104   local_variable_declaration -> type local_variable_declarators
Rule 105   local_variable_declarators -> local_variable_declarator
Rule 106   local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator
Rule 107   local_variable_declarator -> identifier
Rule 108   local_variable_declarator -> identifier EQUALS local_variable_initializer
Rule 109   local_variable_initializer -> expression
Rule 110   statement_expression -> object_creation_expression
Rule 111   statement_expression -> assignment
Rule 112   statement_expression -> post_increment_expression
Rule 113   statement_expression -> post_decrement_expression
Rule 114   expression -> empty
Rule 115   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BACKSLASH            : 
BREAK                : 97
CHAR                 : 43
CHARCONST            : 103
CLASS                : 5 6 7 8
COLON                : 
COMMA                : 45 52 54 71 106
COMMENTDELIM         : 
COMMENTSLINE         : 
CONAND               : 
CONOR                : 
CONTINUE             : 98
DECREMENT            : 
DIVIDE               : 
DOUBLEQUOTE          : 
ELSE                 : 
EQ                   : 
EQUALS               : 47 74 108
GEQ                  : 
GOTO                 : 
GT                   : 
IDENTIFIER           : 15
IF                   : 
INCREMENT            : 
INT                  : 42
INTCONST             : 101
LBRACE               : 13 14 50 51 52 83 84
LBRACKET             : 39
LEQ                  : 
LNOT                 : 
LPAREN               : 57 58 59 60 76 77 80
LSHIFT               : 
LT                   : 
MEMBERACCESS         : 37 38
MINUS                : 
MINUSEQUAL           : 
MOD                  : 
NE                   : 
NEW                  : 
NEWLINE              : 
NULL                 : 
OBJECT               : 33
OR                   : 
PLUS                 : 
PLUSEQUAL            : 
PRIVATE              : 12 27 64
PUBLIC               : 11 26 63
RBRACE               : 13 14 50 51 52 83 84
RBRACKET             : 39
RETURN               : 99 100
RPAREN               : 57 58 59 60 76 77 80
RSHIFT               : 
SHORT                : 
SINGLEQUOTE          : 
SIZEOF               : 
STRCONST             : 102
STRING               : 
TERMINATOR           : 5 6 22 23 69 79 82 87 90 91 97 98 99 100
TILDE                : 80
TIMES                : 
USING                : 
VOID                 : 66
WHILE                : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

array_initializer    : 49
array_type           : 31
assignment           : 111
block                : 68 78 81 89
break_statement      : 94
class_body           : 5 6 7 8
class_declaration    : 3 4
class_declarations   : 2 3
class_member_declaration : 16 17
class_member_declarations : 13 17
class_modifier       : 9 10
class_modifiers      : 5 8 10
class_type           : 30
compilation_unit     : 1 0
constructor_body     : 75
constructor_declaration : 20
constructor_declarator : 75
continue_statement   : 95
default_argument     : 72
destructor_body      : 80
destructor_declaration : 21
embedded_statement   : 88
empty                : 114
expression           : 48 74 100 109
field_declaration    : 18
field_modifier       : 24 25
field_modifiers      : 22 25
fixed_parameter      : 70 71
fixed_parameters     : 57 58 71 76
identifier           : 5 6 7 8 35 36 37 38 41 46 47 67 72 73 76 77 80 107 108
if_statement         : 92
iteration_statement  : 93
literal              : 
local_variable_declaration : 87
local_variable_declarator : 105 106
local_variable_declarators : 104 106
local_variable_initializer : 108
member_name          : 57 58 59 60
method_body          : 56
method_declaration   : 19
method_header        : 55
method_modifier      : 61 62
method_modifiers     : 58 60 62
non_array_type       : 39
object_creation_expression : 110
post_decrement_expression : 113
post_increment_expression : 112
prefix               : 36 38
proper_identifier    : 34
reference_type       : 28
return_statement     : 96
return_type          : 57 58 59 60
start                : 
statement            : 85 86
statement_expression : 91
statement_list       : 84 86
type                 : 22 23 40 65 72 73 104
type_name            : 32
type_parameter       : 29
variable_declarator  : 44 45
variable_declarators : 22 23 45
variable_initializer : 47 53 54
variable_initializer_list : 50 52 54

