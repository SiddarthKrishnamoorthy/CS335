Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE
    COMMENTSLINE
    COMMENTDELIM

Grammar

Rule 0     S' -> start
Rule 1     start -> compilation_unit
Rule 2     compilation_unit -> class_declarations
Rule 3     compilation_unit -> using_directives class_declarations
Rule 4     using_directives -> using_directive
Rule 5     using_directives -> using_directives using_directive
Rule 6     using_directive -> USING identifier TERMINATOR
Rule 7     class_declarations -> class_declarations class_declaration
Rule 8     class_declarations -> class_declaration
Rule 9     class_declaration -> modifiers CLASS identifier class_body TERMINATOR
Rule 10    class_declaration -> CLASS identifier class_body TERMINATOR
Rule 11    class_declaration -> CLASS identifier class_body
Rule 12    class_declaration -> modifiers CLASS identifier class_body
Rule 13    class_body -> LBRACE class_member_declarations RBRACE
Rule 14    class_body -> LBRACE RBRACE
Rule 15    identifier -> IDENTIFIER
Rule 16    class_member_declarations -> class_member_declaration
Rule 17    class_member_declarations -> class_member_declarations class_member_declaration
Rule 18    class_member_declaration -> field_declaration
Rule 19    class_member_declaration -> method_declaration
Rule 20    class_member_declaration -> constructor_declaration
Rule 21    class_member_declaration -> destructor_declaration
Rule 22    field_declaration -> modifiers type variable_declarators TERMINATOR
Rule 23    field_declaration -> type variable_declarators TERMINATOR
Rule 24    type -> reference_type
Rule 25    type -> type_parameter
Rule 26    reference_type -> class_type
Rule 27    reference_type -> array_type
Rule 28    class_type -> proper_identifier
Rule 29    class_type -> OBJECT
Rule 30    proper_identifier -> prefix identifier
Rule 31    prefix -> identifier MEMBERACCESS
Rule 32    prefix -> prefix identifier MEMBERACCESS
Rule 33    array_type -> non_array_type LBRACKET RBRACKET
Rule 34    non_array_type -> type
Rule 35    type_parameter -> identifier
Rule 36    type_parameter -> predefined_type
Rule 37    variable_declarators -> variable_declarator
Rule 38    variable_declarators -> variable_declarators COMMA variable_declarator
Rule 39    variable_declarator -> identifier
Rule 40    variable_declarator -> identifier EQUALS variable_initializer
Rule 41    variable_initializer -> expression
Rule 42    variable_initializer -> array_initializer
Rule 43    array_initializer -> LBRACE variable_initializer_list RBRACE
Rule 44    array_initializer -> LBRACE RBRACE
Rule 45    array_initializer -> LBRACE variable_initializer_list COMMA RBRACE
Rule 46    variable_initializer_list -> variable_initializer
Rule 47    variable_initializer_list -> variable_initializer_list COMMA variable_initializer
Rule 48    method_declaration -> method_header
Rule 49    method_declaration -> method_body
Rule 50    method_header -> type member_name LPAREN fixed_parameters RPAREN
Rule 51    method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN
Rule 52    method_header -> type member_name LPAREN RPAREN
Rule 53    method_header -> modifiers type member_name LPAREN RPAREN
Rule 54    method_header -> VOID member_name LPAREN fixed_parameters RPAREN
Rule 55    method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN
Rule 56    method_header -> VOID member_name LPAREN RPAREN
Rule 57    method_header -> modifiers VOID member_name LPAREN RPAREN
Rule 58    modifiers -> modifier
Rule 59    modifiers -> modifiers modifier
Rule 60    modifier -> PUBLIC
Rule 61    modifier -> PRIVATE
Rule 62    member_name -> identifier
Rule 63    method_body -> block
Rule 64    method_body -> TERMINATOR
Rule 65    fixed_parameters -> fixed_parameter
Rule 66    fixed_parameters -> fixed_parameters COMMA fixed_parameter
Rule 67    fixed_parameter -> type identifier default_argument
Rule 68    fixed_parameter -> type identifier
Rule 69    default_argument -> EQUALS expression
Rule 70    constructor_declaration -> constructor_declarator constructor_body
Rule 71    constructor_declarator -> identifier LPAREN fixed_parameters RPAREN
Rule 72    constructor_declarator -> identifier LPAREN RPAREN
Rule 73    constructor_body -> block
Rule 74    constructor_body -> TERMINATOR
Rule 75    destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body
Rule 76    destructor_body -> block
Rule 77    destructor_body -> TERMINATOR
Rule 78    block -> LBRACE RBRACE
Rule 79    block -> LBRACE statement_list RBRACE
Rule 80    statement_list -> statement
Rule 81    statement_list -> statement_list statement
Rule 82    statement -> local_variable_declaration TERMINATOR
Rule 83    statement -> embedded_statement
Rule 84    embedded_statement -> block
Rule 85    embedded_statement -> TERMINATOR
Rule 86    embedded_statement -> statement_expression TERMINATOR
Rule 87    embedded_statement -> if_statement
Rule 88    embedded_statement -> iteration_statement
Rule 89    embedded_statement -> break_statement
Rule 90    embedded_statement -> continue_statement
Rule 91    embedded_statement -> return_statement
Rule 92    break_statement -> BREAK TERMINATOR
Rule 93    continue_statement -> CONTINUE TERMINATOR
Rule 94    return_statement -> RETURN TERMINATOR
Rule 95    return_statement -> RETURN expression TERMINATOR
Rule 96    literal -> INTCONST
Rule 97    literal -> STRCONST
Rule 98    literal -> CHARCONST
Rule 99    local_variable_declaration -> type local_variable_declarators
Rule 100   local_variable_declarators -> local_variable_declarator
Rule 101   local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator
Rule 102   local_variable_declarator -> identifier
Rule 103   local_variable_declarator -> identifier EQUALS local_variable_initializer
Rule 104   local_variable_initializer -> expression
Rule 105   statement_expression -> object_creation_expression
Rule 106   statement_expression -> assignment
Rule 107   statement_expression -> invocation_expression
Rule 108   statement_expression -> post_increment_expression
Rule 109   statement_expression -> post_decrement_expression
Rule 110   invocation_expression -> primary_expression LPAREN argument_list RPAREN
Rule 111   invocation_expression -> primary_expression LPAREN RPAREN
Rule 112   invocation_expression -> identifier LPAREN RPAREN
Rule 113   invocation_expression -> identifier LPAREN argument_list RPAREN
Rule 114   invocation_expression -> proper_identifier LPAREN argument_list RPAREN
Rule 115   invocation_expression -> proper_identifier LPAREN RPAREN
Rule 116   if_statement -> IF LPAREN expression RPAREN embedded_statement
Rule 117   if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
Rule 118   iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement
Rule 119   expression -> non_assignment_expression
Rule 120   expression -> assignment
Rule 121   assignment -> unary_expression assignment_operator expression
Rule 122   assignment -> identifier assignment_operator expression
Rule 123   assignment_operator -> EQUALS
Rule 124   assignment_operator -> PLUSEQUAL
Rule 125   assignment_operator -> MINUSEQUAL
Rule 126   unary_expression -> primary_expression
Rule 127   unary_expression -> PLUS unary_expression
Rule 128   unary_expression -> PLUS identifier
Rule 129   unary_expression -> MINUS unary_expression
Rule 130   unary_expression -> MINUS identifier
Rule 131   unary_expression -> LNOT unary_expression
Rule 132   unary_expression -> LNOT identifier
Rule 133   unary_expression -> TILDE unary_expression
Rule 134   unary_expression -> TILDE identifier
Rule 135   primary_expression -> primary_no_array_creation_expression
Rule 136   primary_expression -> array_creation_expression
Rule 137   primary_no_array_creation_expression -> literal
Rule 138   primary_no_array_creation_expression -> parenthesized_expression
Rule 139   primary_no_array_creation_expression -> member_access
Rule 140   primary_no_array_creation_expression -> element_access
Rule 141   primary_no_array_creation_expression -> post_increment_expression
Rule 142   primary_no_array_creation_expression -> invocation_expression
Rule 143   primary_no_array_creation_expression -> post_decrement_expression
Rule 144   primary_no_array_creation_expression -> object_creation_expression
Rule 145   primary_no_array_creation_expression -> typeof_expression
Rule 146   parenthesized_expression -> LPAREN expression RPAREN
Rule 147   member_access -> primary_expression MEMBERACCESS identifier
Rule 148   member_access -> iMEMAi
Rule 149   member_access -> predefined_type MEMBERACCESS identifier
Rule 150   predefined_type -> INT
Rule 151   predefined_type -> CHAR
Rule 152   element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET
Rule 153   element_access -> identifier LBRACKET expression_list RBRACKET
Rule 154   expression_list -> expression
Rule 155   expression_list -> expression_list COMMA expression
Rule 156   post_increment_expression -> primary_expression INCREMENT
Rule 157   post_increment_expression -> identifier INCREMENT
Rule 158   post_decrement_expression -> primary_expression DECREMENT
Rule 159   post_decrement_expression -> identifier DECREMENT
Rule 160   object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer
Rule 161   object_creation_expression -> NEW type LPAREN argument_list RPAREN
Rule 162   object_creation_expression -> NEW type LPAREN RPAREN
Rule 163   object_creation_expression -> NEW type object_or_collection_initializer
Rule 164   argument_list -> argument
Rule 165   argument_list -> argument_list COMMA argument
Rule 166   argument -> argument_name argument_value
Rule 167   argument -> argument_value
Rule 168   argument_name -> identifier COLON
Rule 169   argument_value -> expression
Rule 170   object_or_collection_initializer -> object_initializer
Rule 171   object_or_collection_initializer -> collection_initializer
Rule 172   object_initializer -> LBRACE member_initializer_list RBRACE
Rule 173   object_initializer -> LBRACE RBRACE
Rule 174   object_initializer -> LBRACE member_initializer_list COMMA RBRACE
Rule 175   member_initializer_list -> member_initializer
Rule 176   member_initializer_list -> member_initializer_list COMMA member_initializer
Rule 177   member_initializer -> identifier EQUALS initializer_value
Rule 178   initializer_value -> expression
Rule 179   initializer_value -> object_or_collection_initializer
Rule 180   collection_initializer -> LBRACE element_initializer_list RBRACE
Rule 181   collection_initializer -> LBRACE element_initializer_list COMMA RBRACE
Rule 182   element_initializer_list -> element_initializer
Rule 183   element_initializer_list -> element_initializer_list COMMA element_initializer
Rule 184   element_initializer -> non_assignment_expression
Rule 185   element_initializer -> LBRACE expression_list RBRACE
Rule 186   array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET
Rule 187   array_creation_expression -> NEW array_type array_initializer
Rule 188   typeof_expression -> TYPEOF LPAREN type RPAREN
Rule 189   typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN
Rule 190   typeof_expression -> TYPEOF LPAREN VOID RPAREN
Rule 191   unbound_type_name -> iMEMAi
Rule 192   unbound_type_name -> unbound_type_name MEMBERACCESS identifier
Rule 193   iMEMAi -> identifier MEMBERACCESS identifier
Rule 194   non_assignment_expression -> conditional_expression
Rule 195   conditional_expression -> conditional_or_expression
Rule 196   conditional_or_expression -> conditional_and_expression
Rule 197   conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression
Rule 198   conditional_and_expression -> inclusive_or_expression
Rule 199   conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression
Rule 200   inclusive_or_expression -> exclusive_or_expression
Rule 201   inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression
Rule 202   exclusive_or_expression -> and_expression
Rule 203   exclusive_or_expression -> exclusive_or_expression XOR and_expression
Rule 204   and_expression -> equality_expression
Rule 205   and_expression -> and_expression AND equality_expression
Rule 206   equality_expression -> relational_expression
Rule 207   equality_expression -> equality_expression EQ relational_expression
Rule 208   equality_expression -> equality_expression NE relational_expression
Rule 209   relational_expression -> shift_expression
Rule 210   relational_expression -> relational_expression LT shift_expression
Rule 211   relational_expression -> relational_expression GT shift_expression
Rule 212   relational_expression -> relational_expression LEQ shift_expression
Rule 213   relational_expression -> relational_expression GEQ shift_expression
Rule 214   shift_expression -> additive_expression
Rule 215   shift_expression -> shift_expression LSHIFT additive_expression
Rule 216   shift_expression -> shift_expression RSHIFT additive_expression
Rule 217   additive_expression -> multiplicative_expression
Rule 218   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 219   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 220   multiplicative_expression -> unary_expression
Rule 221   multiplicative_expression -> identifier
Rule 222   multiplicative_expression -> multiplicative_expression TIMES unary_expression
Rule 223   multiplicative_expression -> multiplicative_expression DIVIDE unary_expression
Rule 224   multiplicative_expression -> multiplicative_expression MOD unary_expression
Rule 225   multiplicative_expression -> multiplicative_expression TIMES identifier
Rule 226   multiplicative_expression -> multiplicative_expression DIVIDE identifier
Rule 227   multiplicative_expression -> multiplicative_expression MOD identifier

Terminals, with rules where they appear

AND                  : 205
BREAK                : 92
CHAR                 : 151
CHARCONST            : 98
CLASS                : 9 10 11 12
COLON                : 168
COMMA                : 38 45 47 66 101 155 165 174 176 181 183
COMMENTDELIM         : 
COMMENTSLINE         : 
CONAND               : 199
CONOR                : 197
CONTINUE             : 93
DECREMENT            : 158 159
DIVIDE               : 223 226
ELSE                 : 117
EQ                   : 207
EQUALS               : 40 69 103 123 177
GEQ                  : 213
GT                   : 211
IDENTIFIER           : 15
IF                   : 116 117
INCREMENT            : 156 157
INT                  : 150
INTCONST             : 96
LBRACE               : 13 14 43 44 45 78 79 172 173 174 180 181 185
LBRACKET             : 33 152 153 186
LEQ                  : 212
LNOT                 : 131 132
LPAREN               : 50 51 52 53 54 55 56 57 71 72 75 110 111 112 113 114 115 116 117 118 146 160 161 162 188 189 190
LSHIFT               : 215
LT                   : 210
MEMBERACCESS         : 31 32 147 149 192 193
MINUS                : 129 130 219
MINUSEQUAL           : 125
MOD                  : 224 227
NE                   : 208
NEW                  : 160 161 162 163 186 187
NEWLINE              : 
OBJECT               : 29
OR                   : 201
PLUS                 : 127 128 218
PLUSEQUAL            : 124
PRIVATE              : 61
PUBLIC               : 60
RBRACE               : 13 14 43 44 45 78 79 172 173 174 180 181 185
RBRACKET             : 33 152 153 186
RETURN               : 94 95
RPAREN               : 50 51 52 53 54 55 56 57 71 72 75 110 111 112 113 114 115 116 117 118 146 160 161 162 188 189 190
RSHIFT               : 216
STRCONST             : 97
TERMINATOR           : 6 9 10 22 23 64 74 77 82 85 86 92 93 94 95
TILDE                : 75 133 134
TIMES                : 222 225
TYPEOF               : 188 189 190
USING                : 6
VOID                 : 54 55 56 57 190
WHILE                : 118
XOR                  : 203
error                : 

Nonterminals, with rules where they appear

additive_expression  : 214 215 216 218 219
and_expression       : 202 203 205
argument             : 164 165
argument_list        : 110 113 114 160 161 165
argument_name        : 166
argument_value       : 166 167
array_creation_expression : 136
array_initializer    : 42 187
array_type           : 27 187
assignment           : 106 120
assignment_operator  : 121 122
block                : 63 73 76 84
break_statement      : 89
class_body           : 9 10 11 12
class_declaration    : 7 8
class_declarations   : 2 3 7
class_member_declaration : 16 17
class_member_declarations : 13 17
class_type           : 26
collection_initializer : 171
compilation_unit     : 1
conditional_and_expression : 196 197 199
conditional_expression : 194
conditional_or_expression : 195 197
constructor_body     : 70
constructor_declaration : 20
constructor_declarator : 70
continue_statement   : 90
default_argument     : 67
destructor_body      : 75
destructor_declaration : 21
element_access       : 140
element_initializer  : 182 183
element_initializer_list : 180 181 183
embedded_statement   : 83 116 117 117 118
equality_expression  : 204 205 207 208
exclusive_or_expression : 200 201 203
expression           : 41 69 95 104 116 117 118 121 122 146 154 155 169 178 186
expression_list      : 152 153 155 185
field_declaration    : 18
fixed_parameter      : 65 66
fixed_parameters     : 50 51 54 55 66 71
iMEMAi               : 148 191
identifier           : 6 9 10 11 12 30 31 32 35 39 40 62 67 68 71 72 75 102 103 112 113 122 128 130 132 134 147 149 153 157 159 168 177 192 193 193 221 225 226 227
if_statement         : 87
inclusive_or_expression : 198 199 201
initializer_value    : 177
invocation_expression : 107 142
iteration_statement  : 88
literal              : 137
local_variable_declaration : 82
local_variable_declarator : 100 101
local_variable_declarators : 99 101
local_variable_initializer : 103
member_access        : 139
member_initializer   : 175 176
member_initializer_list : 172 174 176
member_name          : 50 51 52 53 54 55 56 57
method_body          : 49
method_declaration   : 19
method_header        : 48
modifier             : 58 59
modifiers            : 9 12 22 51 53 55 57 59
multiplicative_expression : 217 218 219 222 223 224 225 226 227
non_array_type       : 33 186
non_assignment_expression : 119 184
object_creation_expression : 105 144
object_initializer   : 170
object_or_collection_initializer : 160 163 179
parenthesized_expression : 138
post_decrement_expression : 109 143
post_increment_expression : 108 141
predefined_type      : 36 149
prefix               : 30 32
primary_expression   : 110 111 126 147 156 158
primary_no_array_creation_expression : 135 152
proper_identifier    : 28 114 115
reference_type       : 24
relational_expression : 206 207 208 210 211 212 213
return_statement     : 91
shift_expression     : 209 210 211 212 213 215 216
start                : 0
statement            : 80 81
statement_expression : 86
statement_list       : 79 81
type                 : 22 23 34 50 51 52 53 67 68 99 160 161 162 163 188
type_parameter       : 25
typeof_expression    : 145
unary_expression     : 121 127 129 131 133 220 222 223 224
unbound_type_name    : 189 192
using_directive      : 4 5
using_directives     : 3 5
variable_declarator  : 37 38
variable_declarators : 22 23 38
variable_initializer : 40 46 47
variable_initializer_list : 43 45 47

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . compilation_unit
    (2) compilation_unit -> . class_declarations
    (3) compilation_unit -> . using_directives class_declarations
    (7) class_declarations -> . class_declarations class_declaration
    (8) class_declarations -> . class_declaration
    (4) using_directives -> . using_directive
    (5) using_directives -> . using_directives using_directive
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (6) using_directive -> . USING identifier TERMINATOR
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE

    CLASS           shift and go to state 5
    USING           shift and go to state 11
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3

    class_declarations             shift and go to state 1
    modifiers                      shift and go to state 2
    compilation_unit               shift and go to state 4
    class_declaration              shift and go to state 6
    start                          shift and go to state 7
    modifier                       shift and go to state 8
    using_directives               shift and go to state 9
    using_directive                shift and go to state 12

state 1

    (2) compilation_unit -> class_declarations .
    (7) class_declarations -> class_declarations . class_declaration
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE

    $end            reduce using rule 2 (compilation_unit -> class_declarations .)
    CLASS           shift and go to state 5
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3

    modifiers                      shift and go to state 2
    class_declaration              shift and go to state 13
    modifier                       shift and go to state 8

state 2

    (9) class_declaration -> modifiers . CLASS identifier class_body TERMINATOR
    (12) class_declaration -> modifiers . CLASS identifier class_body
    (59) modifiers -> modifiers . modifier
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE

    CLASS           shift and go to state 15
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3

    modifier                       shift and go to state 14

state 3

    (61) modifier -> PRIVATE .

    CLASS           reduce using rule 61 (modifier -> PRIVATE .)
    PUBLIC          reduce using rule 61 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 61 (modifier -> PRIVATE .)
    VOID            reduce using rule 61 (modifier -> PRIVATE .)
    OBJECT          reduce using rule 61 (modifier -> PRIVATE .)
    IDENTIFIER      reduce using rule 61 (modifier -> PRIVATE .)
    INT             reduce using rule 61 (modifier -> PRIVATE .)
    CHAR            reduce using rule 61 (modifier -> PRIVATE .)


state 4

    (1) start -> compilation_unit .

    $end            reduce using rule 1 (start -> compilation_unit .)


state 5

    (10) class_declaration -> CLASS . identifier class_body TERMINATOR
    (11) class_declaration -> CLASS . identifier class_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 17

state 6

    (8) class_declarations -> class_declaration .

    CLASS           reduce using rule 8 (class_declarations -> class_declaration .)
    PUBLIC          reduce using rule 8 (class_declarations -> class_declaration .)
    PRIVATE         reduce using rule 8 (class_declarations -> class_declaration .)
    $end            reduce using rule 8 (class_declarations -> class_declaration .)


state 7

    (0) S' -> start .



state 8

    (58) modifiers -> modifier .

    CLASS           reduce using rule 58 (modifiers -> modifier .)
    PUBLIC          reduce using rule 58 (modifiers -> modifier .)
    PRIVATE         reduce using rule 58 (modifiers -> modifier .)
    VOID            reduce using rule 58 (modifiers -> modifier .)
    OBJECT          reduce using rule 58 (modifiers -> modifier .)
    IDENTIFIER      reduce using rule 58 (modifiers -> modifier .)
    INT             reduce using rule 58 (modifiers -> modifier .)
    CHAR            reduce using rule 58 (modifiers -> modifier .)


state 9

    (3) compilation_unit -> using_directives . class_declarations
    (5) using_directives -> using_directives . using_directive
    (7) class_declarations -> . class_declarations class_declaration
    (8) class_declarations -> . class_declaration
    (6) using_directive -> . USING identifier TERMINATOR
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE

    USING           shift and go to state 11
    CLASS           shift and go to state 5
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3

    class_declarations             shift and go to state 18
    modifiers                      shift and go to state 2
    class_declaration              shift and go to state 6
    modifier                       shift and go to state 8
    using_directive                shift and go to state 19

state 10

    (60) modifier -> PUBLIC .

    CLASS           reduce using rule 60 (modifier -> PUBLIC .)
    PUBLIC          reduce using rule 60 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 60 (modifier -> PUBLIC .)
    VOID            reduce using rule 60 (modifier -> PUBLIC .)
    OBJECT          reduce using rule 60 (modifier -> PUBLIC .)
    IDENTIFIER      reduce using rule 60 (modifier -> PUBLIC .)
    INT             reduce using rule 60 (modifier -> PUBLIC .)
    CHAR            reduce using rule 60 (modifier -> PUBLIC .)


state 11

    (6) using_directive -> USING . identifier TERMINATOR
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 20

state 12

    (4) using_directives -> using_directive .

    USING           reduce using rule 4 (using_directives -> using_directive .)
    CLASS           reduce using rule 4 (using_directives -> using_directive .)
    PUBLIC          reduce using rule 4 (using_directives -> using_directive .)
    PRIVATE         reduce using rule 4 (using_directives -> using_directive .)


state 13

    (7) class_declarations -> class_declarations class_declaration .

    CLASS           reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    PUBLIC          reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    PRIVATE         reduce using rule 7 (class_declarations -> class_declarations class_declaration .)
    $end            reduce using rule 7 (class_declarations -> class_declarations class_declaration .)


state 14

    (59) modifiers -> modifiers modifier .

    CLASS           reduce using rule 59 (modifiers -> modifiers modifier .)
    PUBLIC          reduce using rule 59 (modifiers -> modifiers modifier .)
    PRIVATE         reduce using rule 59 (modifiers -> modifiers modifier .)
    VOID            reduce using rule 59 (modifiers -> modifiers modifier .)
    OBJECT          reduce using rule 59 (modifiers -> modifiers modifier .)
    IDENTIFIER      reduce using rule 59 (modifiers -> modifiers modifier .)
    INT             reduce using rule 59 (modifiers -> modifiers modifier .)
    CHAR            reduce using rule 59 (modifiers -> modifiers modifier .)


state 15

    (9) class_declaration -> modifiers CLASS . identifier class_body TERMINATOR
    (12) class_declaration -> modifiers CLASS . identifier class_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 21

state 16

    (15) identifier -> IDENTIFIER .

    LBRACKET        reduce using rule 15 (identifier -> IDENTIFIER .)
    INCREMENT       reduce using rule 15 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 15 (identifier -> IDENTIFIER .)
    DECREMENT       reduce using rule 15 (identifier -> IDENTIFIER .)
    MEMBERACCESS    reduce using rule 15 (identifier -> IDENTIFIER .)
    EQUALS          reduce using rule 15 (identifier -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 15 (identifier -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 15 (identifier -> IDENTIFIER .)
    TIMES           reduce using rule 15 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 15 (identifier -> IDENTIFIER .)
    MOD             reduce using rule 15 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 15 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 15 (identifier -> IDENTIFIER .)
    LSHIFT          reduce using rule 15 (identifier -> IDENTIFIER .)
    RSHIFT          reduce using rule 15 (identifier -> IDENTIFIER .)
    LT              reduce using rule 15 (identifier -> IDENTIFIER .)
    GT              reduce using rule 15 (identifier -> IDENTIFIER .)
    LEQ             reduce using rule 15 (identifier -> IDENTIFIER .)
    GEQ             reduce using rule 15 (identifier -> IDENTIFIER .)
    EQ              reduce using rule 15 (identifier -> IDENTIFIER .)
    NE              reduce using rule 15 (identifier -> IDENTIFIER .)
    AND             reduce using rule 15 (identifier -> IDENTIFIER .)
    XOR             reduce using rule 15 (identifier -> IDENTIFIER .)
    OR              reduce using rule 15 (identifier -> IDENTIFIER .)
    CONAND          reduce using rule 15 (identifier -> IDENTIFIER .)
    CONOR           reduce using rule 15 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 15 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 15 (identifier -> IDENTIFIER .)
    TERMINATOR      reduce using rule 15 (identifier -> IDENTIFIER .)
    RBRACKET        reduce using rule 15 (identifier -> IDENTIFIER .)
    RBRACE          reduce using rule 15 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (identifier -> IDENTIFIER .)
    COLON           reduce using rule 15 (identifier -> IDENTIFIER .)
    LBRACE          reduce using rule 15 (identifier -> IDENTIFIER .)


state 17

    (10) class_declaration -> CLASS identifier . class_body TERMINATOR
    (11) class_declaration -> CLASS identifier . class_body
    (13) class_body -> . LBRACE class_member_declarations RBRACE
    (14) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 22

    class_body                     shift and go to state 23

state 18

    (3) compilation_unit -> using_directives class_declarations .
    (7) class_declarations -> class_declarations . class_declaration
    (9) class_declaration -> . modifiers CLASS identifier class_body TERMINATOR
    (10) class_declaration -> . CLASS identifier class_body TERMINATOR
    (11) class_declaration -> . CLASS identifier class_body
    (12) class_declaration -> . modifiers CLASS identifier class_body
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE

    $end            reduce using rule 3 (compilation_unit -> using_directives class_declarations .)
    CLASS           shift and go to state 5
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3

    modifiers                      shift and go to state 2
    class_declaration              shift and go to state 13
    modifier                       shift and go to state 8

state 19

    (5) using_directives -> using_directives using_directive .

    USING           reduce using rule 5 (using_directives -> using_directives using_directive .)
    CLASS           reduce using rule 5 (using_directives -> using_directives using_directive .)
    PUBLIC          reduce using rule 5 (using_directives -> using_directives using_directive .)
    PRIVATE         reduce using rule 5 (using_directives -> using_directives using_directive .)


state 20

    (6) using_directive -> USING identifier . TERMINATOR

    TERMINATOR      shift and go to state 24


state 21

    (9) class_declaration -> modifiers CLASS identifier . class_body TERMINATOR
    (12) class_declaration -> modifiers CLASS identifier . class_body
    (13) class_body -> . LBRACE class_member_declarations RBRACE
    (14) class_body -> . LBRACE RBRACE

    LBRACE          shift and go to state 22

    class_body                     shift and go to state 25

state 22

    (13) class_body -> LBRACE . class_member_declarations RBRACE
    (14) class_body -> LBRACE . RBRACE
    (16) class_member_declarations -> . class_member_declaration
    (17) class_member_declarations -> . class_member_declarations class_member_declaration
    (18) class_member_declaration -> . field_declaration
    (19) class_member_declaration -> . method_declaration
    (20) class_member_declaration -> . constructor_declaration
    (21) class_member_declaration -> . destructor_declaration
    (22) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (23) field_declaration -> . type variable_declarators TERMINATOR
    (48) method_declaration -> . method_header
    (49) method_declaration -> . method_body
    (70) constructor_declaration -> . constructor_declarator constructor_body
    (75) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (50) method_header -> . type member_name LPAREN fixed_parameters RPAREN
    (51) method_header -> . modifiers type member_name LPAREN fixed_parameters RPAREN
    (52) method_header -> . type member_name LPAREN RPAREN
    (53) method_header -> . modifiers type member_name LPAREN RPAREN
    (54) method_header -> . VOID member_name LPAREN fixed_parameters RPAREN
    (55) method_header -> . modifiers VOID member_name LPAREN fixed_parameters RPAREN
    (56) method_header -> . VOID member_name LPAREN RPAREN
    (57) method_header -> . modifiers VOID member_name LPAREN RPAREN
    (63) method_body -> . block
    (64) method_body -> . TERMINATOR
    (71) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (72) constructor_declarator -> . identifier LPAREN RPAREN
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (15) identifier -> . IDENTIFIER
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 41
    TILDE           shift and go to state 37
    VOID            shift and go to state 28
    TERMINATOR      shift and go to state 45
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3
    LBRACE          shift and go to state 48
    IDENTIFIER      shift and go to state 16
    OBJECT          shift and go to state 29
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    constructor_declarator         shift and go to state 26
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    type_parameter                 shift and go to state 32
    predefined_type                shift and go to state 34
    constructor_declaration        shift and go to state 35
    method_declaration             shift and go to state 36
    class_member_declarations      shift and go to state 38
    type                           shift and go to state 39
    identifier                     shift and go to state 40
    class_type                     shift and go to state 33
    non_array_type                 shift and go to state 42
    method_body                    shift and go to state 43
    array_type                     shift and go to state 46
    modifiers                      shift and go to state 44
    class_member_declaration       shift and go to state 49
    method_header                  shift and go to state 50
    field_declaration              shift and go to state 52
    destructor_declaration         shift and go to state 53
    modifier                       shift and go to state 8
    block                          shift and go to state 54

state 23

    (10) class_declaration -> CLASS identifier class_body . TERMINATOR
    (11) class_declaration -> CLASS identifier class_body .

    TERMINATOR      shift and go to state 55
    CLASS           reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    PUBLIC          reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    PRIVATE         reduce using rule 11 (class_declaration -> CLASS identifier class_body .)
    $end            reduce using rule 11 (class_declaration -> CLASS identifier class_body .)


state 24

    (6) using_directive -> USING identifier TERMINATOR .

    USING           reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    CLASS           reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    PUBLIC          reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)
    PRIVATE         reduce using rule 6 (using_directive -> USING identifier TERMINATOR .)


state 25

    (9) class_declaration -> modifiers CLASS identifier class_body . TERMINATOR
    (12) class_declaration -> modifiers CLASS identifier class_body .

    TERMINATOR      shift and go to state 56
    CLASS           reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    PUBLIC          reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    PRIVATE         reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)
    $end            reduce using rule 12 (class_declaration -> modifiers CLASS identifier class_body .)


state 26

    (70) constructor_declaration -> constructor_declarator . constructor_body
    (73) constructor_body -> . block
    (74) constructor_body -> . TERMINATOR
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE

    TERMINATOR      shift and go to state 58
    LBRACE          shift and go to state 48

    constructor_body               shift and go to state 57
    block                          shift and go to state 59

state 27

    (24) type -> reference_type .

    IDENTIFIER      reduce using rule 24 (type -> reference_type .)
    LBRACKET        reduce using rule 24 (type -> reference_type .)
    RPAREN          reduce using rule 24 (type -> reference_type .)
    LPAREN          reduce using rule 24 (type -> reference_type .)
    LBRACE          reduce using rule 24 (type -> reference_type .)


state 28

    (54) method_header -> VOID . member_name LPAREN fixed_parameters RPAREN
    (56) method_header -> VOID . member_name LPAREN RPAREN
    (62) member_name -> . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 61
    member_name                    shift and go to state 60

state 29

    (29) class_type -> OBJECT .

    LPAREN          reduce using rule 29 (class_type -> OBJECT .)
    LBRACE          reduce using rule 29 (class_type -> OBJECT .)
    LBRACKET        reduce using rule 29 (class_type -> OBJECT .)
    IDENTIFIER      reduce using rule 29 (class_type -> OBJECT .)
    RPAREN          reduce using rule 29 (class_type -> OBJECT .)


state 30

    (28) class_type -> proper_identifier .

    LPAREN          reduce using rule 28 (class_type -> proper_identifier .)
    LBRACE          reduce using rule 28 (class_type -> proper_identifier .)
    LBRACKET        reduce using rule 28 (class_type -> proper_identifier .)
    IDENTIFIER      reduce using rule 28 (class_type -> proper_identifier .)
    RPAREN          reduce using rule 28 (class_type -> proper_identifier .)


state 31

    (30) proper_identifier -> prefix . identifier
    (32) prefix -> prefix . identifier MEMBERACCESS
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 62

state 32

    (25) type -> type_parameter .

    IDENTIFIER      reduce using rule 25 (type -> type_parameter .)
    LBRACKET        reduce using rule 25 (type -> type_parameter .)
    RPAREN          reduce using rule 25 (type -> type_parameter .)
    LPAREN          reduce using rule 25 (type -> type_parameter .)
    LBRACE          reduce using rule 25 (type -> type_parameter .)


state 33

    (26) reference_type -> class_type .

    IDENTIFIER      reduce using rule 26 (reference_type -> class_type .)
    LBRACKET        reduce using rule 26 (reference_type -> class_type .)
    LPAREN          reduce using rule 26 (reference_type -> class_type .)
    LBRACE          reduce using rule 26 (reference_type -> class_type .)
    RPAREN          reduce using rule 26 (reference_type -> class_type .)


state 34

    (36) type_parameter -> predefined_type .

    IDENTIFIER      reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACKET        reduce using rule 36 (type_parameter -> predefined_type .)
    LPAREN          reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACE          reduce using rule 36 (type_parameter -> predefined_type .)
    RPAREN          reduce using rule 36 (type_parameter -> predefined_type .)


state 35

    (20) class_member_declaration -> constructor_declaration .

    RBRACE          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    TILDE           reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    VOID            reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    TERMINATOR      reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    PUBLIC          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    PRIVATE         reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    LBRACE          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    IDENTIFIER      reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    OBJECT          reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    INT             reduce using rule 20 (class_member_declaration -> constructor_declaration .)
    CHAR            reduce using rule 20 (class_member_declaration -> constructor_declaration .)


state 36

    (19) class_member_declaration -> method_declaration .

    RBRACE          reduce using rule 19 (class_member_declaration -> method_declaration .)
    TILDE           reduce using rule 19 (class_member_declaration -> method_declaration .)
    VOID            reduce using rule 19 (class_member_declaration -> method_declaration .)
    TERMINATOR      reduce using rule 19 (class_member_declaration -> method_declaration .)
    PUBLIC          reduce using rule 19 (class_member_declaration -> method_declaration .)
    PRIVATE         reduce using rule 19 (class_member_declaration -> method_declaration .)
    LBRACE          reduce using rule 19 (class_member_declaration -> method_declaration .)
    IDENTIFIER      reduce using rule 19 (class_member_declaration -> method_declaration .)
    OBJECT          reduce using rule 19 (class_member_declaration -> method_declaration .)
    INT             reduce using rule 19 (class_member_declaration -> method_declaration .)
    CHAR            reduce using rule 19 (class_member_declaration -> method_declaration .)


state 37

    (75) destructor_declaration -> TILDE . identifier LPAREN RPAREN destructor_body
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 63

state 38

    (13) class_body -> LBRACE class_member_declarations . RBRACE
    (17) class_member_declarations -> class_member_declarations . class_member_declaration
    (18) class_member_declaration -> . field_declaration
    (19) class_member_declaration -> . method_declaration
    (20) class_member_declaration -> . constructor_declaration
    (21) class_member_declaration -> . destructor_declaration
    (22) field_declaration -> . modifiers type variable_declarators TERMINATOR
    (23) field_declaration -> . type variable_declarators TERMINATOR
    (48) method_declaration -> . method_header
    (49) method_declaration -> . method_body
    (70) constructor_declaration -> . constructor_declarator constructor_body
    (75) destructor_declaration -> . TILDE identifier LPAREN RPAREN destructor_body
    (58) modifiers -> . modifier
    (59) modifiers -> . modifiers modifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (50) method_header -> . type member_name LPAREN fixed_parameters RPAREN
    (51) method_header -> . modifiers type member_name LPAREN fixed_parameters RPAREN
    (52) method_header -> . type member_name LPAREN RPAREN
    (53) method_header -> . modifiers type member_name LPAREN RPAREN
    (54) method_header -> . VOID member_name LPAREN fixed_parameters RPAREN
    (55) method_header -> . modifiers VOID member_name LPAREN fixed_parameters RPAREN
    (56) method_header -> . VOID member_name LPAREN RPAREN
    (57) method_header -> . modifiers VOID member_name LPAREN RPAREN
    (63) method_body -> . block
    (64) method_body -> . TERMINATOR
    (71) constructor_declarator -> . identifier LPAREN fixed_parameters RPAREN
    (72) constructor_declarator -> . identifier LPAREN RPAREN
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (15) identifier -> . IDENTIFIER
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 64
    TILDE           shift and go to state 37
    VOID            shift and go to state 28
    TERMINATOR      shift and go to state 45
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3
    LBRACE          shift and go to state 48
    IDENTIFIER      shift and go to state 16
    OBJECT          shift and go to state 29
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    constructor_declarator         shift and go to state 26
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    type_parameter                 shift and go to state 32
    predefined_type                shift and go to state 34
    constructor_declaration        shift and go to state 35
    method_declaration             shift and go to state 36
    type                           shift and go to state 39
    identifier                     shift and go to state 40
    class_type                     shift and go to state 33
    non_array_type                 shift and go to state 42
    method_body                    shift and go to state 43
    array_type                     shift and go to state 46
    modifiers                      shift and go to state 44
    class_member_declaration       shift and go to state 65
    method_header                  shift and go to state 50
    field_declaration              shift and go to state 52
    destructor_declaration         shift and go to state 53
    modifier                       shift and go to state 8
    block                          shift and go to state 54

state 39

    (23) field_declaration -> type . variable_declarators TERMINATOR
    (50) method_header -> type . member_name LPAREN fixed_parameters RPAREN
    (52) method_header -> type . member_name LPAREN RPAREN
    (34) non_array_type -> type .
    (37) variable_declarators -> . variable_declarator
    (38) variable_declarators -> . variable_declarators COMMA variable_declarator
    (62) member_name -> . identifier
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    variable_declarators           shift and go to state 66
    variable_declarator            shift and go to state 67
    member_name                    shift and go to state 68
    identifier                     shift and go to state 69

state 40

    (71) constructor_declarator -> identifier . LPAREN fixed_parameters RPAREN
    (72) constructor_declarator -> identifier . LPAREN RPAREN
    (35) type_parameter -> identifier .
    (31) prefix -> identifier . MEMBERACCESS

    LPAREN          shift and go to state 71
    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 70


state 41

    (14) class_body -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 14 (class_body -> LBRACE RBRACE .)
    CLASS           reduce using rule 14 (class_body -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 14 (class_body -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 14 (class_body -> LBRACE RBRACE .)
    $end            reduce using rule 14 (class_body -> LBRACE RBRACE .)


state 42

    (33) array_type -> non_array_type . LBRACKET RBRACKET

    LBRACKET        shift and go to state 72


state 43

    (49) method_declaration -> method_body .

    RBRACE          reduce using rule 49 (method_declaration -> method_body .)
    TILDE           reduce using rule 49 (method_declaration -> method_body .)
    VOID            reduce using rule 49 (method_declaration -> method_body .)
    TERMINATOR      reduce using rule 49 (method_declaration -> method_body .)
    PUBLIC          reduce using rule 49 (method_declaration -> method_body .)
    PRIVATE         reduce using rule 49 (method_declaration -> method_body .)
    LBRACE          reduce using rule 49 (method_declaration -> method_body .)
    IDENTIFIER      reduce using rule 49 (method_declaration -> method_body .)
    OBJECT          reduce using rule 49 (method_declaration -> method_body .)
    INT             reduce using rule 49 (method_declaration -> method_body .)
    CHAR            reduce using rule 49 (method_declaration -> method_body .)


state 44

    (22) field_declaration -> modifiers . type variable_declarators TERMINATOR
    (59) modifiers -> modifiers . modifier
    (51) method_header -> modifiers . type member_name LPAREN fixed_parameters RPAREN
    (53) method_header -> modifiers . type member_name LPAREN RPAREN
    (55) method_header -> modifiers . VOID member_name LPAREN fixed_parameters RPAREN
    (57) method_header -> modifiers . VOID member_name LPAREN RPAREN
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (60) modifier -> . PUBLIC
    (61) modifier -> . PRIVATE
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    VOID            shift and go to state 73
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 3
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    identifier                     shift and go to state 75
    non_array_type                 shift and go to state 42
    predefined_type                shift and go to state 34
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    array_type                     shift and go to state 46
    modifier                       shift and go to state 14
    type                           shift and go to state 74
    type_parameter                 shift and go to state 32

state 45

    (64) method_body -> TERMINATOR .

    RBRACE          reduce using rule 64 (method_body -> TERMINATOR .)
    TILDE           reduce using rule 64 (method_body -> TERMINATOR .)
    VOID            reduce using rule 64 (method_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 64 (method_body -> TERMINATOR .)
    PUBLIC          reduce using rule 64 (method_body -> TERMINATOR .)
    PRIVATE         reduce using rule 64 (method_body -> TERMINATOR .)
    LBRACE          reduce using rule 64 (method_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 64 (method_body -> TERMINATOR .)
    OBJECT          reduce using rule 64 (method_body -> TERMINATOR .)
    INT             reduce using rule 64 (method_body -> TERMINATOR .)
    CHAR            reduce using rule 64 (method_body -> TERMINATOR .)


state 46

    (27) reference_type -> array_type .

    IDENTIFIER      reduce using rule 27 (reference_type -> array_type .)
    LBRACKET        reduce using rule 27 (reference_type -> array_type .)
    RPAREN          reduce using rule 27 (reference_type -> array_type .)


state 47

    (151) predefined_type -> CHAR .

    IDENTIFIER      reduce using rule 151 (predefined_type -> CHAR .)
    LBRACKET        reduce using rule 151 (predefined_type -> CHAR .)
    MEMBERACCESS    reduce using rule 151 (predefined_type -> CHAR .)
    RPAREN          reduce using rule 151 (predefined_type -> CHAR .)
    LPAREN          reduce using rule 151 (predefined_type -> CHAR .)
    LBRACE          reduce using rule 151 (predefined_type -> CHAR .)


state 48

    (78) block -> LBRACE . RBRACE
    (79) block -> LBRACE . statement_list RBRACE
    (80) statement_list -> . statement
    (81) statement_list -> . statement_list statement
    (82) statement -> . local_variable_declaration TERMINATOR
    (83) statement -> . embedded_statement
    (99) local_variable_declaration -> . type local_variable_declarators
    (84) embedded_statement -> . block
    (85) embedded_statement -> . TERMINATOR
    (86) embedded_statement -> . statement_expression TERMINATOR
    (87) embedded_statement -> . if_statement
    (88) embedded_statement -> . iteration_statement
    (89) embedded_statement -> . break_statement
    (90) embedded_statement -> . continue_statement
    (91) embedded_statement -> . return_statement
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (105) statement_expression -> . object_creation_expression
    (106) statement_expression -> . assignment
    (107) statement_expression -> . invocation_expression
    (108) statement_expression -> . post_increment_expression
    (109) statement_expression -> . post_decrement_expression
    (116) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (117) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (118) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (92) break_statement -> . BREAK TERMINATOR
    (93) continue_statement -> . CONTINUE TERMINATOR
    (94) return_statement -> . RETURN TERMINATOR
    (95) return_statement -> . RETURN expression TERMINATOR
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier

    RBRACE          shift and go to state 105
    TERMINATOR      shift and go to state 110
    LBRACE          shift and go to state 48
    IF              shift and go to state 113
    WHILE           shift and go to state 83
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 116
    RETURN          shift and go to state 77
    NEW             shift and go to state 87
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104

    object_creation_expression     shift and go to state 76
    unary_expression               shift and go to state 79
    proper_identifier              shift and go to state 80
    break_statement                shift and go to state 81
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    iteration_statement            shift and go to state 88
    type_parameter                 shift and go to state 32
    predefined_type                shift and go to state 90
    post_decrement_expression      shift and go to state 91
    member_access                  shift and go to state 92
    reference_type                 shift and go to state 27
    embedded_statement             shift and go to state 93
    return_statement               shift and go to state 94
    literal                        shift and go to state 95
    continue_statement             shift and go to state 96
    statement                      shift and go to state 98
    statement_expression           shift and go to state 100
    invocation_expression          shift and go to state 101
    if_statement                   shift and go to state 103
    type                           shift and go to state 102
    class_type                     shift and go to state 33
    non_array_type                 shift and go to state 42
    assignment                     shift and go to state 107
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 122
    array_type                     shift and go to state 46
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 117
    local_variable_declaration     shift and go to state 118
    statement_list                 shift and go to state 119
    identifier                     shift and go to state 120
    block                          shift and go to state 121

state 49

    (16) class_member_declarations -> class_member_declaration .

    RBRACE          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    TILDE           reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    VOID            reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    TERMINATOR      reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    PUBLIC          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    PRIVATE         reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    LBRACE          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    IDENTIFIER      reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    OBJECT          reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    INT             reduce using rule 16 (class_member_declarations -> class_member_declaration .)
    CHAR            reduce using rule 16 (class_member_declarations -> class_member_declaration .)


state 50

    (48) method_declaration -> method_header .

    RBRACE          reduce using rule 48 (method_declaration -> method_header .)
    TILDE           reduce using rule 48 (method_declaration -> method_header .)
    VOID            reduce using rule 48 (method_declaration -> method_header .)
    TERMINATOR      reduce using rule 48 (method_declaration -> method_header .)
    PUBLIC          reduce using rule 48 (method_declaration -> method_header .)
    PRIVATE         reduce using rule 48 (method_declaration -> method_header .)
    LBRACE          reduce using rule 48 (method_declaration -> method_header .)
    IDENTIFIER      reduce using rule 48 (method_declaration -> method_header .)
    OBJECT          reduce using rule 48 (method_declaration -> method_header .)
    INT             reduce using rule 48 (method_declaration -> method_header .)
    CHAR            reduce using rule 48 (method_declaration -> method_header .)


state 51

    (150) predefined_type -> INT .

    IDENTIFIER      reduce using rule 150 (predefined_type -> INT .)
    LBRACKET        reduce using rule 150 (predefined_type -> INT .)
    MEMBERACCESS    reduce using rule 150 (predefined_type -> INT .)
    RPAREN          reduce using rule 150 (predefined_type -> INT .)
    LPAREN          reduce using rule 150 (predefined_type -> INT .)
    LBRACE          reduce using rule 150 (predefined_type -> INT .)


state 52

    (18) class_member_declaration -> field_declaration .

    RBRACE          reduce using rule 18 (class_member_declaration -> field_declaration .)
    TILDE           reduce using rule 18 (class_member_declaration -> field_declaration .)
    VOID            reduce using rule 18 (class_member_declaration -> field_declaration .)
    TERMINATOR      reduce using rule 18 (class_member_declaration -> field_declaration .)
    PUBLIC          reduce using rule 18 (class_member_declaration -> field_declaration .)
    PRIVATE         reduce using rule 18 (class_member_declaration -> field_declaration .)
    LBRACE          reduce using rule 18 (class_member_declaration -> field_declaration .)
    IDENTIFIER      reduce using rule 18 (class_member_declaration -> field_declaration .)
    OBJECT          reduce using rule 18 (class_member_declaration -> field_declaration .)
    INT             reduce using rule 18 (class_member_declaration -> field_declaration .)
    CHAR            reduce using rule 18 (class_member_declaration -> field_declaration .)


state 53

    (21) class_member_declaration -> destructor_declaration .

    RBRACE          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    TILDE           reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    VOID            reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    TERMINATOR      reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    PUBLIC          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    PRIVATE         reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    LBRACE          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    IDENTIFIER      reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    OBJECT          reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    INT             reduce using rule 21 (class_member_declaration -> destructor_declaration .)
    CHAR            reduce using rule 21 (class_member_declaration -> destructor_declaration .)


state 54

    (63) method_body -> block .

    RBRACE          reduce using rule 63 (method_body -> block .)
    TILDE           reduce using rule 63 (method_body -> block .)
    VOID            reduce using rule 63 (method_body -> block .)
    TERMINATOR      reduce using rule 63 (method_body -> block .)
    PUBLIC          reduce using rule 63 (method_body -> block .)
    PRIVATE         reduce using rule 63 (method_body -> block .)
    LBRACE          reduce using rule 63 (method_body -> block .)
    IDENTIFIER      reduce using rule 63 (method_body -> block .)
    OBJECT          reduce using rule 63 (method_body -> block .)
    INT             reduce using rule 63 (method_body -> block .)
    CHAR            reduce using rule 63 (method_body -> block .)


state 55

    (10) class_declaration -> CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 10 (class_declaration -> CLASS identifier class_body TERMINATOR .)


state 56

    (9) class_declaration -> modifiers CLASS identifier class_body TERMINATOR .

    CLASS           reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PUBLIC          reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    PRIVATE         reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)
    $end            reduce using rule 9 (class_declaration -> modifiers CLASS identifier class_body TERMINATOR .)


state 57

    (70) constructor_declaration -> constructor_declarator constructor_body .

    RBRACE          reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    TILDE           reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    VOID            reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    TERMINATOR      reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    PUBLIC          reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    PRIVATE         reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    LBRACE          reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    IDENTIFIER      reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    OBJECT          reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    INT             reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)
    CHAR            reduce using rule 70 (constructor_declaration -> constructor_declarator constructor_body .)


state 58

    (74) constructor_body -> TERMINATOR .

    RBRACE          reduce using rule 74 (constructor_body -> TERMINATOR .)
    TILDE           reduce using rule 74 (constructor_body -> TERMINATOR .)
    VOID            reduce using rule 74 (constructor_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 74 (constructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 74 (constructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 74 (constructor_body -> TERMINATOR .)
    LBRACE          reduce using rule 74 (constructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 74 (constructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 74 (constructor_body -> TERMINATOR .)
    INT             reduce using rule 74 (constructor_body -> TERMINATOR .)
    CHAR            reduce using rule 74 (constructor_body -> TERMINATOR .)


state 59

    (73) constructor_body -> block .

    RBRACE          reduce using rule 73 (constructor_body -> block .)
    TILDE           reduce using rule 73 (constructor_body -> block .)
    VOID            reduce using rule 73 (constructor_body -> block .)
    TERMINATOR      reduce using rule 73 (constructor_body -> block .)
    PUBLIC          reduce using rule 73 (constructor_body -> block .)
    PRIVATE         reduce using rule 73 (constructor_body -> block .)
    LBRACE          reduce using rule 73 (constructor_body -> block .)
    IDENTIFIER      reduce using rule 73 (constructor_body -> block .)
    OBJECT          reduce using rule 73 (constructor_body -> block .)
    INT             reduce using rule 73 (constructor_body -> block .)
    CHAR            reduce using rule 73 (constructor_body -> block .)


state 60

    (54) method_header -> VOID member_name . LPAREN fixed_parameters RPAREN
    (56) method_header -> VOID member_name . LPAREN RPAREN

    LPAREN          shift and go to state 123


state 61

    (62) member_name -> identifier .

    LPAREN          reduce using rule 62 (member_name -> identifier .)


state 62

    (30) proper_identifier -> prefix identifier .
    (32) prefix -> prefix identifier . MEMBERACCESS

    LPAREN          reduce using rule 30 (proper_identifier -> prefix identifier .)
    LBRACE          reduce using rule 30 (proper_identifier -> prefix identifier .)
    LBRACKET        reduce using rule 30 (proper_identifier -> prefix identifier .)
    IDENTIFIER      reduce using rule 30 (proper_identifier -> prefix identifier .)
    RPAREN          reduce using rule 30 (proper_identifier -> prefix identifier .)
    MEMBERACCESS    shift and go to state 124


state 63

    (75) destructor_declaration -> TILDE identifier . LPAREN RPAREN destructor_body

    LPAREN          shift and go to state 125


state 64

    (13) class_body -> LBRACE class_member_declarations RBRACE .

    TERMINATOR      reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    CLASS           reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    PUBLIC          reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    PRIVATE         reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)
    $end            reduce using rule 13 (class_body -> LBRACE class_member_declarations RBRACE .)


state 65

    (17) class_member_declarations -> class_member_declarations class_member_declaration .

    RBRACE          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    TILDE           reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    VOID            reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    TERMINATOR      reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PUBLIC          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    PRIVATE         reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    LBRACE          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    IDENTIFIER      reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    OBJECT          reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    INT             reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)
    CHAR            reduce using rule 17 (class_member_declarations -> class_member_declarations class_member_declaration .)


state 66

    (23) field_declaration -> type variable_declarators . TERMINATOR
    (38) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 127
    COMMA           shift and go to state 126


state 67

    (37) variable_declarators -> variable_declarator .

    TERMINATOR      reduce using rule 37 (variable_declarators -> variable_declarator .)
    COMMA           reduce using rule 37 (variable_declarators -> variable_declarator .)


state 68

    (50) method_header -> type member_name . LPAREN fixed_parameters RPAREN
    (52) method_header -> type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 128


state 69

    (62) member_name -> identifier .
    (39) variable_declarator -> identifier .
    (40) variable_declarator -> identifier . EQUALS variable_initializer

    LPAREN          reduce using rule 62 (member_name -> identifier .)
    TERMINATOR      reduce using rule 39 (variable_declarator -> identifier .)
    COMMA           reduce using rule 39 (variable_declarator -> identifier .)
    EQUALS          shift and go to state 129


state 70

    (31) prefix -> identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)


state 71

    (71) constructor_declarator -> identifier LPAREN . fixed_parameters RPAREN
    (72) constructor_declarator -> identifier LPAREN . RPAREN
    (65) fixed_parameters -> . fixed_parameter
    (66) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 130
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    fixed_parameters               shift and go to state 133
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 132
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 72

    (33) array_type -> non_array_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 134


state 73

    (55) method_header -> modifiers VOID . member_name LPAREN fixed_parameters RPAREN
    (57) method_header -> modifiers VOID . member_name LPAREN RPAREN
    (62) member_name -> . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 61
    member_name                    shift and go to state 135

state 74

    (22) field_declaration -> modifiers type . variable_declarators TERMINATOR
    (51) method_header -> modifiers type . member_name LPAREN fixed_parameters RPAREN
    (53) method_header -> modifiers type . member_name LPAREN RPAREN
    (34) non_array_type -> type .
    (37) variable_declarators -> . variable_declarator
    (38) variable_declarators -> . variable_declarators COMMA variable_declarator
    (62) member_name -> . identifier
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    variable_declarators           shift and go to state 136
    variable_declarator            shift and go to state 67
    member_name                    shift and go to state 137
    identifier                     shift and go to state 69

state 75

    (35) type_parameter -> identifier .
    (31) prefix -> identifier . MEMBERACCESS

    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    LPAREN          reduce using rule 35 (type_parameter -> identifier .)
    LBRACE          reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 70


state 76

    (105) statement_expression -> object_creation_expression .
    (144) primary_no_array_creation_expression -> object_creation_expression .

    TERMINATOR      reduce using rule 105 (statement_expression -> object_creation_expression .)
    LBRACKET        reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    LPAREN          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    INCREMENT       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    DECREMENT       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MEMBERACCESS    reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    EQUALS          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    PLUSEQUAL       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MINUSEQUAL      reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)


state 77

    (94) return_statement -> RETURN . TERMINATOR
    (95) return_statement -> RETURN . expression TERMINATOR
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    TERMINATOR      shift and go to state 154
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 160
    conditional_and_expression     shift and go to state 161

state 78

    (97) literal -> STRCONST .

    LBRACKET        reduce using rule 97 (literal -> STRCONST .)
    MEMBERACCESS    reduce using rule 97 (literal -> STRCONST .)
    INCREMENT       reduce using rule 97 (literal -> STRCONST .)
    LPAREN          reduce using rule 97 (literal -> STRCONST .)
    DECREMENT       reduce using rule 97 (literal -> STRCONST .)
    EQUALS          reduce using rule 97 (literal -> STRCONST .)
    PLUSEQUAL       reduce using rule 97 (literal -> STRCONST .)
    MINUSEQUAL      reduce using rule 97 (literal -> STRCONST .)
    TIMES           reduce using rule 97 (literal -> STRCONST .)
    DIVIDE          reduce using rule 97 (literal -> STRCONST .)
    MOD             reduce using rule 97 (literal -> STRCONST .)
    PLUS            reduce using rule 97 (literal -> STRCONST .)
    MINUS           reduce using rule 97 (literal -> STRCONST .)
    LSHIFT          reduce using rule 97 (literal -> STRCONST .)
    RSHIFT          reduce using rule 97 (literal -> STRCONST .)
    LT              reduce using rule 97 (literal -> STRCONST .)
    GT              reduce using rule 97 (literal -> STRCONST .)
    LEQ             reduce using rule 97 (literal -> STRCONST .)
    GEQ             reduce using rule 97 (literal -> STRCONST .)
    EQ              reduce using rule 97 (literal -> STRCONST .)
    NE              reduce using rule 97 (literal -> STRCONST .)
    AND             reduce using rule 97 (literal -> STRCONST .)
    XOR             reduce using rule 97 (literal -> STRCONST .)
    OR              reduce using rule 97 (literal -> STRCONST .)
    CONAND          reduce using rule 97 (literal -> STRCONST .)
    CONOR           reduce using rule 97 (literal -> STRCONST .)
    RBRACE          reduce using rule 97 (literal -> STRCONST .)
    COMMA           reduce using rule 97 (literal -> STRCONST .)
    TERMINATOR      reduce using rule 97 (literal -> STRCONST .)
    RPAREN          reduce using rule 97 (literal -> STRCONST .)
    RBRACKET        reduce using rule 97 (literal -> STRCONST .)


state 79

    (121) assignment -> unary_expression . assignment_operator expression
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

    assignment_operator            shift and go to state 166

state 80

    (114) invocation_expression -> proper_identifier . LPAREN argument_list RPAREN
    (115) invocation_expression -> proper_identifier . LPAREN RPAREN
    (28) class_type -> proper_identifier .

    LPAREN          shift and go to state 167
    IDENTIFIER      reduce using rule 28 (class_type -> proper_identifier .)
    LBRACKET        reduce using rule 28 (class_type -> proper_identifier .)


state 81

    (89) embedded_statement -> break_statement .

    RBRACE          reduce using rule 89 (embedded_statement -> break_statement .)
    TERMINATOR      reduce using rule 89 (embedded_statement -> break_statement .)
    LBRACE          reduce using rule 89 (embedded_statement -> break_statement .)
    IF              reduce using rule 89 (embedded_statement -> break_statement .)
    WHILE           reduce using rule 89 (embedded_statement -> break_statement .)
    BREAK           reduce using rule 89 (embedded_statement -> break_statement .)
    CONTINUE        reduce using rule 89 (embedded_statement -> break_statement .)
    RETURN          reduce using rule 89 (embedded_statement -> break_statement .)
    NEW             reduce using rule 89 (embedded_statement -> break_statement .)
    OBJECT          reduce using rule 89 (embedded_statement -> break_statement .)
    IDENTIFIER      reduce using rule 89 (embedded_statement -> break_statement .)
    INT             reduce using rule 89 (embedded_statement -> break_statement .)
    CHAR            reduce using rule 89 (embedded_statement -> break_statement .)
    PLUS            reduce using rule 89 (embedded_statement -> break_statement .)
    MINUS           reduce using rule 89 (embedded_statement -> break_statement .)
    LNOT            reduce using rule 89 (embedded_statement -> break_statement .)
    TILDE           reduce using rule 89 (embedded_statement -> break_statement .)
    INTCONST        reduce using rule 89 (embedded_statement -> break_statement .)
    STRCONST        reduce using rule 89 (embedded_statement -> break_statement .)
    CHARCONST       reduce using rule 89 (embedded_statement -> break_statement .)
    LPAREN          reduce using rule 89 (embedded_statement -> break_statement .)
    TYPEOF          reduce using rule 89 (embedded_statement -> break_statement .)
    ELSE            reduce using rule 89 (embedded_statement -> break_statement .)


state 82

    (96) literal -> INTCONST .

    LBRACKET        reduce using rule 96 (literal -> INTCONST .)
    MEMBERACCESS    reduce using rule 96 (literal -> INTCONST .)
    INCREMENT       reduce using rule 96 (literal -> INTCONST .)
    LPAREN          reduce using rule 96 (literal -> INTCONST .)
    DECREMENT       reduce using rule 96 (literal -> INTCONST .)
    EQUALS          reduce using rule 96 (literal -> INTCONST .)
    PLUSEQUAL       reduce using rule 96 (literal -> INTCONST .)
    MINUSEQUAL      reduce using rule 96 (literal -> INTCONST .)
    TIMES           reduce using rule 96 (literal -> INTCONST .)
    DIVIDE          reduce using rule 96 (literal -> INTCONST .)
    MOD             reduce using rule 96 (literal -> INTCONST .)
    PLUS            reduce using rule 96 (literal -> INTCONST .)
    MINUS           reduce using rule 96 (literal -> INTCONST .)
    LSHIFT          reduce using rule 96 (literal -> INTCONST .)
    RSHIFT          reduce using rule 96 (literal -> INTCONST .)
    LT              reduce using rule 96 (literal -> INTCONST .)
    GT              reduce using rule 96 (literal -> INTCONST .)
    LEQ             reduce using rule 96 (literal -> INTCONST .)
    GEQ             reduce using rule 96 (literal -> INTCONST .)
    EQ              reduce using rule 96 (literal -> INTCONST .)
    NE              reduce using rule 96 (literal -> INTCONST .)
    AND             reduce using rule 96 (literal -> INTCONST .)
    XOR             reduce using rule 96 (literal -> INTCONST .)
    OR              reduce using rule 96 (literal -> INTCONST .)
    CONAND          reduce using rule 96 (literal -> INTCONST .)
    CONOR           reduce using rule 96 (literal -> INTCONST .)
    RBRACE          reduce using rule 96 (literal -> INTCONST .)
    COMMA           reduce using rule 96 (literal -> INTCONST .)
    TERMINATOR      reduce using rule 96 (literal -> INTCONST .)
    RPAREN          reduce using rule 96 (literal -> INTCONST .)
    RBRACKET        reduce using rule 96 (literal -> INTCONST .)


state 83

    (118) iteration_statement -> WHILE . LPAREN expression RPAREN embedded_statement

    LPAREN          shift and go to state 168


state 84

    (131) unary_expression -> LNOT . unary_expression
    (132) unary_expression -> LNOT . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 169
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 170

state 85

    (148) member_access -> iMEMAi .

    LBRACKET        reduce using rule 148 (member_access -> iMEMAi .)
    MEMBERACCESS    reduce using rule 148 (member_access -> iMEMAi .)
    INCREMENT       reduce using rule 148 (member_access -> iMEMAi .)
    LPAREN          reduce using rule 148 (member_access -> iMEMAi .)
    DECREMENT       reduce using rule 148 (member_access -> iMEMAi .)
    TIMES           reduce using rule 148 (member_access -> iMEMAi .)
    DIVIDE          reduce using rule 148 (member_access -> iMEMAi .)
    MOD             reduce using rule 148 (member_access -> iMEMAi .)
    PLUS            reduce using rule 148 (member_access -> iMEMAi .)
    MINUS           reduce using rule 148 (member_access -> iMEMAi .)
    LSHIFT          reduce using rule 148 (member_access -> iMEMAi .)
    RSHIFT          reduce using rule 148 (member_access -> iMEMAi .)
    LT              reduce using rule 148 (member_access -> iMEMAi .)
    GT              reduce using rule 148 (member_access -> iMEMAi .)
    LEQ             reduce using rule 148 (member_access -> iMEMAi .)
    GEQ             reduce using rule 148 (member_access -> iMEMAi .)
    EQ              reduce using rule 148 (member_access -> iMEMAi .)
    NE              reduce using rule 148 (member_access -> iMEMAi .)
    AND             reduce using rule 148 (member_access -> iMEMAi .)
    XOR             reduce using rule 148 (member_access -> iMEMAi .)
    OR              reduce using rule 148 (member_access -> iMEMAi .)
    CONAND          reduce using rule 148 (member_access -> iMEMAi .)
    CONOR           reduce using rule 148 (member_access -> iMEMAi .)
    TERMINATOR      reduce using rule 148 (member_access -> iMEMAi .)
    RPAREN          reduce using rule 148 (member_access -> iMEMAi .)
    COMMA           reduce using rule 148 (member_access -> iMEMAi .)
    RBRACKET        reduce using rule 148 (member_access -> iMEMAi .)
    RBRACE          reduce using rule 148 (member_access -> iMEMAi .)
    EQUALS          reduce using rule 148 (member_access -> iMEMAi .)
    PLUSEQUAL       reduce using rule 148 (member_access -> iMEMAi .)
    MINUSEQUAL      reduce using rule 148 (member_access -> iMEMAi .)


state 86

    (136) primary_expression -> array_creation_expression .

    MEMBERACCESS    reduce using rule 136 (primary_expression -> array_creation_expression .)
    INCREMENT       reduce using rule 136 (primary_expression -> array_creation_expression .)
    LPAREN          reduce using rule 136 (primary_expression -> array_creation_expression .)
    DECREMENT       reduce using rule 136 (primary_expression -> array_creation_expression .)
    EQUALS          reduce using rule 136 (primary_expression -> array_creation_expression .)
    PLUSEQUAL       reduce using rule 136 (primary_expression -> array_creation_expression .)
    MINUSEQUAL      reduce using rule 136 (primary_expression -> array_creation_expression .)
    TIMES           reduce using rule 136 (primary_expression -> array_creation_expression .)
    DIVIDE          reduce using rule 136 (primary_expression -> array_creation_expression .)
    MOD             reduce using rule 136 (primary_expression -> array_creation_expression .)
    PLUS            reduce using rule 136 (primary_expression -> array_creation_expression .)
    MINUS           reduce using rule 136 (primary_expression -> array_creation_expression .)
    LSHIFT          reduce using rule 136 (primary_expression -> array_creation_expression .)
    RSHIFT          reduce using rule 136 (primary_expression -> array_creation_expression .)
    LT              reduce using rule 136 (primary_expression -> array_creation_expression .)
    GT              reduce using rule 136 (primary_expression -> array_creation_expression .)
    LEQ             reduce using rule 136 (primary_expression -> array_creation_expression .)
    GEQ             reduce using rule 136 (primary_expression -> array_creation_expression .)
    EQ              reduce using rule 136 (primary_expression -> array_creation_expression .)
    NE              reduce using rule 136 (primary_expression -> array_creation_expression .)
    AND             reduce using rule 136 (primary_expression -> array_creation_expression .)
    XOR             reduce using rule 136 (primary_expression -> array_creation_expression .)
    OR              reduce using rule 136 (primary_expression -> array_creation_expression .)
    CONAND          reduce using rule 136 (primary_expression -> array_creation_expression .)
    CONOR           reduce using rule 136 (primary_expression -> array_creation_expression .)
    TERMINATOR      reduce using rule 136 (primary_expression -> array_creation_expression .)
    RPAREN          reduce using rule 136 (primary_expression -> array_creation_expression .)
    COMMA           reduce using rule 136 (primary_expression -> array_creation_expression .)
    RBRACKET        reduce using rule 136 (primary_expression -> array_creation_expression .)
    RBRACE          reduce using rule 136 (primary_expression -> array_creation_expression .)


state 87

    (160) object_creation_expression -> NEW . type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> NEW . type LPAREN argument_list RPAREN
    (162) object_creation_expression -> NEW . type LPAREN RPAREN
    (163) object_creation_expression -> NEW . type object_or_collection_initializer
    (186) array_creation_expression -> NEW . non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> NEW . array_type array_initializer
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (34) non_array_type -> . type
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 172
    type                           shift and go to state 171
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    array_type                     shift and go to state 173
    identifier                     shift and go to state 75
    type_parameter                 shift and go to state 32

state 88

    (88) embedded_statement -> iteration_statement .

    RBRACE          reduce using rule 88 (embedded_statement -> iteration_statement .)
    TERMINATOR      reduce using rule 88 (embedded_statement -> iteration_statement .)
    LBRACE          reduce using rule 88 (embedded_statement -> iteration_statement .)
    IF              reduce using rule 88 (embedded_statement -> iteration_statement .)
    WHILE           reduce using rule 88 (embedded_statement -> iteration_statement .)
    BREAK           reduce using rule 88 (embedded_statement -> iteration_statement .)
    CONTINUE        reduce using rule 88 (embedded_statement -> iteration_statement .)
    RETURN          reduce using rule 88 (embedded_statement -> iteration_statement .)
    NEW             reduce using rule 88 (embedded_statement -> iteration_statement .)
    OBJECT          reduce using rule 88 (embedded_statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 88 (embedded_statement -> iteration_statement .)
    INT             reduce using rule 88 (embedded_statement -> iteration_statement .)
    CHAR            reduce using rule 88 (embedded_statement -> iteration_statement .)
    PLUS            reduce using rule 88 (embedded_statement -> iteration_statement .)
    MINUS           reduce using rule 88 (embedded_statement -> iteration_statement .)
    LNOT            reduce using rule 88 (embedded_statement -> iteration_statement .)
    TILDE           reduce using rule 88 (embedded_statement -> iteration_statement .)
    INTCONST        reduce using rule 88 (embedded_statement -> iteration_statement .)
    STRCONST        reduce using rule 88 (embedded_statement -> iteration_statement .)
    CHARCONST       reduce using rule 88 (embedded_statement -> iteration_statement .)
    LPAREN          reduce using rule 88 (embedded_statement -> iteration_statement .)
    TYPEOF          reduce using rule 88 (embedded_statement -> iteration_statement .)
    ELSE            reduce using rule 88 (embedded_statement -> iteration_statement .)


state 89

    (129) unary_expression -> MINUS . unary_expression
    (130) unary_expression -> MINUS . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 174
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 175

state 90

    (36) type_parameter -> predefined_type .
    (149) member_access -> predefined_type . MEMBERACCESS identifier

    IDENTIFIER      reduce using rule 36 (type_parameter -> predefined_type .)
    LBRACKET        reduce using rule 36 (type_parameter -> predefined_type .)
    MEMBERACCESS    shift and go to state 176


state 91

    (109) statement_expression -> post_decrement_expression .
    (143) primary_no_array_creation_expression -> post_decrement_expression .

    TERMINATOR      reduce using rule 109 (statement_expression -> post_decrement_expression .)
    LBRACKET        reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    LPAREN          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    INCREMENT       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    DECREMENT       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MEMBERACCESS    reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQUALS          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    PLUSEQUAL       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MINUSEQUAL      reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)


state 92

    (139) primary_no_array_creation_expression -> member_access .

    LBRACKET        reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    MEMBERACCESS    reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    INCREMENT       reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    LPAREN          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    DECREMENT       reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    EQUALS          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    PLUSEQUAL       reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    MINUSEQUAL      reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    TIMES           reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    DIVIDE          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    MOD             reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    PLUS            reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    MINUS           reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    LSHIFT          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    RSHIFT          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    LT              reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    GT              reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    LEQ             reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    GEQ             reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    EQ              reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    NE              reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    AND             reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    XOR             reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    OR              reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    CONAND          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    CONOR           reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    RPAREN          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    COMMA           reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    TERMINATOR      reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    RBRACKET        reduce using rule 139 (primary_no_array_creation_expression -> member_access .)
    RBRACE          reduce using rule 139 (primary_no_array_creation_expression -> member_access .)


state 93

    (83) statement -> embedded_statement .

    RBRACE          reduce using rule 83 (statement -> embedded_statement .)
    TERMINATOR      reduce using rule 83 (statement -> embedded_statement .)
    LBRACE          reduce using rule 83 (statement -> embedded_statement .)
    IF              reduce using rule 83 (statement -> embedded_statement .)
    WHILE           reduce using rule 83 (statement -> embedded_statement .)
    BREAK           reduce using rule 83 (statement -> embedded_statement .)
    CONTINUE        reduce using rule 83 (statement -> embedded_statement .)
    RETURN          reduce using rule 83 (statement -> embedded_statement .)
    NEW             reduce using rule 83 (statement -> embedded_statement .)
    OBJECT          reduce using rule 83 (statement -> embedded_statement .)
    IDENTIFIER      reduce using rule 83 (statement -> embedded_statement .)
    INT             reduce using rule 83 (statement -> embedded_statement .)
    CHAR            reduce using rule 83 (statement -> embedded_statement .)
    PLUS            reduce using rule 83 (statement -> embedded_statement .)
    MINUS           reduce using rule 83 (statement -> embedded_statement .)
    LNOT            reduce using rule 83 (statement -> embedded_statement .)
    TILDE           reduce using rule 83 (statement -> embedded_statement .)
    INTCONST        reduce using rule 83 (statement -> embedded_statement .)
    STRCONST        reduce using rule 83 (statement -> embedded_statement .)
    CHARCONST       reduce using rule 83 (statement -> embedded_statement .)
    LPAREN          reduce using rule 83 (statement -> embedded_statement .)
    TYPEOF          reduce using rule 83 (statement -> embedded_statement .)


state 94

    (91) embedded_statement -> return_statement .

    RBRACE          reduce using rule 91 (embedded_statement -> return_statement .)
    TERMINATOR      reduce using rule 91 (embedded_statement -> return_statement .)
    LBRACE          reduce using rule 91 (embedded_statement -> return_statement .)
    IF              reduce using rule 91 (embedded_statement -> return_statement .)
    WHILE           reduce using rule 91 (embedded_statement -> return_statement .)
    BREAK           reduce using rule 91 (embedded_statement -> return_statement .)
    CONTINUE        reduce using rule 91 (embedded_statement -> return_statement .)
    RETURN          reduce using rule 91 (embedded_statement -> return_statement .)
    NEW             reduce using rule 91 (embedded_statement -> return_statement .)
    OBJECT          reduce using rule 91 (embedded_statement -> return_statement .)
    IDENTIFIER      reduce using rule 91 (embedded_statement -> return_statement .)
    INT             reduce using rule 91 (embedded_statement -> return_statement .)
    CHAR            reduce using rule 91 (embedded_statement -> return_statement .)
    PLUS            reduce using rule 91 (embedded_statement -> return_statement .)
    MINUS           reduce using rule 91 (embedded_statement -> return_statement .)
    LNOT            reduce using rule 91 (embedded_statement -> return_statement .)
    TILDE           reduce using rule 91 (embedded_statement -> return_statement .)
    INTCONST        reduce using rule 91 (embedded_statement -> return_statement .)
    STRCONST        reduce using rule 91 (embedded_statement -> return_statement .)
    CHARCONST       reduce using rule 91 (embedded_statement -> return_statement .)
    LPAREN          reduce using rule 91 (embedded_statement -> return_statement .)
    TYPEOF          reduce using rule 91 (embedded_statement -> return_statement .)
    ELSE            reduce using rule 91 (embedded_statement -> return_statement .)


state 95

    (137) primary_no_array_creation_expression -> literal .

    LBRACKET        reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    MEMBERACCESS    reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    INCREMENT       reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    LPAREN          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    DECREMENT       reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    EQUALS          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    PLUSEQUAL       reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    MINUSEQUAL      reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    TIMES           reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    DIVIDE          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    MOD             reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    PLUS            reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    MINUS           reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    LSHIFT          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    RSHIFT          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    LT              reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    GT              reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    LEQ             reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    GEQ             reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    EQ              reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    NE              reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    AND             reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    XOR             reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    OR              reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    CONAND          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    CONOR           reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    RPAREN          reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    COMMA           reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    TERMINATOR      reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    RBRACKET        reduce using rule 137 (primary_no_array_creation_expression -> literal .)
    RBRACE          reduce using rule 137 (primary_no_array_creation_expression -> literal .)


state 96

    (90) embedded_statement -> continue_statement .

    RBRACE          reduce using rule 90 (embedded_statement -> continue_statement .)
    TERMINATOR      reduce using rule 90 (embedded_statement -> continue_statement .)
    LBRACE          reduce using rule 90 (embedded_statement -> continue_statement .)
    IF              reduce using rule 90 (embedded_statement -> continue_statement .)
    WHILE           reduce using rule 90 (embedded_statement -> continue_statement .)
    BREAK           reduce using rule 90 (embedded_statement -> continue_statement .)
    CONTINUE        reduce using rule 90 (embedded_statement -> continue_statement .)
    RETURN          reduce using rule 90 (embedded_statement -> continue_statement .)
    NEW             reduce using rule 90 (embedded_statement -> continue_statement .)
    OBJECT          reduce using rule 90 (embedded_statement -> continue_statement .)
    IDENTIFIER      reduce using rule 90 (embedded_statement -> continue_statement .)
    INT             reduce using rule 90 (embedded_statement -> continue_statement .)
    CHAR            reduce using rule 90 (embedded_statement -> continue_statement .)
    PLUS            reduce using rule 90 (embedded_statement -> continue_statement .)
    MINUS           reduce using rule 90 (embedded_statement -> continue_statement .)
    LNOT            reduce using rule 90 (embedded_statement -> continue_statement .)
    TILDE           reduce using rule 90 (embedded_statement -> continue_statement .)
    INTCONST        reduce using rule 90 (embedded_statement -> continue_statement .)
    STRCONST        reduce using rule 90 (embedded_statement -> continue_statement .)
    CHARCONST       reduce using rule 90 (embedded_statement -> continue_statement .)
    LPAREN          reduce using rule 90 (embedded_statement -> continue_statement .)
    TYPEOF          reduce using rule 90 (embedded_statement -> continue_statement .)
    ELSE            reduce using rule 90 (embedded_statement -> continue_statement .)


state 97

    (127) unary_expression -> PLUS . unary_expression
    (128) unary_expression -> PLUS . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 177
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 178

state 98

    (80) statement_list -> statement .

    RBRACE          reduce using rule 80 (statement_list -> statement .)
    TERMINATOR      reduce using rule 80 (statement_list -> statement .)
    LBRACE          reduce using rule 80 (statement_list -> statement .)
    IF              reduce using rule 80 (statement_list -> statement .)
    WHILE           reduce using rule 80 (statement_list -> statement .)
    BREAK           reduce using rule 80 (statement_list -> statement .)
    CONTINUE        reduce using rule 80 (statement_list -> statement .)
    RETURN          reduce using rule 80 (statement_list -> statement .)
    NEW             reduce using rule 80 (statement_list -> statement .)
    OBJECT          reduce using rule 80 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 80 (statement_list -> statement .)
    INT             reduce using rule 80 (statement_list -> statement .)
    CHAR            reduce using rule 80 (statement_list -> statement .)
    PLUS            reduce using rule 80 (statement_list -> statement .)
    MINUS           reduce using rule 80 (statement_list -> statement .)
    LNOT            reduce using rule 80 (statement_list -> statement .)
    TILDE           reduce using rule 80 (statement_list -> statement .)
    INTCONST        reduce using rule 80 (statement_list -> statement .)
    STRCONST        reduce using rule 80 (statement_list -> statement .)
    CHARCONST       reduce using rule 80 (statement_list -> statement .)
    LPAREN          reduce using rule 80 (statement_list -> statement .)
    TYPEOF          reduce using rule 80 (statement_list -> statement .)


state 99

    (133) unary_expression -> TILDE . unary_expression
    (134) unary_expression -> TILDE . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 179
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 180

state 100

    (86) embedded_statement -> statement_expression . TERMINATOR

    TERMINATOR      shift and go to state 181


state 101

    (107) statement_expression -> invocation_expression .
    (142) primary_no_array_creation_expression -> invocation_expression .

    TERMINATOR      reduce using rule 107 (statement_expression -> invocation_expression .)
    LBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    LPAREN          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    INCREMENT       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    DECREMENT       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MEMBERACCESS    reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    EQUALS          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    PLUSEQUAL       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MINUSEQUAL      reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)


state 102

    (99) local_variable_declaration -> type . local_variable_declarators
    (34) non_array_type -> type .
    (100) local_variable_declarators -> . local_variable_declarator
    (101) local_variable_declarators -> . local_variable_declarators COMMA local_variable_declarator
    (102) local_variable_declarator -> . identifier
    (103) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    local_variable_declarators     shift and go to state 183
    identifier                     shift and go to state 182
    local_variable_declarator      shift and go to state 184

state 103

    (87) embedded_statement -> if_statement .

    RBRACE          reduce using rule 87 (embedded_statement -> if_statement .)
    TERMINATOR      reduce using rule 87 (embedded_statement -> if_statement .)
    LBRACE          reduce using rule 87 (embedded_statement -> if_statement .)
    IF              reduce using rule 87 (embedded_statement -> if_statement .)
    WHILE           reduce using rule 87 (embedded_statement -> if_statement .)
    BREAK           reduce using rule 87 (embedded_statement -> if_statement .)
    CONTINUE        reduce using rule 87 (embedded_statement -> if_statement .)
    RETURN          reduce using rule 87 (embedded_statement -> if_statement .)
    NEW             reduce using rule 87 (embedded_statement -> if_statement .)
    OBJECT          reduce using rule 87 (embedded_statement -> if_statement .)
    IDENTIFIER      reduce using rule 87 (embedded_statement -> if_statement .)
    INT             reduce using rule 87 (embedded_statement -> if_statement .)
    CHAR            reduce using rule 87 (embedded_statement -> if_statement .)
    PLUS            reduce using rule 87 (embedded_statement -> if_statement .)
    MINUS           reduce using rule 87 (embedded_statement -> if_statement .)
    LNOT            reduce using rule 87 (embedded_statement -> if_statement .)
    TILDE           reduce using rule 87 (embedded_statement -> if_statement .)
    INTCONST        reduce using rule 87 (embedded_statement -> if_statement .)
    STRCONST        reduce using rule 87 (embedded_statement -> if_statement .)
    CHARCONST       reduce using rule 87 (embedded_statement -> if_statement .)
    LPAREN          reduce using rule 87 (embedded_statement -> if_statement .)
    TYPEOF          reduce using rule 87 (embedded_statement -> if_statement .)
    ELSE            reduce using rule 87 (embedded_statement -> if_statement .)


state 104

    (188) typeof_expression -> TYPEOF . LPAREN type RPAREN
    (189) typeof_expression -> TYPEOF . LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> TYPEOF . LPAREN VOID RPAREN

    LPAREN          shift and go to state 185


state 105

    (78) block -> LBRACE RBRACE .

    RBRACE          reduce using rule 78 (block -> LBRACE RBRACE .)
    TILDE           reduce using rule 78 (block -> LBRACE RBRACE .)
    VOID            reduce using rule 78 (block -> LBRACE RBRACE .)
    TERMINATOR      reduce using rule 78 (block -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 78 (block -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 78 (block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 78 (block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 78 (block -> LBRACE RBRACE .)
    OBJECT          reduce using rule 78 (block -> LBRACE RBRACE .)
    INT             reduce using rule 78 (block -> LBRACE RBRACE .)
    CHAR            reduce using rule 78 (block -> LBRACE RBRACE .)
    IF              reduce using rule 78 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 78 (block -> LBRACE RBRACE .)
    BREAK           reduce using rule 78 (block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 78 (block -> LBRACE RBRACE .)
    RETURN          reduce using rule 78 (block -> LBRACE RBRACE .)
    NEW             reduce using rule 78 (block -> LBRACE RBRACE .)
    PLUS            reduce using rule 78 (block -> LBRACE RBRACE .)
    MINUS           reduce using rule 78 (block -> LBRACE RBRACE .)
    LNOT            reduce using rule 78 (block -> LBRACE RBRACE .)
    INTCONST        reduce using rule 78 (block -> LBRACE RBRACE .)
    STRCONST        reduce using rule 78 (block -> LBRACE RBRACE .)
    CHARCONST       reduce using rule 78 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 78 (block -> LBRACE RBRACE .)
    TYPEOF          reduce using rule 78 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 78 (block -> LBRACE RBRACE .)


state 106

    (138) primary_no_array_creation_expression -> parenthesized_expression .

    LBRACKET        reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    MEMBERACCESS    reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    INCREMENT       reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    LPAREN          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    DECREMENT       reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    EQUALS          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    PLUSEQUAL       reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    MINUSEQUAL      reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    TIMES           reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    DIVIDE          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    MOD             reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    PLUS            reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    MINUS           reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    LSHIFT          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    RSHIFT          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    LT              reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    GT              reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    LEQ             reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    GEQ             reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    EQ              reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    NE              reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    AND             reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    XOR             reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    OR              reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    CONAND          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    CONOR           reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    RPAREN          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    COMMA           reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    TERMINATOR      reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    RBRACKET        reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)
    RBRACE          reduce using rule 138 (primary_no_array_creation_expression -> parenthesized_expression .)


state 107

    (106) statement_expression -> assignment .

    TERMINATOR      reduce using rule 106 (statement_expression -> assignment .)


state 108

    (140) primary_no_array_creation_expression -> element_access .

    LBRACKET        reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    MEMBERACCESS    reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    INCREMENT       reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    LPAREN          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    DECREMENT       reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    EQUALS          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    PLUSEQUAL       reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    MINUSEQUAL      reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    TIMES           reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    DIVIDE          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    MOD             reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    PLUS            reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    MINUS           reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    LSHIFT          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    RSHIFT          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    LT              reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    GT              reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    LEQ             reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    GEQ             reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    EQ              reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    NE              reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    AND             reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    XOR             reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    OR              reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    CONAND          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    CONOR           reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    RPAREN          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    COMMA           reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    TERMINATOR      reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    RBRACKET        reduce using rule 140 (primary_no_array_creation_expression -> element_access .)
    RBRACE          reduce using rule 140 (primary_no_array_creation_expression -> element_access .)


state 109

    (98) literal -> CHARCONST .

    LBRACKET        reduce using rule 98 (literal -> CHARCONST .)
    MEMBERACCESS    reduce using rule 98 (literal -> CHARCONST .)
    INCREMENT       reduce using rule 98 (literal -> CHARCONST .)
    LPAREN          reduce using rule 98 (literal -> CHARCONST .)
    DECREMENT       reduce using rule 98 (literal -> CHARCONST .)
    EQUALS          reduce using rule 98 (literal -> CHARCONST .)
    PLUSEQUAL       reduce using rule 98 (literal -> CHARCONST .)
    MINUSEQUAL      reduce using rule 98 (literal -> CHARCONST .)
    TIMES           reduce using rule 98 (literal -> CHARCONST .)
    DIVIDE          reduce using rule 98 (literal -> CHARCONST .)
    MOD             reduce using rule 98 (literal -> CHARCONST .)
    PLUS            reduce using rule 98 (literal -> CHARCONST .)
    MINUS           reduce using rule 98 (literal -> CHARCONST .)
    LSHIFT          reduce using rule 98 (literal -> CHARCONST .)
    RSHIFT          reduce using rule 98 (literal -> CHARCONST .)
    LT              reduce using rule 98 (literal -> CHARCONST .)
    GT              reduce using rule 98 (literal -> CHARCONST .)
    LEQ             reduce using rule 98 (literal -> CHARCONST .)
    GEQ             reduce using rule 98 (literal -> CHARCONST .)
    EQ              reduce using rule 98 (literal -> CHARCONST .)
    NE              reduce using rule 98 (literal -> CHARCONST .)
    AND             reduce using rule 98 (literal -> CHARCONST .)
    XOR             reduce using rule 98 (literal -> CHARCONST .)
    OR              reduce using rule 98 (literal -> CHARCONST .)
    CONAND          reduce using rule 98 (literal -> CHARCONST .)
    CONOR           reduce using rule 98 (literal -> CHARCONST .)
    RBRACE          reduce using rule 98 (literal -> CHARCONST .)
    COMMA           reduce using rule 98 (literal -> CHARCONST .)
    TERMINATOR      reduce using rule 98 (literal -> CHARCONST .)
    RPAREN          reduce using rule 98 (literal -> CHARCONST .)
    RBRACKET        reduce using rule 98 (literal -> CHARCONST .)


state 110

    (85) embedded_statement -> TERMINATOR .

    RBRACE          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    TERMINATOR      reduce using rule 85 (embedded_statement -> TERMINATOR .)
    LBRACE          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    IF              reduce using rule 85 (embedded_statement -> TERMINATOR .)
    WHILE           reduce using rule 85 (embedded_statement -> TERMINATOR .)
    BREAK           reduce using rule 85 (embedded_statement -> TERMINATOR .)
    CONTINUE        reduce using rule 85 (embedded_statement -> TERMINATOR .)
    RETURN          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    NEW             reduce using rule 85 (embedded_statement -> TERMINATOR .)
    OBJECT          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    IDENTIFIER      reduce using rule 85 (embedded_statement -> TERMINATOR .)
    INT             reduce using rule 85 (embedded_statement -> TERMINATOR .)
    CHAR            reduce using rule 85 (embedded_statement -> TERMINATOR .)
    PLUS            reduce using rule 85 (embedded_statement -> TERMINATOR .)
    MINUS           reduce using rule 85 (embedded_statement -> TERMINATOR .)
    LNOT            reduce using rule 85 (embedded_statement -> TERMINATOR .)
    TILDE           reduce using rule 85 (embedded_statement -> TERMINATOR .)
    INTCONST        reduce using rule 85 (embedded_statement -> TERMINATOR .)
    STRCONST        reduce using rule 85 (embedded_statement -> TERMINATOR .)
    CHARCONST       reduce using rule 85 (embedded_statement -> TERMINATOR .)
    LPAREN          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    TYPEOF          reduce using rule 85 (embedded_statement -> TERMINATOR .)
    ELSE            reduce using rule 85 (embedded_statement -> TERMINATOR .)


state 111

    (146) parenthesized_expression -> LPAREN . expression RPAREN
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 186
    conditional_and_expression     shift and go to state 161

state 112

    (135) primary_expression -> primary_no_array_creation_expression .
    (152) element_access -> primary_no_array_creation_expression . LBRACKET expression_list RBRACKET

    MEMBERACCESS    reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    INCREMENT       reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    LPAREN          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    DECREMENT       reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    EQUALS          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    PLUSEQUAL       reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    MINUSEQUAL      reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    TIMES           reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    DIVIDE          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    MOD             reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    PLUS            reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    MINUS           reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    LSHIFT          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    RSHIFT          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    LT              reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    GT              reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    LEQ             reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    GEQ             reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    EQ              reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    NE              reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    AND             reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    XOR             reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    OR              reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    CONAND          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    CONOR           reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    TERMINATOR      reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    RPAREN          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    COMMA           reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    RBRACKET        reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    RBRACE          reduce using rule 135 (primary_expression -> primary_no_array_creation_expression .)
    LBRACKET        shift and go to state 187


state 113

    (116) if_statement -> IF . LPAREN expression RPAREN embedded_statement
    (117) if_statement -> IF . LPAREN expression RPAREN embedded_statement ELSE embedded_statement

    LPAREN          shift and go to state 188


state 114

    (92) break_statement -> BREAK . TERMINATOR

    TERMINATOR      shift and go to state 189


state 115

    (145) primary_no_array_creation_expression -> typeof_expression .

    LBRACKET        reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    MEMBERACCESS    reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    INCREMENT       reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    LPAREN          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    DECREMENT       reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    EQUALS          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    PLUSEQUAL       reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    MINUSEQUAL      reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    TIMES           reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    DIVIDE          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    MOD             reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    PLUS            reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    MINUS           reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    LSHIFT          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    RSHIFT          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    LT              reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    GT              reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    LEQ             reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    GEQ             reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    EQ              reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    NE              reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    AND             reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    XOR             reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    OR              reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    CONAND          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    CONOR           reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    RPAREN          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    COMMA           reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    TERMINATOR      reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    RBRACKET        reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)
    RBRACE          reduce using rule 145 (primary_no_array_creation_expression -> typeof_expression .)


state 116

    (93) continue_statement -> CONTINUE . TERMINATOR

    TERMINATOR      shift and go to state 190


state 117

    (108) statement_expression -> post_increment_expression .
    (141) primary_no_array_creation_expression -> post_increment_expression .

    TERMINATOR      reduce using rule 108 (statement_expression -> post_increment_expression .)
    LBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    LPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    INCREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    DECREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MEMBERACCESS    reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    EQUALS          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    PLUSEQUAL       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MINUSEQUAL      reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)


state 118

    (82) statement -> local_variable_declaration . TERMINATOR

    TERMINATOR      shift and go to state 191


state 119

    (79) block -> LBRACE statement_list . RBRACE
    (81) statement_list -> statement_list . statement
    (82) statement -> . local_variable_declaration TERMINATOR
    (83) statement -> . embedded_statement
    (99) local_variable_declaration -> . type local_variable_declarators
    (84) embedded_statement -> . block
    (85) embedded_statement -> . TERMINATOR
    (86) embedded_statement -> . statement_expression TERMINATOR
    (87) embedded_statement -> . if_statement
    (88) embedded_statement -> . iteration_statement
    (89) embedded_statement -> . break_statement
    (90) embedded_statement -> . continue_statement
    (91) embedded_statement -> . return_statement
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (105) statement_expression -> . object_creation_expression
    (106) statement_expression -> . assignment
    (107) statement_expression -> . invocation_expression
    (108) statement_expression -> . post_increment_expression
    (109) statement_expression -> . post_decrement_expression
    (116) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (117) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (118) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (92) break_statement -> . BREAK TERMINATOR
    (93) continue_statement -> . CONTINUE TERMINATOR
    (94) return_statement -> . RETURN TERMINATOR
    (95) return_statement -> . RETURN expression TERMINATOR
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier

    RBRACE          shift and go to state 193
    TERMINATOR      shift and go to state 110
    LBRACE          shift and go to state 48
    IF              shift and go to state 113
    WHILE           shift and go to state 83
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 116
    RETURN          shift and go to state 77
    NEW             shift and go to state 87
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104

    object_creation_expression     shift and go to state 76
    unary_expression               shift and go to state 79
    proper_identifier              shift and go to state 80
    break_statement                shift and go to state 81
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    iteration_statement            shift and go to state 88
    type_parameter                 shift and go to state 32
    predefined_type                shift and go to state 90
    post_decrement_expression      shift and go to state 91
    member_access                  shift and go to state 92
    reference_type                 shift and go to state 27
    embedded_statement             shift and go to state 93
    return_statement               shift and go to state 94
    literal                        shift and go to state 95
    continue_statement             shift and go to state 96
    statement                      shift and go to state 192
    statement_expression           shift and go to state 100
    invocation_expression          shift and go to state 101
    if_statement                   shift and go to state 103
    type                           shift and go to state 102
    class_type                     shift and go to state 33
    non_array_type                 shift and go to state 42
    assignment                     shift and go to state 107
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 122
    array_type                     shift and go to state 46
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 117
    local_variable_declaration     shift and go to state 118
    identifier                     shift and go to state 120
    block                          shift and go to state 121

state 120

    (35) type_parameter -> identifier .
    (122) assignment -> identifier . assignment_operator expression
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_increment_expression -> identifier . INCREMENT
    (159) post_decrement_expression -> identifier . DECREMENT
    (31) prefix -> identifier . MEMBERACCESS
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

  ! shift/reduce conflict for LBRACKET resolved as shift
    IDENTIFIER      reduce using rule 35 (type_parameter -> identifier .)
    LPAREN          shift and go to state 198
    INCREMENT       shift and go to state 195
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 196
    LBRACKET        shift and go to state 194
    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

  ! LBRACKET        [ reduce using rule 35 (type_parameter -> identifier .) ]

    assignment_operator            shift and go to state 197

state 121

    (84) embedded_statement -> block .

    RBRACE          reduce using rule 84 (embedded_statement -> block .)
    TERMINATOR      reduce using rule 84 (embedded_statement -> block .)
    LBRACE          reduce using rule 84 (embedded_statement -> block .)
    IF              reduce using rule 84 (embedded_statement -> block .)
    WHILE           reduce using rule 84 (embedded_statement -> block .)
    BREAK           reduce using rule 84 (embedded_statement -> block .)
    CONTINUE        reduce using rule 84 (embedded_statement -> block .)
    RETURN          reduce using rule 84 (embedded_statement -> block .)
    NEW             reduce using rule 84 (embedded_statement -> block .)
    OBJECT          reduce using rule 84 (embedded_statement -> block .)
    IDENTIFIER      reduce using rule 84 (embedded_statement -> block .)
    INT             reduce using rule 84 (embedded_statement -> block .)
    CHAR            reduce using rule 84 (embedded_statement -> block .)
    PLUS            reduce using rule 84 (embedded_statement -> block .)
    MINUS           reduce using rule 84 (embedded_statement -> block .)
    LNOT            reduce using rule 84 (embedded_statement -> block .)
    TILDE           reduce using rule 84 (embedded_statement -> block .)
    INTCONST        reduce using rule 84 (embedded_statement -> block .)
    STRCONST        reduce using rule 84 (embedded_statement -> block .)
    CHARCONST       reduce using rule 84 (embedded_statement -> block .)
    LPAREN          reduce using rule 84 (embedded_statement -> block .)
    TYPEOF          reduce using rule 84 (embedded_statement -> block .)
    ELSE            reduce using rule 84 (embedded_statement -> block .)


state 122

    (110) invocation_expression -> primary_expression . LPAREN argument_list RPAREN
    (111) invocation_expression -> primary_expression . LPAREN RPAREN
    (156) post_increment_expression -> primary_expression . INCREMENT
    (158) post_decrement_expression -> primary_expression . DECREMENT
    (126) unary_expression -> primary_expression .
    (147) member_access -> primary_expression . MEMBERACCESS identifier

    LPAREN          shift and go to state 200
    INCREMENT       shift and go to state 202
    DECREMENT       shift and go to state 203
    EQUALS          reduce using rule 126 (unary_expression -> primary_expression .)
    PLUSEQUAL       reduce using rule 126 (unary_expression -> primary_expression .)
    MINUSEQUAL      reduce using rule 126 (unary_expression -> primary_expression .)
    MEMBERACCESS    shift and go to state 201


state 123

    (54) method_header -> VOID member_name LPAREN . fixed_parameters RPAREN
    (56) method_header -> VOID member_name LPAREN . RPAREN
    (65) fixed_parameters -> . fixed_parameter
    (66) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 204
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    fixed_parameters               shift and go to state 205
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 132
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 124

    (32) prefix -> prefix identifier MEMBERACCESS .

    IDENTIFIER      reduce using rule 32 (prefix -> prefix identifier MEMBERACCESS .)


state 125

    (75) destructor_declaration -> TILDE identifier LPAREN . RPAREN destructor_body

    RPAREN          shift and go to state 206


state 126

    (38) variable_declarators -> variable_declarators COMMA . variable_declarator
    (39) variable_declarator -> . identifier
    (40) variable_declarator -> . identifier EQUALS variable_initializer
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 208
    variable_declarator            shift and go to state 207

state 127

    (23) field_declaration -> type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    VOID            reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    TERMINATOR      reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    LBRACE          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    INT             reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 23 (field_declaration -> type variable_declarators TERMINATOR .)


state 128

    (50) method_header -> type member_name LPAREN . fixed_parameters RPAREN
    (52) method_header -> type member_name LPAREN . RPAREN
    (65) fixed_parameters -> . fixed_parameter
    (66) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 209
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    fixed_parameters               shift and go to state 210
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 132
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 129

    (40) variable_declarator -> identifier EQUALS . variable_initializer
    (41) variable_initializer -> . expression
    (42) variable_initializer -> . array_initializer
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (43) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (44) array_initializer -> . LBRACE RBRACE
    (45) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    LBRACE          shift and go to state 213
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    relational_expression          shift and go to state 142
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    variable_initializer           shift and go to state 211
    invocation_expression          shift and go to state 148
    array_initializer              shift and go to state 212
    conditional_or_expression      shift and go to state 149
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 214
    conditional_and_expression     shift and go to state 161

state 130

    (72) constructor_declarator -> identifier LPAREN RPAREN .

    TERMINATOR      reduce using rule 72 (constructor_declarator -> identifier LPAREN RPAREN .)
    LBRACE          reduce using rule 72 (constructor_declarator -> identifier LPAREN RPAREN .)


state 131

    (67) fixed_parameter -> type . identifier default_argument
    (68) fixed_parameter -> type . identifier
    (34) non_array_type -> type .
    (15) identifier -> . IDENTIFIER

    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 215

state 132

    (65) fixed_parameters -> fixed_parameter .

    RPAREN          reduce using rule 65 (fixed_parameters -> fixed_parameter .)
    COMMA           reduce using rule 65 (fixed_parameters -> fixed_parameter .)


state 133

    (71) constructor_declarator -> identifier LPAREN fixed_parameters . RPAREN
    (66) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 216
    COMMA           shift and go to state 217


state 134

    (33) array_type -> non_array_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LBRACE          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    LPAREN          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 33 (array_type -> non_array_type LBRACKET RBRACKET .)


state 135

    (55) method_header -> modifiers VOID member_name . LPAREN fixed_parameters RPAREN
    (57) method_header -> modifiers VOID member_name . LPAREN RPAREN

    LPAREN          shift and go to state 218


state 136

    (22) field_declaration -> modifiers type variable_declarators . TERMINATOR
    (38) variable_declarators -> variable_declarators . COMMA variable_declarator

    TERMINATOR      shift and go to state 219
    COMMA           shift and go to state 126


state 137

    (51) method_header -> modifiers type member_name . LPAREN fixed_parameters RPAREN
    (53) method_header -> modifiers type member_name . LPAREN RPAREN

    LPAREN          shift and go to state 220


state 138

    (144) primary_no_array_creation_expression -> object_creation_expression .

    LBRACKET        reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MEMBERACCESS    reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    INCREMENT       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    LPAREN          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    DECREMENT       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    EQUALS          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    PLUSEQUAL       reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MINUSEQUAL      reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    TIMES           reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    DIVIDE          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MOD             reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    PLUS            reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    MINUS           reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    LSHIFT          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    RSHIFT          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    LT              reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    GT              reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    LEQ             reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    GEQ             reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    EQ              reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    NE              reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    AND             reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    XOR             reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    OR              reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    CONAND          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    CONOR           reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    RPAREN          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    COMMA           reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    TERMINATOR      reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    RBRACKET        reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)
    RBRACE          reduce using rule 144 (primary_no_array_creation_expression -> object_creation_expression .)


state 139

    (121) assignment -> unary_expression . assignment_operator expression
    (220) multiplicative_expression -> unary_expression .
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

    TIMES           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    DIVIDE          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 220 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LSHIFT          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RSHIFT          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    NE              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    XOR             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    CONAND          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    CONOR           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    TERMINATOR      reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

    assignment_operator            shift and go to state 166

state 140

    (200) inclusive_or_expression -> exclusive_or_expression .
    (203) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    CONAND          reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    CONOR           reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    RPAREN          reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACKET        reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    RBRACE          reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    TERMINATOR      reduce using rule 200 (inclusive_or_expression -> exclusive_or_expression .)
    XOR             shift and go to state 221


state 141

    (114) invocation_expression -> proper_identifier . LPAREN argument_list RPAREN
    (115) invocation_expression -> proper_identifier . LPAREN RPAREN

    LPAREN          shift and go to state 167


state 142

    (206) equality_expression -> relational_expression .
    (210) relational_expression -> relational_expression . LT shift_expression
    (211) relational_expression -> relational_expression . GT shift_expression
    (212) relational_expression -> relational_expression . LEQ shift_expression
    (213) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 206 (equality_expression -> relational_expression .)
    NE              reduce using rule 206 (equality_expression -> relational_expression .)
    AND             reduce using rule 206 (equality_expression -> relational_expression .)
    XOR             reduce using rule 206 (equality_expression -> relational_expression .)
    OR              reduce using rule 206 (equality_expression -> relational_expression .)
    CONAND          reduce using rule 206 (equality_expression -> relational_expression .)
    CONOR           reduce using rule 206 (equality_expression -> relational_expression .)
    TERMINATOR      reduce using rule 206 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 206 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 206 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 206 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 206 (equality_expression -> relational_expression .)
    LT              shift and go to state 225
    GT              shift and go to state 223
    LEQ             shift and go to state 224
    GEQ             shift and go to state 222


state 143

    (186) array_creation_expression -> NEW . non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> NEW . array_type array_initializer
    (160) object_creation_expression -> NEW . type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> NEW . type LPAREN argument_list RPAREN
    (162) object_creation_expression -> NEW . type LPAREN RPAREN
    (163) object_creation_expression -> NEW . type object_or_collection_initializer
    (34) non_array_type -> . type
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 172
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    array_type                     shift and go to state 173
    identifier                     shift and go to state 75
    type                           shift and go to state 171
    type_parameter                 shift and go to state 32

state 144

    (143) primary_no_array_creation_expression -> post_decrement_expression .

    LBRACKET        reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MEMBERACCESS    reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    INCREMENT       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    LPAREN          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    DECREMENT       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQUALS          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    PLUSEQUAL       reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MINUSEQUAL      reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    TIMES           reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    DIVIDE          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MOD             reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    PLUS            reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    MINUS           reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    LSHIFT          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    RSHIFT          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    LT              reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    GT              reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    LEQ             reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    GEQ             reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    EQ              reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    NE              reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    AND             reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    XOR             reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    OR              reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    CONAND          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    CONOR           reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    RPAREN          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    COMMA           reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    TERMINATOR      reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    RBRACKET        reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)
    RBRACE          reduce using rule 143 (primary_no_array_creation_expression -> post_decrement_expression .)


state 145

    (202) exclusive_or_expression -> and_expression .
    (205) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 202 (exclusive_or_expression -> and_expression .)
    OR              reduce using rule 202 (exclusive_or_expression -> and_expression .)
    CONAND          reduce using rule 202 (exclusive_or_expression -> and_expression .)
    CONOR           reduce using rule 202 (exclusive_or_expression -> and_expression .)
    RPAREN          reduce using rule 202 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 202 (exclusive_or_expression -> and_expression .)
    TERMINATOR      reduce using rule 202 (exclusive_or_expression -> and_expression .)
    RBRACKET        reduce using rule 202 (exclusive_or_expression -> and_expression .)
    RBRACE          reduce using rule 202 (exclusive_or_expression -> and_expression .)
    AND             shift and go to state 226


state 146

    (149) member_access -> predefined_type . MEMBERACCESS identifier

    MEMBERACCESS    shift and go to state 176


state 147

    (198) conditional_and_expression -> inclusive_or_expression .
    (201) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    CONAND          reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    CONOR           reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    RBRACKET        reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    TERMINATOR      reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    RPAREN          reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    RBRACE          reduce using rule 198 (conditional_and_expression -> inclusive_or_expression .)
    OR              shift and go to state 227


state 148

    (142) primary_no_array_creation_expression -> invocation_expression .

    LBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MEMBERACCESS    reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    INCREMENT       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    LPAREN          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    DECREMENT       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    EQUALS          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    PLUSEQUAL       reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MINUSEQUAL      reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    TIMES           reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    DIVIDE          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MOD             reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    PLUS            reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    MINUS           reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    LSHIFT          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    RSHIFT          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    LT              reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    GT              reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    LEQ             reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    GEQ             reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    EQ              reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    NE              reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    AND             reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    XOR             reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    OR              reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    CONAND          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    CONOR           reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    RPAREN          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    COMMA           reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    TERMINATOR      reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    RBRACKET        reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)
    RBRACE          reduce using rule 142 (primary_no_array_creation_expression -> invocation_expression .)


state 149

    (195) conditional_expression -> conditional_or_expression .
    (197) conditional_or_expression -> conditional_or_expression . CONOR conditional_and_expression

    RBRACKET        reduce using rule 195 (conditional_expression -> conditional_or_expression .)
    COMMA           reduce using rule 195 (conditional_expression -> conditional_or_expression .)
    RBRACE          reduce using rule 195 (conditional_expression -> conditional_or_expression .)
    RPAREN          reduce using rule 195 (conditional_expression -> conditional_or_expression .)
    TERMINATOR      reduce using rule 195 (conditional_expression -> conditional_or_expression .)
    CONOR           shift and go to state 228


state 150

    (119) expression -> non_assignment_expression .

    RPAREN          reduce using rule 119 (expression -> non_assignment_expression .)
    COMMA           reduce using rule 119 (expression -> non_assignment_expression .)
    RBRACKET        reduce using rule 119 (expression -> non_assignment_expression .)
    TERMINATOR      reduce using rule 119 (expression -> non_assignment_expression .)
    RBRACE          reduce using rule 119 (expression -> non_assignment_expression .)


state 151

    (120) expression -> assignment .

    RPAREN          reduce using rule 120 (expression -> assignment .)
    COMMA           reduce using rule 120 (expression -> assignment .)
    RBRACKET        reduce using rule 120 (expression -> assignment .)
    TERMINATOR      reduce using rule 120 (expression -> assignment .)
    RBRACE          reduce using rule 120 (expression -> assignment .)


state 152

    (217) additive_expression -> multiplicative_expression .
    (222) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (223) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (224) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (225) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (226) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (227) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 217 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 217 (additive_expression -> multiplicative_expression .)
    LSHIFT          reduce using rule 217 (additive_expression -> multiplicative_expression .)
    RSHIFT          reduce using rule 217 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 217 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 217 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 217 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 217 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 217 (additive_expression -> multiplicative_expression .)
    NE              reduce using rule 217 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 217 (additive_expression -> multiplicative_expression .)
    XOR             reduce using rule 217 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 217 (additive_expression -> multiplicative_expression .)
    CONAND          reduce using rule 217 (additive_expression -> multiplicative_expression .)
    CONOR           reduce using rule 217 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 217 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 217 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 217 (additive_expression -> multiplicative_expression .)
    TERMINATOR      reduce using rule 217 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 217 (additive_expression -> multiplicative_expression .)
    TIMES           shift and go to state 230
    DIVIDE          shift and go to state 229
    MOD             shift and go to state 231


state 153

    (214) shift_expression -> additive_expression .
    (218) additive_expression -> additive_expression . PLUS multiplicative_expression
    (219) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 214 (shift_expression -> additive_expression .)
    RSHIFT          reduce using rule 214 (shift_expression -> additive_expression .)
    LT              reduce using rule 214 (shift_expression -> additive_expression .)
    GT              reduce using rule 214 (shift_expression -> additive_expression .)
    LEQ             reduce using rule 214 (shift_expression -> additive_expression .)
    GEQ             reduce using rule 214 (shift_expression -> additive_expression .)
    EQ              reduce using rule 214 (shift_expression -> additive_expression .)
    NE              reduce using rule 214 (shift_expression -> additive_expression .)
    AND             reduce using rule 214 (shift_expression -> additive_expression .)
    XOR             reduce using rule 214 (shift_expression -> additive_expression .)
    OR              reduce using rule 214 (shift_expression -> additive_expression .)
    CONAND          reduce using rule 214 (shift_expression -> additive_expression .)
    CONOR           reduce using rule 214 (shift_expression -> additive_expression .)
    RPAREN          reduce using rule 214 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 214 (shift_expression -> additive_expression .)
    TERMINATOR      reduce using rule 214 (shift_expression -> additive_expression .)
    RBRACKET        reduce using rule 214 (shift_expression -> additive_expression .)
    RBRACE          reduce using rule 214 (shift_expression -> additive_expression .)
    PLUS            shift and go to state 232
    MINUS           shift and go to state 233


state 154

    (94) return_statement -> RETURN TERMINATOR .

    RBRACE          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    TERMINATOR      reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    LBRACE          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    IF              reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    WHILE           reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    BREAK           reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    CONTINUE        reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    RETURN          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    NEW             reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    OBJECT          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    IDENTIFIER      reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    INT             reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    CHAR            reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    PLUS            reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    MINUS           reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    LNOT            reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    TILDE           reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    INTCONST        reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    STRCONST        reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    CHARCONST       reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    LPAREN          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    TYPEOF          reduce using rule 94 (return_statement -> RETURN TERMINATOR .)
    ELSE            reduce using rule 94 (return_statement -> RETURN TERMINATOR .)


state 155

    (204) and_expression -> equality_expression .
    (207) equality_expression -> equality_expression . EQ relational_expression
    (208) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 204 (and_expression -> equality_expression .)
    XOR             reduce using rule 204 (and_expression -> equality_expression .)
    OR              reduce using rule 204 (and_expression -> equality_expression .)
    CONAND          reduce using rule 204 (and_expression -> equality_expression .)
    CONOR           reduce using rule 204 (and_expression -> equality_expression .)
    RPAREN          reduce using rule 204 (and_expression -> equality_expression .)
    COMMA           reduce using rule 204 (and_expression -> equality_expression .)
    TERMINATOR      reduce using rule 204 (and_expression -> equality_expression .)
    RBRACKET        reduce using rule 204 (and_expression -> equality_expression .)
    RBRACE          reduce using rule 204 (and_expression -> equality_expression .)
    EQ              shift and go to state 234
    NE              shift and go to state 235


state 156

    (209) relational_expression -> shift_expression .
    (215) shift_expression -> shift_expression . LSHIFT additive_expression
    (216) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 209 (relational_expression -> shift_expression .)
    GT              reduce using rule 209 (relational_expression -> shift_expression .)
    LEQ             reduce using rule 209 (relational_expression -> shift_expression .)
    GEQ             reduce using rule 209 (relational_expression -> shift_expression .)
    EQ              reduce using rule 209 (relational_expression -> shift_expression .)
    NE              reduce using rule 209 (relational_expression -> shift_expression .)
    AND             reduce using rule 209 (relational_expression -> shift_expression .)
    XOR             reduce using rule 209 (relational_expression -> shift_expression .)
    OR              reduce using rule 209 (relational_expression -> shift_expression .)
    CONAND          reduce using rule 209 (relational_expression -> shift_expression .)
    CONOR           reduce using rule 209 (relational_expression -> shift_expression .)
    TERMINATOR      reduce using rule 209 (relational_expression -> shift_expression .)
    RPAREN          reduce using rule 209 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 209 (relational_expression -> shift_expression .)
    RBRACKET        reduce using rule 209 (relational_expression -> shift_expression .)
    RBRACE          reduce using rule 209 (relational_expression -> shift_expression .)
    LSHIFT          shift and go to state 237
    RSHIFT          shift and go to state 236


state 157

    (141) primary_no_array_creation_expression -> post_increment_expression .

    LBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MEMBERACCESS    reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    INCREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    LPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    DECREMENT       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    EQUALS          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    PLUSEQUAL       reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MINUSEQUAL      reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    TIMES           reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    DIVIDE          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MOD             reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    PLUS            reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    MINUS           reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    LSHIFT          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    RSHIFT          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    LT              reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    GT              reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    LEQ             reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    GEQ             reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    EQ              reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    NE              reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    AND             reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    XOR             reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    OR              reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    CONAND          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    CONOR           reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    RPAREN          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    COMMA           reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    TERMINATOR      reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    RBRACKET        reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)
    RBRACE          reduce using rule 141 (primary_no_array_creation_expression -> post_increment_expression .)


state 158

    (194) non_assignment_expression -> conditional_expression .

    TERMINATOR      reduce using rule 194 (non_assignment_expression -> conditional_expression .)
    RPAREN          reduce using rule 194 (non_assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 194 (non_assignment_expression -> conditional_expression .)
    RBRACKET        reduce using rule 194 (non_assignment_expression -> conditional_expression .)
    RBRACE          reduce using rule 194 (non_assignment_expression -> conditional_expression .)


state 159

    (122) assignment -> identifier . assignment_operator expression
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS
    (221) multiplicative_expression -> identifier .
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238
    TIMES           reduce using rule 221 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 221 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 221 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 221 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 221 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    LT              reduce using rule 221 (multiplicative_expression -> identifier .)
    GT              reduce using rule 221 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 221 (multiplicative_expression -> identifier .)
    NE              reduce using rule 221 (multiplicative_expression -> identifier .)
    AND             reduce using rule 221 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 221 (multiplicative_expression -> identifier .)
    OR              reduce using rule 221 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 221 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 221 (multiplicative_expression -> identifier .)
    TERMINATOR      reduce using rule 221 (multiplicative_expression -> identifier .)
    RPAREN          reduce using rule 221 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 221 (multiplicative_expression -> identifier .)
    RBRACKET        reduce using rule 221 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 221 (multiplicative_expression -> identifier .)
    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

    assignment_operator            shift and go to state 197

state 160

    (95) return_statement -> RETURN expression . TERMINATOR

    TERMINATOR      shift and go to state 239


state 161

    (196) conditional_or_expression -> conditional_and_expression .
    (199) conditional_and_expression -> conditional_and_expression . CONAND inclusive_or_expression

    CONOR           reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    RBRACKET        reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    COMMA           reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    RPAREN          reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    RBRACE          reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    TERMINATOR      reduce using rule 196 (conditional_or_expression -> conditional_and_expression .)
    CONAND          shift and go to state 240


state 162

    (126) unary_expression -> primary_expression .
    (147) member_access -> primary_expression . MEMBERACCESS identifier
    (156) post_increment_expression -> primary_expression . INCREMENT
    (110) invocation_expression -> primary_expression . LPAREN argument_list RPAREN
    (111) invocation_expression -> primary_expression . LPAREN RPAREN
    (158) post_decrement_expression -> primary_expression . DECREMENT

    TIMES           reduce using rule 126 (unary_expression -> primary_expression .)
    DIVIDE          reduce using rule 126 (unary_expression -> primary_expression .)
    MOD             reduce using rule 126 (unary_expression -> primary_expression .)
    PLUS            reduce using rule 126 (unary_expression -> primary_expression .)
    MINUS           reduce using rule 126 (unary_expression -> primary_expression .)
    LSHIFT          reduce using rule 126 (unary_expression -> primary_expression .)
    RSHIFT          reduce using rule 126 (unary_expression -> primary_expression .)
    LT              reduce using rule 126 (unary_expression -> primary_expression .)
    GT              reduce using rule 126 (unary_expression -> primary_expression .)
    LEQ             reduce using rule 126 (unary_expression -> primary_expression .)
    GEQ             reduce using rule 126 (unary_expression -> primary_expression .)
    EQ              reduce using rule 126 (unary_expression -> primary_expression .)
    NE              reduce using rule 126 (unary_expression -> primary_expression .)
    AND             reduce using rule 126 (unary_expression -> primary_expression .)
    XOR             reduce using rule 126 (unary_expression -> primary_expression .)
    OR              reduce using rule 126 (unary_expression -> primary_expression .)
    CONAND          reduce using rule 126 (unary_expression -> primary_expression .)
    CONOR           reduce using rule 126 (unary_expression -> primary_expression .)
    TERMINATOR      reduce using rule 126 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 126 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 126 (unary_expression -> primary_expression .)
    RBRACKET        reduce using rule 126 (unary_expression -> primary_expression .)
    RBRACE          reduce using rule 126 (unary_expression -> primary_expression .)
    EQUALS          reduce using rule 126 (unary_expression -> primary_expression .)
    PLUSEQUAL       reduce using rule 126 (unary_expression -> primary_expression .)
    MINUSEQUAL      reduce using rule 126 (unary_expression -> primary_expression .)
    MEMBERACCESS    shift and go to state 201
    INCREMENT       shift and go to state 202
    LPAREN          shift and go to state 200
    DECREMENT       shift and go to state 203


state 163

    (125) assignment_operator -> MINUSEQUAL .

    PLUS            reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    MINUS           reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    LNOT            reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    TILDE           reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    IDENTIFIER      reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    NEW             reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    INTCONST        reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    STRCONST        reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    CHARCONST       reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    LPAREN          reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    TYPEOF          reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    INT             reduce using rule 125 (assignment_operator -> MINUSEQUAL .)
    CHAR            reduce using rule 125 (assignment_operator -> MINUSEQUAL .)


state 164

    (123) assignment_operator -> EQUALS .

    PLUS            reduce using rule 123 (assignment_operator -> EQUALS .)
    MINUS           reduce using rule 123 (assignment_operator -> EQUALS .)
    LNOT            reduce using rule 123 (assignment_operator -> EQUALS .)
    TILDE           reduce using rule 123 (assignment_operator -> EQUALS .)
    IDENTIFIER      reduce using rule 123 (assignment_operator -> EQUALS .)
    NEW             reduce using rule 123 (assignment_operator -> EQUALS .)
    INTCONST        reduce using rule 123 (assignment_operator -> EQUALS .)
    STRCONST        reduce using rule 123 (assignment_operator -> EQUALS .)
    CHARCONST       reduce using rule 123 (assignment_operator -> EQUALS .)
    LPAREN          reduce using rule 123 (assignment_operator -> EQUALS .)
    TYPEOF          reduce using rule 123 (assignment_operator -> EQUALS .)
    INT             reduce using rule 123 (assignment_operator -> EQUALS .)
    CHAR            reduce using rule 123 (assignment_operator -> EQUALS .)


state 165

    (124) assignment_operator -> PLUSEQUAL .

    PLUS            reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    MINUS           reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    LNOT            reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    TILDE           reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    IDENTIFIER      reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    NEW             reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    INTCONST        reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    STRCONST        reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    CHARCONST       reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    LPAREN          reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    TYPEOF          reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    INT             reduce using rule 124 (assignment_operator -> PLUSEQUAL .)
    CHAR            reduce using rule 124 (assignment_operator -> PLUSEQUAL .)


state 166

    (121) assignment -> unary_expression assignment_operator . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 241
    conditional_and_expression     shift and go to state 161

state 167

    (114) invocation_expression -> proper_identifier LPAREN . argument_list RPAREN
    (115) invocation_expression -> proper_identifier LPAREN . RPAREN
    (164) argument_list -> . argument
    (165) argument_list -> . argument_list COMMA argument
    (166) argument -> . argument_name argument_value
    (167) argument -> . argument_value
    (168) argument_name -> . identifier COLON
    (169) argument_value -> . expression
    (15) identifier -> . IDENTIFIER
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 244
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    argument                       shift and go to state 242
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 243
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    argument_list                  shift and go to state 245
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    proper_identifier              shift and go to state 141
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    primary_no_array_creation_expression shift and go to state 112
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    argument_name                  shift and go to state 246
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 247
    expression                     shift and go to state 248
    conditional_and_expression     shift and go to state 161

state 168

    (118) iteration_statement -> WHILE LPAREN . expression RPAREN embedded_statement
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 249
    conditional_and_expression     shift and go to state 161

state 169

    (131) unary_expression -> LNOT unary_expression .

    TIMES           reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    DIVIDE          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    MOD             reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    PLUS            reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    MINUS           reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    LSHIFT          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    RSHIFT          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    LT              reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    GT              reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    LEQ             reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    GEQ             reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    EQ              reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    NE              reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    AND             reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    XOR             reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    OR              reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    CONAND          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    CONOR           reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    TERMINATOR      reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    RPAREN          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    COMMA           reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    RBRACKET        reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    RBRACE          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    EQUALS          reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    PLUSEQUAL       reduce using rule 131 (unary_expression -> LNOT unary_expression .)
    MINUSEQUAL      reduce using rule 131 (unary_expression -> LNOT unary_expression .)


state 170

    (132) unary_expression -> LNOT identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 132 (unary_expression -> LNOT identifier .)
    DIVIDE          reduce using rule 132 (unary_expression -> LNOT identifier .)
    MOD             reduce using rule 132 (unary_expression -> LNOT identifier .)
    PLUS            reduce using rule 132 (unary_expression -> LNOT identifier .)
    MINUS           reduce using rule 132 (unary_expression -> LNOT identifier .)
    LSHIFT          reduce using rule 132 (unary_expression -> LNOT identifier .)
    RSHIFT          reduce using rule 132 (unary_expression -> LNOT identifier .)
    LT              reduce using rule 132 (unary_expression -> LNOT identifier .)
    GT              reduce using rule 132 (unary_expression -> LNOT identifier .)
    LEQ             reduce using rule 132 (unary_expression -> LNOT identifier .)
    GEQ             reduce using rule 132 (unary_expression -> LNOT identifier .)
    EQ              reduce using rule 132 (unary_expression -> LNOT identifier .)
    NE              reduce using rule 132 (unary_expression -> LNOT identifier .)
    AND             reduce using rule 132 (unary_expression -> LNOT identifier .)
    XOR             reduce using rule 132 (unary_expression -> LNOT identifier .)
    OR              reduce using rule 132 (unary_expression -> LNOT identifier .)
    CONAND          reduce using rule 132 (unary_expression -> LNOT identifier .)
    CONOR           reduce using rule 132 (unary_expression -> LNOT identifier .)
    TERMINATOR      reduce using rule 132 (unary_expression -> LNOT identifier .)
    RPAREN          reduce using rule 132 (unary_expression -> LNOT identifier .)
    COMMA           reduce using rule 132 (unary_expression -> LNOT identifier .)
    RBRACKET        reduce using rule 132 (unary_expression -> LNOT identifier .)
    RBRACE          reduce using rule 132 (unary_expression -> LNOT identifier .)
    EQUALS          reduce using rule 132 (unary_expression -> LNOT identifier .)
    PLUSEQUAL       reduce using rule 132 (unary_expression -> LNOT identifier .)
    MINUSEQUAL      reduce using rule 132 (unary_expression -> LNOT identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 171

    (160) object_creation_expression -> NEW type . LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> NEW type . LPAREN argument_list RPAREN
    (162) object_creation_expression -> NEW type . LPAREN RPAREN
    (163) object_creation_expression -> NEW type . object_or_collection_initializer
    (34) non_array_type -> type .
    (170) object_or_collection_initializer -> . object_initializer
    (171) object_or_collection_initializer -> . collection_initializer
    (172) object_initializer -> . LBRACE member_initializer_list RBRACE
    (173) object_initializer -> . LBRACE RBRACE
    (174) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (180) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (181) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE

    LPAREN          shift and go to state 253
    LBRACKET        reduce using rule 34 (non_array_type -> type .)
    LBRACE          shift and go to state 252

    object_or_collection_initializer shift and go to state 250
    object_initializer             shift and go to state 251
    collection_initializer         shift and go to state 254

state 172

    (186) array_creation_expression -> NEW non_array_type . LBRACKET expression RBRACKET
    (33) array_type -> non_array_type . LBRACKET RBRACKET

    LBRACKET        shift and go to state 255


state 173

    (187) array_creation_expression -> NEW array_type . array_initializer
    (27) reference_type -> array_type .
    (43) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (44) array_initializer -> . LBRACE RBRACE
    (45) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    LPAREN          reduce using rule 27 (reference_type -> array_type .)
    LBRACKET        reduce using rule 27 (reference_type -> array_type .)
    LBRACE          shift and go to state 213

  ! LBRACE          [ reduce using rule 27 (reference_type -> array_type .) ]

    array_initializer              shift and go to state 256

state 174

    (129) unary_expression -> MINUS unary_expression .

    TIMES           reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    DIVIDE          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    MOD             reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    PLUS            reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    MINUS           reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    LSHIFT          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    RSHIFT          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    LT              reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    GT              reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    LEQ             reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    GEQ             reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    EQ              reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    NE              reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    AND             reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    XOR             reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    OR              reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    CONAND          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    CONOR           reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    TERMINATOR      reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    RPAREN          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    COMMA           reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    RBRACKET        reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    RBRACE          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    EQUALS          reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    PLUSEQUAL       reduce using rule 129 (unary_expression -> MINUS unary_expression .)
    MINUSEQUAL      reduce using rule 129 (unary_expression -> MINUS unary_expression .)


state 175

    (130) unary_expression -> MINUS identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 130 (unary_expression -> MINUS identifier .)
    DIVIDE          reduce using rule 130 (unary_expression -> MINUS identifier .)
    MOD             reduce using rule 130 (unary_expression -> MINUS identifier .)
    PLUS            reduce using rule 130 (unary_expression -> MINUS identifier .)
    MINUS           reduce using rule 130 (unary_expression -> MINUS identifier .)
    LSHIFT          reduce using rule 130 (unary_expression -> MINUS identifier .)
    RSHIFT          reduce using rule 130 (unary_expression -> MINUS identifier .)
    LT              reduce using rule 130 (unary_expression -> MINUS identifier .)
    GT              reduce using rule 130 (unary_expression -> MINUS identifier .)
    LEQ             reduce using rule 130 (unary_expression -> MINUS identifier .)
    GEQ             reduce using rule 130 (unary_expression -> MINUS identifier .)
    EQ              reduce using rule 130 (unary_expression -> MINUS identifier .)
    NE              reduce using rule 130 (unary_expression -> MINUS identifier .)
    AND             reduce using rule 130 (unary_expression -> MINUS identifier .)
    XOR             reduce using rule 130 (unary_expression -> MINUS identifier .)
    OR              reduce using rule 130 (unary_expression -> MINUS identifier .)
    CONAND          reduce using rule 130 (unary_expression -> MINUS identifier .)
    CONOR           reduce using rule 130 (unary_expression -> MINUS identifier .)
    TERMINATOR      reduce using rule 130 (unary_expression -> MINUS identifier .)
    RPAREN          reduce using rule 130 (unary_expression -> MINUS identifier .)
    COMMA           reduce using rule 130 (unary_expression -> MINUS identifier .)
    RBRACKET        reduce using rule 130 (unary_expression -> MINUS identifier .)
    RBRACE          reduce using rule 130 (unary_expression -> MINUS identifier .)
    EQUALS          reduce using rule 130 (unary_expression -> MINUS identifier .)
    PLUSEQUAL       reduce using rule 130 (unary_expression -> MINUS identifier .)
    MINUSEQUAL      reduce using rule 130 (unary_expression -> MINUS identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 176

    (149) member_access -> predefined_type MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 257

state 177

    (127) unary_expression -> PLUS unary_expression .

    TIMES           reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    DIVIDE          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    MOD             reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    PLUS            reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    MINUS           reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    LSHIFT          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    RSHIFT          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    LT              reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    GT              reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    LEQ             reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    GEQ             reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    EQ              reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    NE              reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    AND             reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    XOR             reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    OR              reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    CONAND          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    CONOR           reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    TERMINATOR      reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    RPAREN          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    COMMA           reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    RBRACKET        reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    RBRACE          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    EQUALS          reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    PLUSEQUAL       reduce using rule 127 (unary_expression -> PLUS unary_expression .)
    MINUSEQUAL      reduce using rule 127 (unary_expression -> PLUS unary_expression .)


state 178

    (128) unary_expression -> PLUS identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 128 (unary_expression -> PLUS identifier .)
    DIVIDE          reduce using rule 128 (unary_expression -> PLUS identifier .)
    MOD             reduce using rule 128 (unary_expression -> PLUS identifier .)
    PLUS            reduce using rule 128 (unary_expression -> PLUS identifier .)
    MINUS           reduce using rule 128 (unary_expression -> PLUS identifier .)
    LSHIFT          reduce using rule 128 (unary_expression -> PLUS identifier .)
    RSHIFT          reduce using rule 128 (unary_expression -> PLUS identifier .)
    LT              reduce using rule 128 (unary_expression -> PLUS identifier .)
    GT              reduce using rule 128 (unary_expression -> PLUS identifier .)
    LEQ             reduce using rule 128 (unary_expression -> PLUS identifier .)
    GEQ             reduce using rule 128 (unary_expression -> PLUS identifier .)
    EQ              reduce using rule 128 (unary_expression -> PLUS identifier .)
    NE              reduce using rule 128 (unary_expression -> PLUS identifier .)
    AND             reduce using rule 128 (unary_expression -> PLUS identifier .)
    XOR             reduce using rule 128 (unary_expression -> PLUS identifier .)
    OR              reduce using rule 128 (unary_expression -> PLUS identifier .)
    CONAND          reduce using rule 128 (unary_expression -> PLUS identifier .)
    CONOR           reduce using rule 128 (unary_expression -> PLUS identifier .)
    TERMINATOR      reduce using rule 128 (unary_expression -> PLUS identifier .)
    RPAREN          reduce using rule 128 (unary_expression -> PLUS identifier .)
    COMMA           reduce using rule 128 (unary_expression -> PLUS identifier .)
    RBRACKET        reduce using rule 128 (unary_expression -> PLUS identifier .)
    RBRACE          reduce using rule 128 (unary_expression -> PLUS identifier .)
    EQUALS          reduce using rule 128 (unary_expression -> PLUS identifier .)
    PLUSEQUAL       reduce using rule 128 (unary_expression -> PLUS identifier .)
    MINUSEQUAL      reduce using rule 128 (unary_expression -> PLUS identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 179

    (133) unary_expression -> TILDE unary_expression .

    TIMES           reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    DIVIDE          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    MOD             reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    PLUS            reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    MINUS           reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    LSHIFT          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    RSHIFT          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    LT              reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    GT              reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    LEQ             reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    GEQ             reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    EQ              reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    NE              reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    AND             reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    XOR             reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    OR              reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    CONAND          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    CONOR           reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    TERMINATOR      reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    RPAREN          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    COMMA           reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    RBRACKET        reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    RBRACE          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    EQUALS          reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    PLUSEQUAL       reduce using rule 133 (unary_expression -> TILDE unary_expression .)
    MINUSEQUAL      reduce using rule 133 (unary_expression -> TILDE unary_expression .)


state 180

    (134) unary_expression -> TILDE identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 134 (unary_expression -> TILDE identifier .)
    DIVIDE          reduce using rule 134 (unary_expression -> TILDE identifier .)
    MOD             reduce using rule 134 (unary_expression -> TILDE identifier .)
    PLUS            reduce using rule 134 (unary_expression -> TILDE identifier .)
    MINUS           reduce using rule 134 (unary_expression -> TILDE identifier .)
    LSHIFT          reduce using rule 134 (unary_expression -> TILDE identifier .)
    RSHIFT          reduce using rule 134 (unary_expression -> TILDE identifier .)
    LT              reduce using rule 134 (unary_expression -> TILDE identifier .)
    GT              reduce using rule 134 (unary_expression -> TILDE identifier .)
    LEQ             reduce using rule 134 (unary_expression -> TILDE identifier .)
    GEQ             reduce using rule 134 (unary_expression -> TILDE identifier .)
    EQ              reduce using rule 134 (unary_expression -> TILDE identifier .)
    NE              reduce using rule 134 (unary_expression -> TILDE identifier .)
    AND             reduce using rule 134 (unary_expression -> TILDE identifier .)
    XOR             reduce using rule 134 (unary_expression -> TILDE identifier .)
    OR              reduce using rule 134 (unary_expression -> TILDE identifier .)
    CONAND          reduce using rule 134 (unary_expression -> TILDE identifier .)
    CONOR           reduce using rule 134 (unary_expression -> TILDE identifier .)
    TERMINATOR      reduce using rule 134 (unary_expression -> TILDE identifier .)
    RPAREN          reduce using rule 134 (unary_expression -> TILDE identifier .)
    COMMA           reduce using rule 134 (unary_expression -> TILDE identifier .)
    RBRACKET        reduce using rule 134 (unary_expression -> TILDE identifier .)
    RBRACE          reduce using rule 134 (unary_expression -> TILDE identifier .)
    EQUALS          reduce using rule 134 (unary_expression -> TILDE identifier .)
    PLUSEQUAL       reduce using rule 134 (unary_expression -> TILDE identifier .)
    MINUSEQUAL      reduce using rule 134 (unary_expression -> TILDE identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 181

    (86) embedded_statement -> statement_expression TERMINATOR .

    RBRACE          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    TERMINATOR      reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    LBRACE          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    IF              reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    WHILE           reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    BREAK           reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    CONTINUE        reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    RETURN          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    NEW             reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    OBJECT          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    IDENTIFIER      reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    INT             reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    CHAR            reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    PLUS            reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    MINUS           reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    LNOT            reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    TILDE           reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    INTCONST        reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    STRCONST        reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    CHARCONST       reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    LPAREN          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    TYPEOF          reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)
    ELSE            reduce using rule 86 (embedded_statement -> statement_expression TERMINATOR .)


state 182

    (102) local_variable_declarator -> identifier .
    (103) local_variable_declarator -> identifier . EQUALS local_variable_initializer

    COMMA           reduce using rule 102 (local_variable_declarator -> identifier .)
    TERMINATOR      reduce using rule 102 (local_variable_declarator -> identifier .)
    EQUALS          shift and go to state 258


state 183

    (99) local_variable_declaration -> type local_variable_declarators .
    (101) local_variable_declarators -> local_variable_declarators . COMMA local_variable_declarator

    TERMINATOR      reduce using rule 99 (local_variable_declaration -> type local_variable_declarators .)
    COMMA           shift and go to state 259


state 184

    (100) local_variable_declarators -> local_variable_declarator .

    COMMA           reduce using rule 100 (local_variable_declarators -> local_variable_declarator .)
    TERMINATOR      reduce using rule 100 (local_variable_declarators -> local_variable_declarator .)


state 185

    (188) typeof_expression -> TYPEOF LPAREN . type RPAREN
    (189) typeof_expression -> TYPEOF LPAREN . unbound_type_name RPAREN
    (190) typeof_expression -> TYPEOF LPAREN . VOID RPAREN
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (191) unbound_type_name -> . iMEMAi
    (192) unbound_type_name -> . unbound_type_name MEMBERACCESS identifier
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    VOID            shift and go to state 260
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 261
    array_type                     shift and go to state 46
    identifier                     shift and go to state 264
    type                           shift and go to state 263
    unbound_type_name              shift and go to state 262
    type_parameter                 shift and go to state 32

state 186

    (146) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 265


state 187

    (152) element_access -> primary_no_array_creation_expression LBRACKET . expression_list RBRACKET
    (154) expression_list -> . expression
    (155) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    expression_list                shift and go to state 266
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 267
    conditional_and_expression     shift and go to state 161

state 188

    (116) if_statement -> IF LPAREN . expression RPAREN embedded_statement
    (117) if_statement -> IF LPAREN . expression RPAREN embedded_statement ELSE embedded_statement
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 268
    conditional_and_expression     shift and go to state 161

state 189

    (92) break_statement -> BREAK TERMINATOR .

    RBRACE          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    TERMINATOR      reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    LBRACE          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    IF              reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    WHILE           reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    BREAK           reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    CONTINUE        reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    RETURN          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    NEW             reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    OBJECT          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    IDENTIFIER      reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    INT             reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    CHAR            reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    PLUS            reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    MINUS           reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    LNOT            reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    TILDE           reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    INTCONST        reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    STRCONST        reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    CHARCONST       reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    LPAREN          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    TYPEOF          reduce using rule 92 (break_statement -> BREAK TERMINATOR .)
    ELSE            reduce using rule 92 (break_statement -> BREAK TERMINATOR .)


state 190

    (93) continue_statement -> CONTINUE TERMINATOR .

    RBRACE          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    TERMINATOR      reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    LBRACE          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    IF              reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    WHILE           reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    BREAK           reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    CONTINUE        reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    RETURN          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    NEW             reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    OBJECT          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    IDENTIFIER      reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    INT             reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    CHAR            reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    PLUS            reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    MINUS           reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    LNOT            reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    TILDE           reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    INTCONST        reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    STRCONST        reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    CHARCONST       reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    LPAREN          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    TYPEOF          reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)
    ELSE            reduce using rule 93 (continue_statement -> CONTINUE TERMINATOR .)


state 191

    (82) statement -> local_variable_declaration TERMINATOR .

    RBRACE          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    TERMINATOR      reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    LBRACE          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    IF              reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    WHILE           reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    BREAK           reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    CONTINUE        reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    RETURN          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    NEW             reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    OBJECT          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    IDENTIFIER      reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    INT             reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    CHAR            reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    PLUS            reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    MINUS           reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    LNOT            reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    TILDE           reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    INTCONST        reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    STRCONST        reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    CHARCONST       reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    LPAREN          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)
    TYPEOF          reduce using rule 82 (statement -> local_variable_declaration TERMINATOR .)


state 192

    (81) statement_list -> statement_list statement .

    RBRACE          reduce using rule 81 (statement_list -> statement_list statement .)
    TERMINATOR      reduce using rule 81 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 81 (statement_list -> statement_list statement .)
    IF              reduce using rule 81 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 81 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 81 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 81 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 81 (statement_list -> statement_list statement .)
    NEW             reduce using rule 81 (statement_list -> statement_list statement .)
    OBJECT          reduce using rule 81 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 81 (statement_list -> statement_list statement .)
    INT             reduce using rule 81 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 81 (statement_list -> statement_list statement .)
    PLUS            reduce using rule 81 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 81 (statement_list -> statement_list statement .)
    LNOT            reduce using rule 81 (statement_list -> statement_list statement .)
    TILDE           reduce using rule 81 (statement_list -> statement_list statement .)
    INTCONST        reduce using rule 81 (statement_list -> statement_list statement .)
    STRCONST        reduce using rule 81 (statement_list -> statement_list statement .)
    CHARCONST       reduce using rule 81 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 81 (statement_list -> statement_list statement .)
    TYPEOF          reduce using rule 81 (statement_list -> statement_list statement .)


state 193

    (79) block -> LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    TILDE           reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    TERMINATOR      reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    PUBLIC          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    PRIVATE         reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    OBJECT          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    NEW             reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    PLUS            reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    LNOT            reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    INTCONST        reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    STRCONST        reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    CHARCONST       reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    TYPEOF          reduce using rule 79 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 79 (block -> LBRACE statement_list RBRACE .)


state 194

    (153) element_access -> identifier LBRACKET . expression_list RBRACKET
    (154) expression_list -> . expression
    (155) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    expression_list                shift and go to state 269
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 267
    conditional_and_expression     shift and go to state 161

state 195

    (157) post_increment_expression -> identifier INCREMENT .

    LBRACKET        reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    MEMBERACCESS    reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    INCREMENT       reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    LPAREN          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    DECREMENT       reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    EQUALS          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    PLUSEQUAL       reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    MINUSEQUAL      reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    TIMES           reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    DIVIDE          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    MOD             reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    PLUS            reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    MINUS           reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    LSHIFT          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    RSHIFT          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    LT              reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    GT              reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    LEQ             reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    GEQ             reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    EQ              reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    NE              reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    AND             reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    XOR             reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    OR              reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    CONAND          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    CONOR           reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    RPAREN          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    COMMA           reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    TERMINATOR      reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    RBRACKET        reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)
    RBRACE          reduce using rule 157 (post_increment_expression -> identifier INCREMENT .)


state 196

    (31) prefix -> identifier MEMBERACCESS .
    (193) iMEMAi -> identifier MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)

  ! IDENTIFIER      [ shift and go to state 16 ]

    identifier                     shift and go to state 270

state 197

    (122) assignment -> identifier assignment_operator . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 271
    conditional_and_expression     shift and go to state 161

state 198

    (112) invocation_expression -> identifier LPAREN . RPAREN
    (113) invocation_expression -> identifier LPAREN . argument_list RPAREN
    (164) argument_list -> . argument
    (165) argument_list -> . argument_list COMMA argument
    (166) argument -> . argument_name argument_value
    (167) argument -> . argument_value
    (168) argument_name -> . identifier COLON
    (169) argument_value -> . expression
    (15) identifier -> . IDENTIFIER
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 272
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    argument                       shift and go to state 242
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 243
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    argument_list                  shift and go to state 273
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    proper_identifier              shift and go to state 141
    expression                     shift and go to state 248
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 247
    argument_name                  shift and go to state 246
    conditional_and_expression     shift and go to state 161

state 199

    (159) post_decrement_expression -> identifier DECREMENT .

    TERMINATOR      reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    LBRACKET        reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    LPAREN          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    INCREMENT       reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    DECREMENT       reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    MEMBERACCESS    reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    EQUALS          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    PLUSEQUAL       reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    MINUSEQUAL      reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    TIMES           reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    DIVIDE          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    MOD             reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    PLUS            reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    MINUS           reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    LSHIFT          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    RSHIFT          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    LT              reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    GT              reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    LEQ             reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    GEQ             reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    EQ              reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    NE              reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    AND             reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    XOR             reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    OR              reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    CONAND          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    CONOR           reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    RPAREN          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    COMMA           reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    RBRACKET        reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)
    RBRACE          reduce using rule 159 (post_decrement_expression -> identifier DECREMENT .)


state 200

    (110) invocation_expression -> primary_expression LPAREN . argument_list RPAREN
    (111) invocation_expression -> primary_expression LPAREN . RPAREN
    (164) argument_list -> . argument
    (165) argument_list -> . argument_list COMMA argument
    (166) argument -> . argument_name argument_value
    (167) argument -> . argument_value
    (168) argument_name -> . identifier COLON
    (169) argument_value -> . expression
    (15) identifier -> . IDENTIFIER
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 274
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    argument                       shift and go to state 242
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 243
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    argument_list                  shift and go to state 275
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    proper_identifier              shift and go to state 141
    argument_name                  shift and go to state 246
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 247
    expression                     shift and go to state 248
    conditional_and_expression     shift and go to state 161

state 201

    (147) member_access -> primary_expression MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 276

state 202

    (156) post_increment_expression -> primary_expression INCREMENT .

    LBRACKET        reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    MEMBERACCESS    reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    INCREMENT       reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    LPAREN          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    DECREMENT       reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    EQUALS          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    PLUSEQUAL       reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    MINUSEQUAL      reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    TIMES           reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    DIVIDE          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    MOD             reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    PLUS            reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    MINUS           reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    LSHIFT          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    RSHIFT          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    LT              reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    GT              reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    LEQ             reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    GEQ             reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    EQ              reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    NE              reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    AND             reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    XOR             reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    OR              reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    CONAND          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    CONOR           reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    RPAREN          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    COMMA           reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    TERMINATOR      reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    RBRACKET        reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)
    RBRACE          reduce using rule 156 (post_increment_expression -> primary_expression INCREMENT .)


state 203

    (158) post_decrement_expression -> primary_expression DECREMENT .

    TERMINATOR      reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    LBRACKET        reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    LPAREN          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    INCREMENT       reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    DECREMENT       reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    MEMBERACCESS    reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    EQUALS          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    PLUSEQUAL       reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    MINUSEQUAL      reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    TIMES           reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    DIVIDE          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    MOD             reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    PLUS            reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    MINUS           reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    LSHIFT          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    RSHIFT          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    LT              reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    GT              reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    LEQ             reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    GEQ             reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    EQ              reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    NE              reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    AND             reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    XOR             reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    OR              reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    CONAND          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    CONOR           reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    RPAREN          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    COMMA           reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    RBRACKET        reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)
    RBRACE          reduce using rule 158 (post_decrement_expression -> primary_expression DECREMENT .)


state 204

    (56) method_header -> VOID member_name LPAREN RPAREN .

    RBRACE          reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    TILDE           reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    VOID            reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    INT             reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)
    CHAR            reduce using rule 56 (method_header -> VOID member_name LPAREN RPAREN .)


state 205

    (54) method_header -> VOID member_name LPAREN fixed_parameters . RPAREN
    (66) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 277
    COMMA           shift and go to state 217


state 206

    (75) destructor_declaration -> TILDE identifier LPAREN RPAREN . destructor_body
    (76) destructor_body -> . block
    (77) destructor_body -> . TERMINATOR
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE

    TERMINATOR      shift and go to state 278
    LBRACE          shift and go to state 48

    block                          shift and go to state 280
    destructor_body                shift and go to state 279

state 207

    (38) variable_declarators -> variable_declarators COMMA variable_declarator .

    TERMINATOR      reduce using rule 38 (variable_declarators -> variable_declarators COMMA variable_declarator .)
    COMMA           reduce using rule 38 (variable_declarators -> variable_declarators COMMA variable_declarator .)


state 208

    (39) variable_declarator -> identifier .
    (40) variable_declarator -> identifier . EQUALS variable_initializer

    TERMINATOR      reduce using rule 39 (variable_declarator -> identifier .)
    COMMA           reduce using rule 39 (variable_declarator -> identifier .)
    EQUALS          shift and go to state 129


state 209

    (52) method_header -> type member_name LPAREN RPAREN .

    RBRACE          reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    TILDE           reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    VOID            reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    INT             reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)
    CHAR            reduce using rule 52 (method_header -> type member_name LPAREN RPAREN .)


state 210

    (50) method_header -> type member_name LPAREN fixed_parameters . RPAREN
    (66) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 281
    COMMA           shift and go to state 217


state 211

    (40) variable_declarator -> identifier EQUALS variable_initializer .

    TERMINATOR      reduce using rule 40 (variable_declarator -> identifier EQUALS variable_initializer .)
    COMMA           reduce using rule 40 (variable_declarator -> identifier EQUALS variable_initializer .)


state 212

    (42) variable_initializer -> array_initializer .

    RBRACE          reduce using rule 42 (variable_initializer -> array_initializer .)
    COMMA           reduce using rule 42 (variable_initializer -> array_initializer .)
    TERMINATOR      reduce using rule 42 (variable_initializer -> array_initializer .)


state 213

    (43) array_initializer -> LBRACE . variable_initializer_list RBRACE
    (44) array_initializer -> LBRACE . RBRACE
    (45) array_initializer -> LBRACE . variable_initializer_list COMMA RBRACE
    (46) variable_initializer_list -> . variable_initializer
    (47) variable_initializer_list -> . variable_initializer_list COMMA variable_initializer
    (41) variable_initializer -> . expression
    (42) variable_initializer -> . array_initializer
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (43) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (44) array_initializer -> . LBRACE RBRACE
    (45) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RBRACE          shift and go to state 284
    LBRACE          shift and go to state 213
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    relational_expression          shift and go to state 142
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    variable_initializer_list      shift and go to state 282
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    variable_initializer           shift and go to state 283
    invocation_expression          shift and go to state 148
    array_initializer              shift and go to state 212
    conditional_or_expression      shift and go to state 149
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 214
    conditional_and_expression     shift and go to state 161

state 214

    (41) variable_initializer -> expression .

    RBRACE          reduce using rule 41 (variable_initializer -> expression .)
    COMMA           reduce using rule 41 (variable_initializer -> expression .)
    TERMINATOR      reduce using rule 41 (variable_initializer -> expression .)


state 215

    (67) fixed_parameter -> type identifier . default_argument
    (68) fixed_parameter -> type identifier .
    (69) default_argument -> . EQUALS expression

    RPAREN          reduce using rule 68 (fixed_parameter -> type identifier .)
    COMMA           reduce using rule 68 (fixed_parameter -> type identifier .)
    EQUALS          shift and go to state 285

    default_argument               shift and go to state 286

state 216

    (71) constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .

    TERMINATOR      reduce using rule 71 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 71 (constructor_declarator -> identifier LPAREN fixed_parameters RPAREN .)


state 217

    (66) fixed_parameters -> fixed_parameters COMMA . fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 287
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 218

    (55) method_header -> modifiers VOID member_name LPAREN . fixed_parameters RPAREN
    (57) method_header -> modifiers VOID member_name LPAREN . RPAREN
    (65) fixed_parameters -> . fixed_parameter
    (66) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 288
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    fixed_parameters               shift and go to state 289
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 132
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 219

    (22) field_declaration -> modifiers type variable_declarators TERMINATOR .

    RBRACE          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    TILDE           reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    VOID            reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    TERMINATOR      reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PUBLIC          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    PRIVATE         reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    LBRACE          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    IDENTIFIER      reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    OBJECT          reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    INT             reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)
    CHAR            reduce using rule 22 (field_declaration -> modifiers type variable_declarators TERMINATOR .)


state 220

    (51) method_header -> modifiers type member_name LPAREN . fixed_parameters RPAREN
    (53) method_header -> modifiers type member_name LPAREN . RPAREN
    (65) fixed_parameters -> . fixed_parameter
    (66) fixed_parameters -> . fixed_parameters COMMA fixed_parameter
    (67) fixed_parameter -> . type identifier default_argument
    (68) fixed_parameter -> . type identifier
    (24) type -> . reference_type
    (25) type -> . type_parameter
    (26) reference_type -> . class_type
    (27) reference_type -> . array_type
    (35) type_parameter -> . identifier
    (36) type_parameter -> . predefined_type
    (28) class_type -> . proper_identifier
    (29) class_type -> . OBJECT
    (33) array_type -> . non_array_type LBRACKET RBRACKET
    (15) identifier -> . IDENTIFIER
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (34) non_array_type -> . type
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RPAREN          shift and go to state 290
    OBJECT          shift and go to state 29
    IDENTIFIER      shift and go to state 16
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    class_type                     shift and go to state 33
    predefined_type                shift and go to state 34
    non_array_type                 shift and go to state 42
    reference_type                 shift and go to state 27
    fixed_parameters               shift and go to state 291
    proper_identifier              shift and go to state 30
    prefix                         shift and go to state 31
    fixed_parameter                shift and go to state 132
    array_type                     shift and go to state 46
    identifier                     shift and go to state 75
    type                           shift and go to state 131
    type_parameter                 shift and go to state 32

state 221

    (203) exclusive_or_expression -> exclusive_or_expression XOR . and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 293
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    additive_expression            shift and go to state 153
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 222

    (213) relational_expression -> relational_expression GEQ . shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 295
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 223

    (211) relational_expression -> relational_expression GT . shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 296
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 224

    (212) relational_expression -> relational_expression LEQ . shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 297
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 225

    (210) relational_expression -> relational_expression LT . shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 298
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 226

    (205) and_expression -> and_expression AND . equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    additive_expression            shift and go to state 153
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 299
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 227

    (201) inclusive_or_expression -> inclusive_or_expression OR . exclusive_or_expression
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    exclusive_or_expression        shift and go to state 300
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    and_expression                 shift and go to state 145
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 228

    (197) conditional_or_expression -> conditional_or_expression CONOR . conditional_and_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    and_expression                 shift and go to state 145
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294
    conditional_and_expression     shift and go to state 301

state 229

    (223) multiplicative_expression -> multiplicative_expression DIVIDE . unary_expression
    (226) multiplicative_expression -> multiplicative_expression DIVIDE . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 302
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 303

state 230

    (222) multiplicative_expression -> multiplicative_expression TIMES . unary_expression
    (225) multiplicative_expression -> multiplicative_expression TIMES . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 304
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 305

state 231

    (224) multiplicative_expression -> multiplicative_expression MOD . unary_expression
    (227) multiplicative_expression -> multiplicative_expression MOD . identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 306
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 307

state 232

    (218) additive_expression -> additive_expression PLUS . multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 308
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 233

    (219) additive_expression -> additive_expression MINUS . multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 309
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 234

    (207) equality_expression -> equality_expression EQ . relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    relational_expression          shift and go to state 310
    invocation_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 235

    (208) equality_expression -> equality_expression NE . relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    relational_expression          shift and go to state 311
    invocation_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 236

    (216) shift_expression -> shift_expression RSHIFT . additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 312
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 237

    (215) shift_expression -> shift_expression LSHIFT . additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 313
    predefined_type                shift and go to state 146
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    parenthesized_expression       shift and go to state 106
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 238

    (193) iMEMAi -> identifier MEMBERACCESS . identifier
    (31) prefix -> identifier MEMBERACCESS .
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      reduce using rule 31 (prefix -> identifier MEMBERACCESS .)

  ! IDENTIFIER      [ shift and go to state 16 ]

    identifier                     shift and go to state 270

state 239

    (95) return_statement -> RETURN expression TERMINATOR .

    RBRACE          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    TERMINATOR      reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    LBRACE          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    IF              reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    WHILE           reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    BREAK           reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    CONTINUE        reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    RETURN          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    NEW             reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    OBJECT          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    IDENTIFIER      reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    INT             reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    CHAR            reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    PLUS            reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    MINUS           reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    LNOT            reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    TILDE           reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    INTCONST        reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    STRCONST        reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    CHARCONST       reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    LPAREN          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    TYPEOF          reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)
    ELSE            reduce using rule 95 (return_statement -> RETURN expression TERMINATOR .)


state 240

    (199) conditional_and_expression -> conditional_and_expression CONAND . inclusive_or_expression
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 314
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    and_expression                 shift and go to state 145
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    multiplicative_expression      shift and go to state 152
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 294

state 241

    (121) assignment -> unary_expression assignment_operator expression .

    RBRACE          reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    COMMA           reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    TERMINATOR      reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    RPAREN          reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)
    RBRACKET        reduce using rule 121 (assignment -> unary_expression assignment_operator expression .)


state 242

    (164) argument_list -> argument .

    RPAREN          reduce using rule 164 (argument_list -> argument .)
    COMMA           reduce using rule 164 (argument_list -> argument .)


state 243

    (167) argument -> argument_value .

    RPAREN          reduce using rule 167 (argument -> argument_value .)
    COMMA           reduce using rule 167 (argument -> argument_value .)


state 244

    (115) invocation_expression -> proper_identifier LPAREN RPAREN .

    LBRACKET        reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    INCREMENT       reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LPAREN          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    DECREMENT       reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    EQUALS          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    TIMES           reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MOD             reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    PLUS            reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    MINUS           reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LSHIFT          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RSHIFT          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LT              reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    GT              reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    LEQ             reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    GEQ             reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    EQ              reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    NE              reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    AND             reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    XOR             reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    OR              reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    CONAND          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    CONOR           reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    COMMA           reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    TERMINATOR      reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 115 (invocation_expression -> proper_identifier LPAREN RPAREN .)


state 245

    (114) invocation_expression -> proper_identifier LPAREN argument_list . RPAREN
    (165) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 315
    COMMA           shift and go to state 316


state 246

    (166) argument -> argument_name . argument_value
    (169) argument_value -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 317
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    expression                     shift and go to state 248
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    conditional_and_expression     shift and go to state 161

state 247

    (168) argument_name -> identifier . COLON
    (122) assignment -> identifier . assignment_operator expression
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS
    (221) multiplicative_expression -> identifier .
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

    COLON           shift and go to state 318
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238
    TIMES           reduce using rule 221 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 221 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 221 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 221 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 221 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    LT              reduce using rule 221 (multiplicative_expression -> identifier .)
    GT              reduce using rule 221 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 221 (multiplicative_expression -> identifier .)
    NE              reduce using rule 221 (multiplicative_expression -> identifier .)
    AND             reduce using rule 221 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 221 (multiplicative_expression -> identifier .)
    OR              reduce using rule 221 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 221 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 221 (multiplicative_expression -> identifier .)
    RPAREN          reduce using rule 221 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 221 (multiplicative_expression -> identifier .)
    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

    assignment_operator            shift and go to state 197

state 248

    (169) argument_value -> expression .

    RPAREN          reduce using rule 169 (argument_value -> expression .)
    COMMA           reduce using rule 169 (argument_value -> expression .)


state 249

    (118) iteration_statement -> WHILE LPAREN expression . RPAREN embedded_statement

    RPAREN          shift and go to state 319


state 250

    (163) object_creation_expression -> NEW type object_or_collection_initializer .

    LBRACKET        reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MEMBERACCESS    reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    INCREMENT       reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LPAREN          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    DECREMENT       reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    EQUALS          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    PLUSEQUAL       reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MINUSEQUAL      reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    TIMES           reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    DIVIDE          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MOD             reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    PLUS            reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    MINUS           reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LSHIFT          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RSHIFT          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LT              reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    GT              reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    LEQ             reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    GEQ             reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    EQ              reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    NE              reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    AND             reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    XOR             reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    OR              reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    CONAND          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    CONOR           reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    TERMINATOR      reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RBRACE          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    COMMA           reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RPAREN          reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)
    RBRACKET        reduce using rule 163 (object_creation_expression -> NEW type object_or_collection_initializer .)


state 251

    (170) object_or_collection_initializer -> object_initializer .

    TERMINATOR      reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    LBRACKET        reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    LPAREN          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    INCREMENT       reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    DECREMENT       reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    MEMBERACCESS    reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    EQUALS          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    PLUSEQUAL       reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    MINUSEQUAL      reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    TIMES           reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    DIVIDE          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    MOD             reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    PLUS            reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    MINUS           reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    LSHIFT          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    RSHIFT          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    LT              reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    GT              reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    LEQ             reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    GEQ             reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    EQ              reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    NE              reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    AND             reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    XOR             reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    OR              reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    CONAND          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    CONOR           reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    RPAREN          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    COMMA           reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    RBRACKET        reduce using rule 170 (object_or_collection_initializer -> object_initializer .)
    RBRACE          reduce using rule 170 (object_or_collection_initializer -> object_initializer .)


state 252

    (172) object_initializer -> LBRACE . member_initializer_list RBRACE
    (173) object_initializer -> LBRACE . RBRACE
    (174) object_initializer -> LBRACE . member_initializer_list COMMA RBRACE
    (180) collection_initializer -> LBRACE . element_initializer_list RBRACE
    (181) collection_initializer -> LBRACE . element_initializer_list COMMA RBRACE
    (175) member_initializer_list -> . member_initializer
    (176) member_initializer_list -> . member_initializer_list COMMA member_initializer
    (182) element_initializer_list -> . element_initializer
    (183) element_initializer_list -> . element_initializer_list COMMA element_initializer
    (177) member_initializer -> . identifier EQUALS initializer_value
    (184) element_initializer -> . non_assignment_expression
    (185) element_initializer -> . LBRACE expression_list RBRACE
    (15) identifier -> . IDENTIFIER
    (194) non_assignment_expression -> . conditional_expression
    (195) conditional_expression -> . conditional_or_expression
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 324
    LBRACE          shift and go to state 325
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    element_initializer            shift and go to state 320
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    member_initializer_list        shift and go to state 322
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    and_expression                 shift and go to state 145
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    exclusive_or_expression        shift and go to state 140
    relational_expression          shift and go to state 142
    element_initializer_list       shift and go to state 323
    non_assignment_expression      shift and go to state 321
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    member_initializer             shift and go to state 326
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 327
    conditional_and_expression     shift and go to state 161

state 253

    (160) object_creation_expression -> NEW type LPAREN . argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> NEW type LPAREN . argument_list RPAREN
    (162) object_creation_expression -> NEW type LPAREN . RPAREN
    (164) argument_list -> . argument
    (165) argument_list -> . argument_list COMMA argument
    (166) argument -> . argument_name argument_value
    (167) argument -> . argument_value
    (168) argument_name -> . identifier COLON
    (169) argument_value -> . expression
    (15) identifier -> . IDENTIFIER
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RPAREN          shift and go to state 328
    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    argument                       shift and go to state 242
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 243
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    argument_list                  shift and go to state 329
    invocation_expression          shift and go to state 148
    relational_expression          shift and go to state 142
    conditional_or_expression      shift and go to state 149
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    proper_identifier              shift and go to state 141
    argument_name                  shift and go to state 246
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 247
    expression                     shift and go to state 248
    conditional_and_expression     shift and go to state 161

state 254

    (171) object_or_collection_initializer -> collection_initializer .

    TERMINATOR      reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    LBRACKET        reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    LPAREN          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    INCREMENT       reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    DECREMENT       reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    MEMBERACCESS    reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    EQUALS          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    PLUSEQUAL       reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    MINUSEQUAL      reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    TIMES           reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    DIVIDE          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    MOD             reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    PLUS            reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    MINUS           reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    LSHIFT          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    RSHIFT          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    LT              reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    GT              reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    LEQ             reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    GEQ             reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    EQ              reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    NE              reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    AND             reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    XOR             reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    OR              reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    CONAND          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    CONOR           reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    RPAREN          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    COMMA           reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    RBRACKET        reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)
    RBRACE          reduce using rule 171 (object_or_collection_initializer -> collection_initializer .)


state 255

    (186) array_creation_expression -> NEW non_array_type LBRACKET . expression RBRACKET
    (33) array_type -> non_array_type LBRACKET . RBRACKET
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RBRACKET        shift and go to state 134
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 330
    conditional_and_expression     shift and go to state 161

state 256

    (187) array_creation_expression -> NEW array_type array_initializer .

    MEMBERACCESS    reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    INCREMENT       reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    LPAREN          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    DECREMENT       reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    EQUALS          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    PLUSEQUAL       reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    MINUSEQUAL      reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    TIMES           reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    DIVIDE          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    MOD             reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    PLUS            reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    MINUS           reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    LSHIFT          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    RSHIFT          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    LT              reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    GT              reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    LEQ             reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    GEQ             reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    EQ              reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    NE              reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    AND             reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    XOR             reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    OR              reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    CONAND          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    CONOR           reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    RPAREN          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    COMMA           reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    TERMINATOR      reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    RBRACKET        reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)
    RBRACE          reduce using rule 187 (array_creation_expression -> NEW array_type array_initializer .)


state 257

    (149) member_access -> predefined_type MEMBERACCESS identifier .

    LBRACKET        reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    LPAREN          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    TIMES           reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    MOD             reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    PLUS            reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    MINUS           reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    LT              reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    GT              reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    LEQ             reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    GEQ             reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    EQ              reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    NE              reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    AND             reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    XOR             reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    OR              reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    CONAND          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    CONOR           reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    RPAREN          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    COMMA           reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    RBRACE          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    EQUALS          reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    PLUSEQUAL       reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)
    MINUSEQUAL      reduce using rule 149 (member_access -> predefined_type MEMBERACCESS identifier .)


state 258

    (103) local_variable_declarator -> identifier EQUALS . local_variable_initializer
    (104) local_variable_initializer -> . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    local_variable_initializer     shift and go to state 331
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 332
    conditional_and_expression     shift and go to state 161

state 259

    (101) local_variable_declarators -> local_variable_declarators COMMA . local_variable_declarator
    (102) local_variable_declarator -> . identifier
    (103) local_variable_declarator -> . identifier EQUALS local_variable_initializer
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 182
    local_variable_declarator      shift and go to state 333

state 260

    (190) typeof_expression -> TYPEOF LPAREN VOID . RPAREN

    RPAREN          shift and go to state 334


state 261

    (191) unbound_type_name -> iMEMAi .

    RPAREN          reduce using rule 191 (unbound_type_name -> iMEMAi .)
    MEMBERACCESS    reduce using rule 191 (unbound_type_name -> iMEMAi .)


state 262

    (189) typeof_expression -> TYPEOF LPAREN unbound_type_name . RPAREN
    (192) unbound_type_name -> unbound_type_name . MEMBERACCESS identifier

    RPAREN          shift and go to state 335
    MEMBERACCESS    shift and go to state 336


state 263

    (188) typeof_expression -> TYPEOF LPAREN type . RPAREN
    (34) non_array_type -> type .

    RPAREN          shift and go to state 337
    LBRACKET        reduce using rule 34 (non_array_type -> type .)


state 264

    (35) type_parameter -> identifier .
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    RPAREN          reduce using rule 35 (type_parameter -> identifier .)
    LBRACKET        reduce using rule 35 (type_parameter -> identifier .)
    MEMBERACCESS    shift and go to state 238


state 265

    (146) parenthesized_expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    MEMBERACCESS    reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    INCREMENT       reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONAND          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    CONOR           reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    TERMINATOR      reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 146 (parenthesized_expression -> LPAREN expression RPAREN .)


state 266

    (152) element_access -> primary_no_array_creation_expression LBRACKET expression_list . RBRACKET
    (155) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 339
    COMMA           shift and go to state 338


state 267

    (154) expression_list -> expression .

    RBRACKET        reduce using rule 154 (expression_list -> expression .)
    COMMA           reduce using rule 154 (expression_list -> expression .)
    RBRACE          reduce using rule 154 (expression_list -> expression .)


state 268

    (116) if_statement -> IF LPAREN expression . RPAREN embedded_statement
    (117) if_statement -> IF LPAREN expression . RPAREN embedded_statement ELSE embedded_statement

    RPAREN          shift and go to state 340


state 269

    (153) element_access -> identifier LBRACKET expression_list . RBRACKET
    (155) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 341
    COMMA           shift and go to state 338


state 270

    (193) iMEMAi -> identifier MEMBERACCESS identifier .

    LBRACKET        reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LPAREN          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    TIMES           reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MOD             reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    PLUS            reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MINUS           reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LT              reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    GT              reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    LEQ             reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    GEQ             reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    EQ              reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    NE              reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    AND             reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    XOR             reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    OR              reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    CONAND          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    CONOR           reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RPAREN          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    COMMA           reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    RBRACE          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    EQUALS          reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    PLUSEQUAL       reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)
    MINUSEQUAL      reduce using rule 193 (iMEMAi -> identifier MEMBERACCESS identifier .)


state 271

    (122) assignment -> identifier assignment_operator expression .

    RBRACE          reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    COMMA           reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    TERMINATOR      reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    RPAREN          reduce using rule 122 (assignment -> identifier assignment_operator expression .)
    RBRACKET        reduce using rule 122 (assignment -> identifier assignment_operator expression .)


state 272

    (112) invocation_expression -> identifier LPAREN RPAREN .

    LBRACKET        reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    INCREMENT       reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    LPAREN          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    DECREMENT       reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    EQUALS          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    TIMES           reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    MOD             reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    PLUS            reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    MINUS           reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    LSHIFT          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    RSHIFT          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    LT              reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    GT              reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    LEQ             reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    GEQ             reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    EQ              reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    NE              reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    AND             reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    XOR             reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    OR              reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    CONAND          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    CONOR           reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    COMMA           reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    TERMINATOR      reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 112 (invocation_expression -> identifier LPAREN RPAREN .)


state 273

    (113) invocation_expression -> identifier LPAREN argument_list . RPAREN
    (165) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 342
    COMMA           shift and go to state 316


state 274

    (111) invocation_expression -> primary_expression LPAREN RPAREN .

    LBRACKET        reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    INCREMENT       reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LPAREN          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    DECREMENT       reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    EQUALS          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    TIMES           reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MOD             reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    PLUS            reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    MINUS           reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LSHIFT          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RSHIFT          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LT              reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    GT              reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    LEQ             reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    GEQ             reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    EQ              reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    NE              reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    AND             reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    XOR             reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    OR              reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    CONAND          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    CONOR           reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RBRACE          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    COMMA           reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    TERMINATOR      reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)
    RPAREN          reduce using rule 111 (invocation_expression -> primary_expression LPAREN RPAREN .)


state 275

    (110) invocation_expression -> primary_expression LPAREN argument_list . RPAREN
    (165) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 343
    COMMA           shift and go to state 316


state 276

    (147) member_access -> primary_expression MEMBERACCESS identifier .

    LBRACKET        reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    INCREMENT       reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    LPAREN          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    DECREMENT       reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    TIMES           reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    DIVIDE          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    MOD             reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    PLUS            reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    MINUS           reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    LSHIFT          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    RSHIFT          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    LT              reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    GT              reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    LEQ             reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    GEQ             reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    EQ              reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    NE              reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    AND             reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    XOR             reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    OR              reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    CONAND          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    CONOR           reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    TERMINATOR      reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    RPAREN          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    COMMA           reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    RBRACKET        reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    RBRACE          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    EQUALS          reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    PLUSEQUAL       reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)
    MINUSEQUAL      reduce using rule 147 (member_access -> primary_expression MEMBERACCESS identifier .)


state 277

    (54) method_header -> VOID member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 54 (method_header -> VOID member_name LPAREN fixed_parameters RPAREN .)


state 278

    (77) destructor_body -> TERMINATOR .

    RBRACE          reduce using rule 77 (destructor_body -> TERMINATOR .)
    TILDE           reduce using rule 77 (destructor_body -> TERMINATOR .)
    VOID            reduce using rule 77 (destructor_body -> TERMINATOR .)
    TERMINATOR      reduce using rule 77 (destructor_body -> TERMINATOR .)
    PUBLIC          reduce using rule 77 (destructor_body -> TERMINATOR .)
    PRIVATE         reduce using rule 77 (destructor_body -> TERMINATOR .)
    LBRACE          reduce using rule 77 (destructor_body -> TERMINATOR .)
    IDENTIFIER      reduce using rule 77 (destructor_body -> TERMINATOR .)
    OBJECT          reduce using rule 77 (destructor_body -> TERMINATOR .)
    INT             reduce using rule 77 (destructor_body -> TERMINATOR .)
    CHAR            reduce using rule 77 (destructor_body -> TERMINATOR .)


state 279

    (75) destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .

    RBRACE          reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    TILDE           reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    VOID            reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    TERMINATOR      reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PUBLIC          reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    PRIVATE         reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    LBRACE          reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    IDENTIFIER      reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    OBJECT          reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    INT             reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)
    CHAR            reduce using rule 75 (destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body .)


state 280

    (76) destructor_body -> block .

    RBRACE          reduce using rule 76 (destructor_body -> block .)
    TILDE           reduce using rule 76 (destructor_body -> block .)
    VOID            reduce using rule 76 (destructor_body -> block .)
    TERMINATOR      reduce using rule 76 (destructor_body -> block .)
    PUBLIC          reduce using rule 76 (destructor_body -> block .)
    PRIVATE         reduce using rule 76 (destructor_body -> block .)
    LBRACE          reduce using rule 76 (destructor_body -> block .)
    IDENTIFIER      reduce using rule 76 (destructor_body -> block .)
    OBJECT          reduce using rule 76 (destructor_body -> block .)
    INT             reduce using rule 76 (destructor_body -> block .)
    CHAR            reduce using rule 76 (destructor_body -> block .)


state 281

    (50) method_header -> type member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 50 (method_header -> type member_name LPAREN fixed_parameters RPAREN .)


state 282

    (43) array_initializer -> LBRACE variable_initializer_list . RBRACE
    (45) array_initializer -> LBRACE variable_initializer_list . COMMA RBRACE
    (47) variable_initializer_list -> variable_initializer_list . COMMA variable_initializer

    RBRACE          shift and go to state 345
    COMMA           shift and go to state 344


state 283

    (46) variable_initializer_list -> variable_initializer .

    RBRACE          reduce using rule 46 (variable_initializer_list -> variable_initializer .)
    COMMA           reduce using rule 46 (variable_initializer_list -> variable_initializer .)


state 284

    (44) array_initializer -> LBRACE RBRACE .

    RBRACE          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    TERMINATOR      reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    LPAREN          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    INCREMENT       reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    DECREMENT       reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    MEMBERACCESS    reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    EQUALS          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    PLUSEQUAL       reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    MINUSEQUAL      reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    TIMES           reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    MOD             reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    PLUS            reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    MINUS           reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    LSHIFT          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    RSHIFT          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    LT              reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    GT              reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    LEQ             reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    GEQ             reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    EQ              reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    NE              reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    AND             reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    XOR             reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    OR              reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    CONAND          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    CONOR           reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    RPAREN          reduce using rule 44 (array_initializer -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 44 (array_initializer -> LBRACE RBRACE .)


state 285

    (69) default_argument -> EQUALS . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 346
    conditional_and_expression     shift and go to state 161

state 286

    (67) fixed_parameter -> type identifier default_argument .

    RPAREN          reduce using rule 67 (fixed_parameter -> type identifier default_argument .)
    COMMA           reduce using rule 67 (fixed_parameter -> type identifier default_argument .)


state 287

    (66) fixed_parameters -> fixed_parameters COMMA fixed_parameter .

    RPAREN          reduce using rule 66 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)
    COMMA           reduce using rule 66 (fixed_parameters -> fixed_parameters COMMA fixed_parameter .)


state 288

    (57) method_header -> modifiers VOID member_name LPAREN RPAREN .

    RBRACE          reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    TILDE           reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    VOID            reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    INT             reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)
    CHAR            reduce using rule 57 (method_header -> modifiers VOID member_name LPAREN RPAREN .)


state 289

    (55) method_header -> modifiers VOID member_name LPAREN fixed_parameters . RPAREN
    (66) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 347
    COMMA           shift and go to state 217


state 290

    (53) method_header -> modifiers type member_name LPAREN RPAREN .

    RBRACE          reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    TILDE           reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    VOID            reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    TERMINATOR      reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    PUBLIC          reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    PRIVATE         reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    LBRACE          reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    OBJECT          reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    INT             reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)
    CHAR            reduce using rule 53 (method_header -> modifiers type member_name LPAREN RPAREN .)


state 291

    (51) method_header -> modifiers type member_name LPAREN fixed_parameters . RPAREN
    (66) fixed_parameters -> fixed_parameters . COMMA fixed_parameter

    RPAREN          shift and go to state 348
    COMMA           shift and go to state 217


state 292

    (220) multiplicative_expression -> unary_expression .

    TIMES           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    DIVIDE          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 220 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LSHIFT          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RSHIFT          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    NE              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    XOR             reduce using rule 220 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 220 (multiplicative_expression -> unary_expression .)
    CONAND          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    CONOR           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 220 (multiplicative_expression -> unary_expression .)
    TERMINATOR      reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 220 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 220 (multiplicative_expression -> unary_expression .)


state 293

    (203) exclusive_or_expression -> exclusive_or_expression XOR and_expression .
    (205) and_expression -> and_expression . AND equality_expression

    XOR             reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    OR              reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    CONAND          reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    CONOR           reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RPAREN          reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    COMMA           reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    TERMINATOR      reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACKET        reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    RBRACE          reduce using rule 203 (exclusive_or_expression -> exclusive_or_expression XOR and_expression .)
    AND             shift and go to state 226


state 294

    (221) multiplicative_expression -> identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 221 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 221 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 221 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 221 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 221 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    LT              reduce using rule 221 (multiplicative_expression -> identifier .)
    GT              reduce using rule 221 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 221 (multiplicative_expression -> identifier .)
    NE              reduce using rule 221 (multiplicative_expression -> identifier .)
    AND             reduce using rule 221 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 221 (multiplicative_expression -> identifier .)
    OR              reduce using rule 221 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 221 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 221 (multiplicative_expression -> identifier .)
    TERMINATOR      reduce using rule 221 (multiplicative_expression -> identifier .)
    RPAREN          reduce using rule 221 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 221 (multiplicative_expression -> identifier .)
    RBRACKET        reduce using rule 221 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 221 (multiplicative_expression -> identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 295

    (213) relational_expression -> relational_expression GEQ shift_expression .
    (215) shift_expression -> shift_expression . LSHIFT additive_expression
    (216) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    GT              reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    LEQ             reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    GEQ             reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    EQ              reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    NE              reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    AND             reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    XOR             reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    OR              reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    CONAND          reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    CONOR           reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    TERMINATOR      reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    RPAREN          reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    COMMA           reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    RBRACKET        reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    RBRACE          reduce using rule 213 (relational_expression -> relational_expression GEQ shift_expression .)
    LSHIFT          shift and go to state 237
    RSHIFT          shift and go to state 236


state 296

    (211) relational_expression -> relational_expression GT shift_expression .
    (215) shift_expression -> shift_expression . LSHIFT additive_expression
    (216) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    GT              reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    LEQ             reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    GEQ             reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    EQ              reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    NE              reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    AND             reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    XOR             reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    OR              reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    CONAND          reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    CONOR           reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    TERMINATOR      reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    RPAREN          reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    COMMA           reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    RBRACKET        reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    RBRACE          reduce using rule 211 (relational_expression -> relational_expression GT shift_expression .)
    LSHIFT          shift and go to state 237
    RSHIFT          shift and go to state 236


state 297

    (212) relational_expression -> relational_expression LEQ shift_expression .
    (215) shift_expression -> shift_expression . LSHIFT additive_expression
    (216) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    GT              reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    LEQ             reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    GEQ             reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    EQ              reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    NE              reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    AND             reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    XOR             reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    OR              reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    CONAND          reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    CONOR           reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    TERMINATOR      reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    RPAREN          reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    COMMA           reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    RBRACKET        reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    RBRACE          reduce using rule 212 (relational_expression -> relational_expression LEQ shift_expression .)
    LSHIFT          shift and go to state 237
    RSHIFT          shift and go to state 236


state 298

    (210) relational_expression -> relational_expression LT shift_expression .
    (215) shift_expression -> shift_expression . LSHIFT additive_expression
    (216) shift_expression -> shift_expression . RSHIFT additive_expression

    LT              reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    GT              reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    LEQ             reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    GEQ             reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    EQ              reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    NE              reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    AND             reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    XOR             reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    OR              reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    CONAND          reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    CONOR           reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    TERMINATOR      reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    RPAREN          reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    COMMA           reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    RBRACKET        reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    RBRACE          reduce using rule 210 (relational_expression -> relational_expression LT shift_expression .)
    LSHIFT          shift and go to state 237
    RSHIFT          shift and go to state 236


state 299

    (205) and_expression -> and_expression AND equality_expression .
    (207) equality_expression -> equality_expression . EQ relational_expression
    (208) equality_expression -> equality_expression . NE relational_expression

    AND             reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    XOR             reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    OR              reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    CONAND          reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    CONOR           reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    RPAREN          reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    COMMA           reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    TERMINATOR      reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    RBRACKET        reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    RBRACE          reduce using rule 205 (and_expression -> and_expression AND equality_expression .)
    EQ              shift and go to state 234
    NE              shift and go to state 235


state 300

    (201) inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .
    (203) exclusive_or_expression -> exclusive_or_expression . XOR and_expression

    OR              reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    CONAND          reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    CONOR           reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RPAREN          reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    COMMA           reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACKET        reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    RBRACE          reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    TERMINATOR      reduce using rule 201 (inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression .)
    XOR             shift and go to state 221


state 301

    (197) conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .
    (199) conditional_and_expression -> conditional_and_expression . CONAND inclusive_or_expression

    CONOR           reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RBRACKET        reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    COMMA           reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RPAREN          reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    RBRACE          reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    TERMINATOR      reduce using rule 197 (conditional_or_expression -> conditional_or_expression CONOR conditional_and_expression .)
    CONAND          shift and go to state 240


state 302

    (223) multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .

    TIMES           reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    DIVIDE          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    MOD             reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    PLUS            reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    MINUS           reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LSHIFT          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RSHIFT          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LT              reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GT              reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LEQ             reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GEQ             reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    EQ              reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    NE              reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    AND             reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    XOR             reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    OR              reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    CONAND          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    CONOR           reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    TERMINATOR      reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RPAREN          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    COMMA           reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RBRACE          reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RBRACKET        reduce using rule 223 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)


state 303

    (226) multiplicative_expression -> multiplicative_expression DIVIDE identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    DIVIDE          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    MOD             reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    PLUS            reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    MINUS           reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LSHIFT          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RSHIFT          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LT              reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    GT              reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LEQ             reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    GEQ             reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    EQ              reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    NE              reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    AND             reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    XOR             reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    OR              reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    CONAND          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    CONOR           reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    TERMINATOR      reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RPAREN          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    COMMA           reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RBRACE          reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    RBRACKET        reduce using rule 226 (multiplicative_expression -> multiplicative_expression DIVIDE identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 304

    (222) multiplicative_expression -> multiplicative_expression TIMES unary_expression .

    TIMES           reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    DIVIDE          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    MOD             reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    PLUS            reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    MINUS           reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LSHIFT          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RSHIFT          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LT              reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GT              reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LEQ             reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GEQ             reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    EQ              reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    NE              reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    AND             reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    XOR             reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    OR              reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    CONAND          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    CONOR           reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    TERMINATOR      reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RPAREN          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    COMMA           reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RBRACE          reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RBRACKET        reduce using rule 222 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)


state 305

    (225) multiplicative_expression -> multiplicative_expression TIMES identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    DIVIDE          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    MOD             reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    PLUS            reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    MINUS           reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LSHIFT          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RSHIFT          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LT              reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    GT              reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LEQ             reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    GEQ             reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    EQ              reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    NE              reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    AND             reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    XOR             reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    OR              reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    CONAND          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    CONOR           reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    TERMINATOR      reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RPAREN          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    COMMA           reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RBRACE          reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    RBRACKET        reduce using rule 225 (multiplicative_expression -> multiplicative_expression TIMES identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 306

    (224) multiplicative_expression -> multiplicative_expression MOD unary_expression .

    TIMES           reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    DIVIDE          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MOD             reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    PLUS            reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MINUS           reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LSHIFT          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RSHIFT          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LT              reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GT              reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LEQ             reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GEQ             reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    EQ              reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    NE              reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    AND             reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    XOR             reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    OR              reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    CONAND          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    CONOR           reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    TERMINATOR      reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RPAREN          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COMMA           reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACE          reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACKET        reduce using rule 224 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)


state 307

    (227) multiplicative_expression -> multiplicative_expression MOD identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    TIMES           reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    DIVIDE          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    MOD             reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    PLUS            reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    MINUS           reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LSHIFT          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RSHIFT          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LT              reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    GT              reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LEQ             reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    GEQ             reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    EQ              reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    NE              reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    AND             reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    XOR             reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    OR              reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    CONAND          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    CONOR           reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    TERMINATOR      reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RPAREN          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    COMMA           reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RBRACE          reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    RBRACKET        reduce using rule 227 (multiplicative_expression -> multiplicative_expression MOD identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 308

    (218) additive_expression -> additive_expression PLUS multiplicative_expression .
    (222) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (223) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (224) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (225) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (226) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (227) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LSHIFT          reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RSHIFT          reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NE              reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    XOR             reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CONAND          reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CONOR           reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TERMINATOR      reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 218 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TIMES           shift and go to state 230
    DIVIDE          shift and go to state 229
    MOD             shift and go to state 231


state 309

    (219) additive_expression -> additive_expression MINUS multiplicative_expression .
    (222) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (223) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression
    (224) multiplicative_expression -> multiplicative_expression . MOD unary_expression
    (225) multiplicative_expression -> multiplicative_expression . TIMES identifier
    (226) multiplicative_expression -> multiplicative_expression . DIVIDE identifier
    (227) multiplicative_expression -> multiplicative_expression . MOD identifier

    PLUS            reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LSHIFT          reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RSHIFT          reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NE              reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    XOR             reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CONAND          reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CONOR           reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TERMINATOR      reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 219 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TIMES           shift and go to state 230
    DIVIDE          shift and go to state 229
    MOD             shift and go to state 231


state 310

    (207) equality_expression -> equality_expression EQ relational_expression .
    (210) relational_expression -> relational_expression . LT shift_expression
    (211) relational_expression -> relational_expression . GT shift_expression
    (212) relational_expression -> relational_expression . LEQ shift_expression
    (213) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    NE              reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    XOR             reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    CONAND          reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    CONOR           reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    TERMINATOR      reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 207 (equality_expression -> equality_expression EQ relational_expression .)
    LT              shift and go to state 225
    GT              shift and go to state 223
    LEQ             shift and go to state 224
    GEQ             shift and go to state 222


state 311

    (208) equality_expression -> equality_expression NE relational_expression .
    (210) relational_expression -> relational_expression . LT shift_expression
    (211) relational_expression -> relational_expression . GT shift_expression
    (212) relational_expression -> relational_expression . LEQ shift_expression
    (213) relational_expression -> relational_expression . GEQ shift_expression

    EQ              reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    NE              reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    AND             reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    XOR             reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    OR              reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    CONAND          reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    CONOR           reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    TERMINATOR      reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    RBRACKET        reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    COMMA           reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    RBRACE          reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    RPAREN          reduce using rule 208 (equality_expression -> equality_expression NE relational_expression .)
    LT              shift and go to state 225
    GT              shift and go to state 223
    LEQ             shift and go to state 224
    GEQ             shift and go to state 222


state 312

    (216) shift_expression -> shift_expression RSHIFT additive_expression .
    (218) additive_expression -> additive_expression . PLUS multiplicative_expression
    (219) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RSHIFT          reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LT              reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GT              reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    LEQ             reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    GEQ             reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    EQ              reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    NE              reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    AND             reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    XOR             reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    OR              reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    CONAND          reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    CONOR           reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RPAREN          reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    COMMA           reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    TERMINATOR      reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACKET        reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    RBRACE          reduce using rule 216 (shift_expression -> shift_expression RSHIFT additive_expression .)
    PLUS            shift and go to state 232
    MINUS           shift and go to state 233


state 313

    (215) shift_expression -> shift_expression LSHIFT additive_expression .
    (218) additive_expression -> additive_expression . PLUS multiplicative_expression
    (219) additive_expression -> additive_expression . MINUS multiplicative_expression

    LSHIFT          reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RSHIFT          reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LT              reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GT              reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    LEQ             reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    GEQ             reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    EQ              reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    NE              reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    AND             reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    XOR             reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    OR              reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    CONAND          reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    CONOR           reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RPAREN          reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    COMMA           reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    TERMINATOR      reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACKET        reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    RBRACE          reduce using rule 215 (shift_expression -> shift_expression LSHIFT additive_expression .)
    PLUS            shift and go to state 232
    MINUS           shift and go to state 233


state 314

    (199) conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .
    (201) inclusive_or_expression -> inclusive_or_expression . OR exclusive_or_expression

    CONAND          reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    CONOR           reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RBRACKET        reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    COMMA           reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    TERMINATOR      reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RPAREN          reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    RBRACE          reduce using rule 199 (conditional_and_expression -> conditional_and_expression CONAND inclusive_or_expression .)
    OR              shift and go to state 227


state 315

    (114) invocation_expression -> proper_identifier LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    PLUSEQUAL       reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MINUSEQUAL      reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MOD             reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LT              reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    GT              reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    EQ              reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    NE              reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    AND             reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    XOR             reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    OR              reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 114 (invocation_expression -> proper_identifier LPAREN argument_list RPAREN .)


state 316

    (165) argument_list -> argument_list COMMA . argument
    (166) argument -> . argument_name argument_value
    (167) argument -> . argument_value
    (168) argument_name -> . identifier COLON
    (169) argument_value -> . expression
    (15) identifier -> . IDENTIFIER
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    IDENTIFIER      shift and go to state 16
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    argument                       shift and go to state 349
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    argument_value                 shift and go to state 243
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    proper_identifier              shift and go to state 141
    expression                     shift and go to state 248
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 247
    argument_name                  shift and go to state 246
    conditional_and_expression     shift and go to state 161

state 317

    (166) argument -> argument_name argument_value .

    RPAREN          reduce using rule 166 (argument -> argument_name argument_value .)
    COMMA           reduce using rule 166 (argument -> argument_name argument_value .)


state 318

    (168) argument_name -> identifier COLON .

    PLUS            reduce using rule 168 (argument_name -> identifier COLON .)
    MINUS           reduce using rule 168 (argument_name -> identifier COLON .)
    LNOT            reduce using rule 168 (argument_name -> identifier COLON .)
    TILDE           reduce using rule 168 (argument_name -> identifier COLON .)
    IDENTIFIER      reduce using rule 168 (argument_name -> identifier COLON .)
    NEW             reduce using rule 168 (argument_name -> identifier COLON .)
    INTCONST        reduce using rule 168 (argument_name -> identifier COLON .)
    STRCONST        reduce using rule 168 (argument_name -> identifier COLON .)
    CHARCONST       reduce using rule 168 (argument_name -> identifier COLON .)
    LPAREN          reduce using rule 168 (argument_name -> identifier COLON .)
    TYPEOF          reduce using rule 168 (argument_name -> identifier COLON .)
    INT             reduce using rule 168 (argument_name -> identifier COLON .)
    CHAR            reduce using rule 168 (argument_name -> identifier COLON .)


state 319

    (118) iteration_statement -> WHILE LPAREN expression RPAREN . embedded_statement
    (84) embedded_statement -> . block
    (85) embedded_statement -> . TERMINATOR
    (86) embedded_statement -> . statement_expression TERMINATOR
    (87) embedded_statement -> . if_statement
    (88) embedded_statement -> . iteration_statement
    (89) embedded_statement -> . break_statement
    (90) embedded_statement -> . continue_statement
    (91) embedded_statement -> . return_statement
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (105) statement_expression -> . object_creation_expression
    (106) statement_expression -> . assignment
    (107) statement_expression -> . invocation_expression
    (108) statement_expression -> . post_increment_expression
    (109) statement_expression -> . post_decrement_expression
    (116) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (117) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (118) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (92) break_statement -> . BREAK TERMINATOR
    (93) continue_statement -> . CONTINUE TERMINATOR
    (94) return_statement -> . RETURN TERMINATOR
    (95) return_statement -> . RETURN expression TERMINATOR
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 110
    LBRACE          shift and go to state 48
    IF              shift and go to state 113
    WHILE           shift and go to state 83
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 116
    RETURN          shift and go to state 77
    NEW             shift and go to state 87
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 76
    unary_expression               shift and go to state 79
    proper_identifier              shift and go to state 141
    break_statement                shift and go to state 81
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 91
    predefined_type                shift and go to state 146
    iteration_statement            shift and go to state 88
    member_access                  shift and go to state 92
    embedded_statement             shift and go to state 350
    return_statement               shift and go to state 94
    literal                        shift and go to state 95
    continue_statement             shift and go to state 96
    statement_expression           shift and go to state 100
    invocation_expression          shift and go to state 101
    if_statement                   shift and go to state 103
    assignment                     shift and go to state 107
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 122
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 117
    element_access                 shift and go to state 108
    identifier                     shift and go to state 351
    block                          shift and go to state 121

state 320

    (182) element_initializer_list -> element_initializer .

    RBRACE          reduce using rule 182 (element_initializer_list -> element_initializer .)
    COMMA           reduce using rule 182 (element_initializer_list -> element_initializer .)


state 321

    (184) element_initializer -> non_assignment_expression .

    RBRACE          reduce using rule 184 (element_initializer -> non_assignment_expression .)
    COMMA           reduce using rule 184 (element_initializer -> non_assignment_expression .)


state 322

    (172) object_initializer -> LBRACE member_initializer_list . RBRACE
    (174) object_initializer -> LBRACE member_initializer_list . COMMA RBRACE
    (176) member_initializer_list -> member_initializer_list . COMMA member_initializer

    RBRACE          shift and go to state 353
    COMMA           shift and go to state 352


state 323

    (180) collection_initializer -> LBRACE element_initializer_list . RBRACE
    (181) collection_initializer -> LBRACE element_initializer_list . COMMA RBRACE
    (183) element_initializer_list -> element_initializer_list . COMMA element_initializer

    RBRACE          shift and go to state 355
    COMMA           shift and go to state 354


state 324

    (173) object_initializer -> LBRACE RBRACE .

    TERMINATOR      reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    LPAREN          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    INCREMENT       reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    DECREMENT       reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    MEMBERACCESS    reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    EQUALS          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    PLUSEQUAL       reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    MINUSEQUAL      reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    TIMES           reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    MOD             reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    PLUS            reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    MINUS           reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    LSHIFT          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    RSHIFT          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    LT              reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    GT              reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    LEQ             reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    GEQ             reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    EQ              reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    NE              reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    AND             reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    XOR             reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    OR              reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    CONAND          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    CONOR           reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    RPAREN          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 173 (object_initializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 173 (object_initializer -> LBRACE RBRACE .)


state 325

    (185) element_initializer -> LBRACE . expression_list RBRACE
    (154) expression_list -> . expression
    (155) expression_list -> . expression_list COMMA expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    expression_list                shift and go to state 356
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 267
    conditional_and_expression     shift and go to state 161

state 326

    (175) member_initializer_list -> member_initializer .

    RBRACE          reduce using rule 175 (member_initializer_list -> member_initializer .)
    COMMA           reduce using rule 175 (member_initializer_list -> member_initializer .)


state 327

    (177) member_initializer -> identifier . EQUALS initializer_value
    (221) multiplicative_expression -> identifier .
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (157) post_increment_expression -> identifier . INCREMENT
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (159) post_decrement_expression -> identifier . DECREMENT
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (31) prefix -> identifier . MEMBERACCESS

    EQUALS          shift and go to state 357
    TIMES           reduce using rule 221 (multiplicative_expression -> identifier .)
    DIVIDE          reduce using rule 221 (multiplicative_expression -> identifier .)
    MOD             reduce using rule 221 (multiplicative_expression -> identifier .)
    PLUS            reduce using rule 221 (multiplicative_expression -> identifier .)
    MINUS           reduce using rule 221 (multiplicative_expression -> identifier .)
    LSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    RSHIFT          reduce using rule 221 (multiplicative_expression -> identifier .)
    LT              reduce using rule 221 (multiplicative_expression -> identifier .)
    GT              reduce using rule 221 (multiplicative_expression -> identifier .)
    LEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    GEQ             reduce using rule 221 (multiplicative_expression -> identifier .)
    EQ              reduce using rule 221 (multiplicative_expression -> identifier .)
    NE              reduce using rule 221 (multiplicative_expression -> identifier .)
    AND             reduce using rule 221 (multiplicative_expression -> identifier .)
    XOR             reduce using rule 221 (multiplicative_expression -> identifier .)
    OR              reduce using rule 221 (multiplicative_expression -> identifier .)
    CONAND          reduce using rule 221 (multiplicative_expression -> identifier .)
    CONOR           reduce using rule 221 (multiplicative_expression -> identifier .)
    RBRACE          reduce using rule 221 (multiplicative_expression -> identifier .)
    COMMA           reduce using rule 221 (multiplicative_expression -> identifier .)
    LBRACKET        shift and go to state 194
    INCREMENT       shift and go to state 195
    LPAREN          shift and go to state 198
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 238


state 328

    (162) object_creation_expression -> NEW type LPAREN RPAREN .

    LBRACKET        reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MEMBERACCESS    reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    INCREMENT       reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LPAREN          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    DECREMENT       reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    EQUALS          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    TIMES           reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    DIVIDE          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MOD             reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    PLUS            reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    MINUS           reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LSHIFT          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RSHIFT          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LT              reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    GT              reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    LEQ             reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    GEQ             reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    EQ              reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    NE              reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    AND             reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    XOR             reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    OR              reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    CONAND          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    CONOR           reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    TERMINATOR      reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RBRACE          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    COMMA           reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RPAREN          reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)
    RBRACKET        reduce using rule 162 (object_creation_expression -> NEW type LPAREN RPAREN .)


state 329

    (160) object_creation_expression -> NEW type LPAREN argument_list . RPAREN object_or_collection_initializer
    (161) object_creation_expression -> NEW type LPAREN argument_list . RPAREN
    (165) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 358
    COMMA           shift and go to state 316


state 330

    (186) array_creation_expression -> NEW non_array_type LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 359


state 331

    (103) local_variable_declarator -> identifier EQUALS local_variable_initializer .

    COMMA           reduce using rule 103 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)
    TERMINATOR      reduce using rule 103 (local_variable_declarator -> identifier EQUALS local_variable_initializer .)


state 332

    (104) local_variable_initializer -> expression .

    COMMA           reduce using rule 104 (local_variable_initializer -> expression .)
    TERMINATOR      reduce using rule 104 (local_variable_initializer -> expression .)


state 333

    (101) local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .

    COMMA           reduce using rule 101 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)
    TERMINATOR      reduce using rule 101 (local_variable_declarators -> local_variable_declarators COMMA local_variable_declarator .)


state 334

    (190) typeof_expression -> TYPEOF LPAREN VOID RPAREN .

    LBRACKET        reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MEMBERACCESS    reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    INCREMENT       reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LPAREN          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    DECREMENT       reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    EQUALS          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    PLUSEQUAL       reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MINUSEQUAL      reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    TIMES           reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    DIVIDE          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MOD             reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    PLUS            reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    MINUS           reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LSHIFT          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RSHIFT          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LT              reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    GT              reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    LEQ             reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    GEQ             reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    EQ              reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    NE              reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    AND             reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    XOR             reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    OR              reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    CONAND          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    CONOR           reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RBRACE          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    COMMA           reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    TERMINATOR      reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RPAREN          reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)
    RBRACKET        reduce using rule 190 (typeof_expression -> TYPEOF LPAREN VOID RPAREN .)


state 335

    (189) typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .

    LBRACKET        reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MEMBERACCESS    reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    INCREMENT       reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LPAREN          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    DECREMENT       reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    EQUALS          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    PLUSEQUAL       reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MINUSEQUAL      reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    TIMES           reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    DIVIDE          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MOD             reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    PLUS            reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    MINUS           reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LSHIFT          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RSHIFT          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LT              reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    GT              reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    LEQ             reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    GEQ             reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    EQ              reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    NE              reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    AND             reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    XOR             reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    OR              reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    CONAND          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    CONOR           reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RBRACE          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    COMMA           reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    TERMINATOR      reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RPAREN          reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)
    RBRACKET        reduce using rule 189 (typeof_expression -> TYPEOF LPAREN unbound_type_name RPAREN .)


state 336

    (192) unbound_type_name -> unbound_type_name MEMBERACCESS . identifier
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 360

state 337

    (188) typeof_expression -> TYPEOF LPAREN type RPAREN .

    LBRACKET        reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MEMBERACCESS    reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    INCREMENT       reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LPAREN          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    DECREMENT       reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    EQUALS          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    PLUSEQUAL       reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MINUSEQUAL      reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    TIMES           reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    DIVIDE          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MOD             reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LSHIFT          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RSHIFT          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LT              reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    GT              reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    LEQ             reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    GEQ             reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    EQ              reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    NE              reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    AND             reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    XOR             reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    OR              reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    CONAND          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    CONOR           reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    TERMINATOR      reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)
    RBRACKET        reduce using rule 188 (typeof_expression -> TYPEOF LPAREN type RPAREN .)


state 338

    (155) expression_list -> expression_list COMMA . expression
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 361
    conditional_and_expression     shift and go to state 161

state 339

    (152) element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .

    LBRACKET        reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MEMBERACCESS    reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    INCREMENT       reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    DECREMENT       reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LSHIFT          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RSHIFT          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LT              reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    GT              reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    LEQ             reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    GEQ             reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    NE              reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    CONAND          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    CONOR           reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    TERMINATOR      reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    PLUSEQUAL       reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)
    MINUSEQUAL      reduce using rule 152 (element_access -> primary_no_array_creation_expression LBRACKET expression_list RBRACKET .)


state 340

    (116) if_statement -> IF LPAREN expression RPAREN . embedded_statement
    (117) if_statement -> IF LPAREN expression RPAREN . embedded_statement ELSE embedded_statement
    (84) embedded_statement -> . block
    (85) embedded_statement -> . TERMINATOR
    (86) embedded_statement -> . statement_expression TERMINATOR
    (87) embedded_statement -> . if_statement
    (88) embedded_statement -> . iteration_statement
    (89) embedded_statement -> . break_statement
    (90) embedded_statement -> . continue_statement
    (91) embedded_statement -> . return_statement
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (105) statement_expression -> . object_creation_expression
    (106) statement_expression -> . assignment
    (107) statement_expression -> . invocation_expression
    (108) statement_expression -> . post_increment_expression
    (109) statement_expression -> . post_decrement_expression
    (116) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (117) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (118) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (92) break_statement -> . BREAK TERMINATOR
    (93) continue_statement -> . CONTINUE TERMINATOR
    (94) return_statement -> . RETURN TERMINATOR
    (95) return_statement -> . RETURN expression TERMINATOR
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 110
    LBRACE          shift and go to state 48
    IF              shift and go to state 113
    WHILE           shift and go to state 83
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 116
    RETURN          shift and go to state 77
    NEW             shift and go to state 87
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 76
    unary_expression               shift and go to state 79
    proper_identifier              shift and go to state 141
    break_statement                shift and go to state 81
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 91
    predefined_type                shift and go to state 146
    iteration_statement            shift and go to state 88
    member_access                  shift and go to state 92
    embedded_statement             shift and go to state 362
    return_statement               shift and go to state 94
    literal                        shift and go to state 95
    continue_statement             shift and go to state 96
    statement_expression           shift and go to state 100
    invocation_expression          shift and go to state 101
    if_statement                   shift and go to state 103
    assignment                     shift and go to state 107
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 122
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 117
    element_access                 shift and go to state 108
    identifier                     shift and go to state 351
    block                          shift and go to state 121

state 341

    (153) element_access -> identifier LBRACKET expression_list RBRACKET .

    LBRACKET        reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MEMBERACCESS    reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    INCREMENT       reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    DECREMENT       reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LSHIFT          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RSHIFT          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LT              reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    GT              reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    LEQ             reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    GEQ             reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    NE              reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    CONAND          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    CONOR           reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    TERMINATOR      reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    PLUSEQUAL       reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)
    MINUSEQUAL      reduce using rule 153 (element_access -> identifier LBRACKET expression_list RBRACKET .)


state 342

    (113) invocation_expression -> identifier LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    PLUSEQUAL       reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MINUSEQUAL      reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MOD             reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LT              reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    GT              reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    EQ              reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    NE              reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    AND             reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    XOR             reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    OR              reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 113 (invocation_expression -> identifier LPAREN argument_list RPAREN .)


state 343

    (110) invocation_expression -> primary_expression LPAREN argument_list RPAREN .

    LBRACKET        reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    PLUSEQUAL       reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MINUSEQUAL      reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MOD             reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LT              reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    GT              reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    EQ              reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    NE              reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    AND             reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    XOR             reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    OR              reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 110 (invocation_expression -> primary_expression LPAREN argument_list RPAREN .)


state 344

    (45) array_initializer -> LBRACE variable_initializer_list COMMA . RBRACE
    (47) variable_initializer_list -> variable_initializer_list COMMA . variable_initializer
    (41) variable_initializer -> . expression
    (42) variable_initializer -> . array_initializer
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (43) array_initializer -> . LBRACE variable_initializer_list RBRACE
    (44) array_initializer -> . LBRACE RBRACE
    (45) array_initializer -> . LBRACE variable_initializer_list COMMA RBRACE
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    RBRACE          shift and go to state 364
    LBRACE          shift and go to state 213
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    relational_expression          shift and go to state 142
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    variable_initializer           shift and go to state 363
    invocation_expression          shift and go to state 148
    array_initializer              shift and go to state 212
    conditional_or_expression      shift and go to state 149
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    conditional_expression         shift and go to state 158
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    element_access                 shift and go to state 108
    identifier                     shift and go to state 159
    expression                     shift and go to state 214
    conditional_and_expression     shift and go to state 161

state 345

    (43) array_initializer -> LBRACE variable_initializer_list RBRACE .

    RBRACE          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    COMMA           reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    TERMINATOR      reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    LPAREN          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    INCREMENT       reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    DECREMENT       reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    MEMBERACCESS    reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    EQUALS          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    PLUSEQUAL       reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    MINUSEQUAL      reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    TIMES           reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    DIVIDE          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    MOD             reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    PLUS            reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    MINUS           reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    LSHIFT          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    RSHIFT          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    LT              reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    GT              reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    LEQ             reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    GEQ             reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    EQ              reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    NE              reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    AND             reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    XOR             reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    OR              reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    CONAND          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    CONOR           reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    RPAREN          reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)
    RBRACKET        reduce using rule 43 (array_initializer -> LBRACE variable_initializer_list RBRACE .)


state 346

    (69) default_argument -> EQUALS expression .

    RPAREN          reduce using rule 69 (default_argument -> EQUALS expression .)
    COMMA           reduce using rule 69 (default_argument -> EQUALS expression .)


state 347

    (55) method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 55 (method_header -> modifiers VOID member_name LPAREN fixed_parameters RPAREN .)


state 348

    (51) method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .

    RBRACE          reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    TILDE           reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    VOID            reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    TERMINATOR      reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    PUBLIC          reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    PRIVATE         reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    LBRACE          reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    IDENTIFIER      reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    OBJECT          reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    INT             reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)
    CHAR            reduce using rule 51 (method_header -> modifiers type member_name LPAREN fixed_parameters RPAREN .)


state 349

    (165) argument_list -> argument_list COMMA argument .

    RPAREN          reduce using rule 165 (argument_list -> argument_list COMMA argument .)
    COMMA           reduce using rule 165 (argument_list -> argument_list COMMA argument .)


state 350

    (118) iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .

    RBRACE          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    CONTINUE        reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    NEW             reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    PLUS            reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    MINUS           reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    LNOT            reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    TILDE           reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    INTCONST        reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    STRCONST        reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    CHARCONST       reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    LPAREN          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    TYPEOF          reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)
    ELSE            reduce using rule 118 (iteration_statement -> WHILE LPAREN expression RPAREN embedded_statement .)


state 351

    (122) assignment -> identifier . assignment_operator expression
    (112) invocation_expression -> identifier . LPAREN RPAREN
    (113) invocation_expression -> identifier . LPAREN argument_list RPAREN
    (157) post_increment_expression -> identifier . INCREMENT
    (159) post_decrement_expression -> identifier . DECREMENT
    (31) prefix -> identifier . MEMBERACCESS
    (153) element_access -> identifier . LBRACKET expression_list RBRACKET
    (193) iMEMAi -> identifier . MEMBERACCESS identifier
    (123) assignment_operator -> . EQUALS
    (124) assignment_operator -> . PLUSEQUAL
    (125) assignment_operator -> . MINUSEQUAL

    LPAREN          shift and go to state 198
    INCREMENT       shift and go to state 195
    DECREMENT       shift and go to state 199
    MEMBERACCESS    shift and go to state 196
    LBRACKET        shift and go to state 194
    EQUALS          shift and go to state 164
    PLUSEQUAL       shift and go to state 165
    MINUSEQUAL      shift and go to state 163

    assignment_operator            shift and go to state 197

state 352

    (174) object_initializer -> LBRACE member_initializer_list COMMA . RBRACE
    (176) member_initializer_list -> member_initializer_list COMMA . member_initializer
    (177) member_initializer -> . identifier EQUALS initializer_value
    (15) identifier -> . IDENTIFIER

    RBRACE          shift and go to state 365
    IDENTIFIER      shift and go to state 16

    identifier                     shift and go to state 367
    member_initializer             shift and go to state 366

state 353

    (172) object_initializer -> LBRACE member_initializer_list RBRACE .

    TERMINATOR      reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LBRACKET        reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LPAREN          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    INCREMENT       reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    DECREMENT       reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MEMBERACCESS    reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQUALS          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUSEQUAL       reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUSEQUAL      reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    TIMES           reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    DIVIDE          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MOD             reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUS            reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUS           reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSHIFT          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSHIFT          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LT              reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GT              reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LEQ             reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GEQ             reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQ              reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    NE              reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AND             reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    XOR             reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    OR              reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CONAND          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CONOR           reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RPAREN          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COMMA           reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACKET        reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACE          reduce using rule 172 (object_initializer -> LBRACE member_initializer_list RBRACE .)


state 354

    (181) collection_initializer -> LBRACE element_initializer_list COMMA . RBRACE
    (183) element_initializer_list -> element_initializer_list COMMA . element_initializer
    (184) element_initializer -> . non_assignment_expression
    (185) element_initializer -> . LBRACE expression_list RBRACE
    (194) non_assignment_expression -> . conditional_expression
    (195) conditional_expression -> . conditional_or_expression
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS

    RBRACE          shift and go to state 369
    LBRACE          shift and go to state 325
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 292
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    additive_expression            shift and go to state 153
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    and_expression                 shift and go to state 145
    invocation_expression          shift and go to state 148
    conditional_or_expression      shift and go to state 149
    element_initializer            shift and go to state 368
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 321
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 294
    conditional_and_expression     shift and go to state 161

state 355

    (180) collection_initializer -> LBRACE element_initializer_list RBRACE .

    TERMINATOR      reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LBRACKET        reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LPAREN          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    INCREMENT       reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    DECREMENT       reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MEMBERACCESS    reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    EQUALS          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    PLUSEQUAL       reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MINUSEQUAL      reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    TIMES           reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    DIVIDE          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MOD             reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    PLUS            reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    MINUS           reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LSHIFT          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RSHIFT          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LT              reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    GT              reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    LEQ             reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    GEQ             reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    EQ              reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    NE              reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    AND             reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    XOR             reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    OR              reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    CONAND          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    CONOR           reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RPAREN          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    COMMA           reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RBRACKET        reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)
    RBRACE          reduce using rule 180 (collection_initializer -> LBRACE element_initializer_list RBRACE .)


state 356

    (185) element_initializer -> LBRACE expression_list . RBRACE
    (155) expression_list -> expression_list . COMMA expression

    RBRACE          shift and go to state 370
    COMMA           shift and go to state 338


state 357

    (177) member_initializer -> identifier EQUALS . initializer_value
    (178) initializer_value -> . expression
    (179) initializer_value -> . object_or_collection_initializer
    (119) expression -> . non_assignment_expression
    (120) expression -> . assignment
    (170) object_or_collection_initializer -> . object_initializer
    (171) object_or_collection_initializer -> . collection_initializer
    (194) non_assignment_expression -> . conditional_expression
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (172) object_initializer -> . LBRACE member_initializer_list RBRACE
    (173) object_initializer -> . LBRACE RBRACE
    (174) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (180) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (181) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE
    (195) conditional_expression -> . conditional_or_expression
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (196) conditional_or_expression -> . conditional_and_expression
    (197) conditional_or_expression -> . conditional_or_expression CONOR conditional_and_expression
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (198) conditional_and_expression -> . inclusive_or_expression
    (199) conditional_and_expression -> . conditional_and_expression CONAND inclusive_or_expression
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (200) inclusive_or_expression -> . exclusive_or_expression
    (201) inclusive_or_expression -> . inclusive_or_expression OR exclusive_or_expression
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (202) exclusive_or_expression -> . and_expression
    (203) exclusive_or_expression -> . exclusive_or_expression XOR and_expression
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR
    (30) proper_identifier -> . prefix identifier
    (204) and_expression -> . equality_expression
    (205) and_expression -> . and_expression AND equality_expression
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (206) equality_expression -> . relational_expression
    (207) equality_expression -> . equality_expression EQ relational_expression
    (208) equality_expression -> . equality_expression NE relational_expression
    (209) relational_expression -> . shift_expression
    (210) relational_expression -> . relational_expression LT shift_expression
    (211) relational_expression -> . relational_expression GT shift_expression
    (212) relational_expression -> . relational_expression LEQ shift_expression
    (213) relational_expression -> . relational_expression GEQ shift_expression
    (214) shift_expression -> . additive_expression
    (215) shift_expression -> . shift_expression LSHIFT additive_expression
    (216) shift_expression -> . shift_expression RSHIFT additive_expression
    (217) additive_expression -> . multiplicative_expression
    (218) additive_expression -> . additive_expression PLUS multiplicative_expression
    (219) additive_expression -> . additive_expression MINUS multiplicative_expression
    (220) multiplicative_expression -> . unary_expression
    (221) multiplicative_expression -> . identifier
    (222) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (223) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (224) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (225) multiplicative_expression -> . multiplicative_expression TIMES identifier
    (226) multiplicative_expression -> . multiplicative_expression DIVIDE identifier
    (227) multiplicative_expression -> . multiplicative_expression MOD identifier

    LBRACE          shift and go to state 252
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    NEW             shift and go to state 143
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 138
    unary_expression               shift and go to state 139
    exclusive_or_expression        shift and go to state 140
    proper_identifier              shift and go to state 141
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 144
    and_expression                 shift and go to state 145
    predefined_type                shift and go to state 146
    inclusive_or_expression        shift and go to state 147
    member_access                  shift and go to state 92
    literal                        shift and go to state 95
    invocation_expression          shift and go to state 148
    collection_initializer         shift and go to state 254
    conditional_or_expression      shift and go to state 149
    relational_expression          shift and go to state 142
    non_assignment_expression      shift and go to state 150
    assignment                     shift and go to state 151
    multiplicative_expression      shift and go to state 152
    element_access                 shift and go to state 108
    object_initializer             shift and go to state 251
    primary_no_array_creation_expression shift and go to state 112
    additive_expression            shift and go to state 153
    primary_expression             shift and go to state 162
    shift_expression               shift and go to state 156
    equality_expression            shift and go to state 155
    parenthesized_expression       shift and go to state 106
    object_or_collection_initializer shift and go to state 371
    typeof_expression              shift and go to state 115
    initializer_value              shift and go to state 372
    post_increment_expression      shift and go to state 157
    conditional_expression         shift and go to state 158
    identifier                     shift and go to state 159
    expression                     shift and go to state 373
    conditional_and_expression     shift and go to state 161

state 358

    (160) object_creation_expression -> NEW type LPAREN argument_list RPAREN . object_or_collection_initializer
    (161) object_creation_expression -> NEW type LPAREN argument_list RPAREN .
    (170) object_or_collection_initializer -> . object_initializer
    (171) object_or_collection_initializer -> . collection_initializer
    (172) object_initializer -> . LBRACE member_initializer_list RBRACE
    (173) object_initializer -> . LBRACE RBRACE
    (174) object_initializer -> . LBRACE member_initializer_list COMMA RBRACE
    (180) collection_initializer -> . LBRACE element_initializer_list RBRACE
    (181) collection_initializer -> . LBRACE element_initializer_list COMMA RBRACE

    LBRACKET        reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MEMBERACCESS    reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    EQUALS          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    PLUSEQUAL       reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MINUSEQUAL      reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MOD             reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LSHIFT          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RSHIFT          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LT              reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    GT              reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    EQ              reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    NE              reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    AND             reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    XOR             reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    OR              reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    CONAND          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    CONOR           reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    TERMINATOR      reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 161 (object_creation_expression -> NEW type LPAREN argument_list RPAREN .)
    LBRACE          shift and go to state 252

    object_or_collection_initializer shift and go to state 374
    object_initializer             shift and go to state 251
    collection_initializer         shift and go to state 254

state 359

    (186) array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .

    MEMBERACCESS    reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    PLUSEQUAL       reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    MINUSEQUAL      reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    MOD             reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LT              reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    GT              reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    EQ              reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    NE              reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    AND             reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    XOR             reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    OR              reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    CONAND          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    CONOR           reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    TERMINATOR      reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 186 (array_creation_expression -> NEW non_array_type LBRACKET expression RBRACKET .)


state 360

    (192) unbound_type_name -> unbound_type_name MEMBERACCESS identifier .

    RPAREN          reduce using rule 192 (unbound_type_name -> unbound_type_name MEMBERACCESS identifier .)
    MEMBERACCESS    reduce using rule 192 (unbound_type_name -> unbound_type_name MEMBERACCESS identifier .)


state 361

    (155) expression_list -> expression_list COMMA expression .

    RBRACKET        reduce using rule 155 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 155 (expression_list -> expression_list COMMA expression .)
    RBRACE          reduce using rule 155 (expression_list -> expression_list COMMA expression .)


state 362

    (116) if_statement -> IF LPAREN expression RPAREN embedded_statement .
    (117) if_statement -> IF LPAREN expression RPAREN embedded_statement . ELSE embedded_statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    TERMINATOR      reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    LBRACE          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    IF              reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    WHILE           reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    BREAK           reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    CONTINUE        reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    RETURN          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    NEW             reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    OBJECT          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    IDENTIFIER      reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    INT             reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    CHAR            reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    PLUS            reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    MINUS           reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    LNOT            reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    TILDE           reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    INTCONST        reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    STRCONST        reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    CHARCONST       reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    LPAREN          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    TYPEOF          reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .)
    ELSE            shift and go to state 375

  ! ELSE            [ reduce using rule 116 (if_statement -> IF LPAREN expression RPAREN embedded_statement .) ]


state 363

    (47) variable_initializer_list -> variable_initializer_list COMMA variable_initializer .

    RBRACE          reduce using rule 47 (variable_initializer_list -> variable_initializer_list COMMA variable_initializer .)
    COMMA           reduce using rule 47 (variable_initializer_list -> variable_initializer_list COMMA variable_initializer .)


state 364

    (45) array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .

    RBRACE          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    TERMINATOR      reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    LPAREN          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    INCREMENT       reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    DECREMENT       reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    MEMBERACCESS    reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    EQUALS          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    PLUSEQUAL       reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    MINUSEQUAL      reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    TIMES           reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    DIVIDE          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    MOD             reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    PLUS            reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    MINUS           reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    LSHIFT          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    RSHIFT          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    LT              reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    GT              reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    LEQ             reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    GEQ             reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    EQ              reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    NE              reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    AND             reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    XOR             reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    OR              reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    CONAND          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    CONOR           reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    RPAREN          reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)
    RBRACKET        reduce using rule 45 (array_initializer -> LBRACE variable_initializer_list COMMA RBRACE .)


state 365

    (174) object_initializer -> LBRACE member_initializer_list COMMA RBRACE .

    TERMINATOR      reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LBRACKET        reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LPAREN          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    INCREMENT       reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    DECREMENT       reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MEMBERACCESS    reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    EQUALS          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    PLUSEQUAL       reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MINUSEQUAL      reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    TIMES           reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    DIVIDE          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MOD             reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    PLUS            reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    MINUS           reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LSHIFT          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RSHIFT          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LT              reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    GT              reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    LEQ             reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    GEQ             reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    EQ              reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    NE              reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    AND             reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    XOR             reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    OR              reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    CONAND          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    CONOR           reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RPAREN          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RBRACKET        reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 174 (object_initializer -> LBRACE member_initializer_list COMMA RBRACE .)


state 366

    (176) member_initializer_list -> member_initializer_list COMMA member_initializer .

    RBRACE          reduce using rule 176 (member_initializer_list -> member_initializer_list COMMA member_initializer .)
    COMMA           reduce using rule 176 (member_initializer_list -> member_initializer_list COMMA member_initializer .)


state 367

    (177) member_initializer -> identifier . EQUALS initializer_value

    EQUALS          shift and go to state 357


state 368

    (183) element_initializer_list -> element_initializer_list COMMA element_initializer .

    RBRACE          reduce using rule 183 (element_initializer_list -> element_initializer_list COMMA element_initializer .)
    COMMA           reduce using rule 183 (element_initializer_list -> element_initializer_list COMMA element_initializer .)


state 369

    (181) collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .

    TERMINATOR      reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LBRACKET        reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LPAREN          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    INCREMENT       reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    DECREMENT       reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MEMBERACCESS    reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    EQUALS          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    PLUSEQUAL       reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MINUSEQUAL      reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    TIMES           reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    DIVIDE          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MOD             reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    PLUS            reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    MINUS           reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LSHIFT          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RSHIFT          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LT              reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    GT              reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    LEQ             reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    GEQ             reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    EQ              reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    NE              reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    AND             reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    XOR             reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    OR              reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    CONAND          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    CONOR           reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RPAREN          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RBRACKET        reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 181 (collection_initializer -> LBRACE element_initializer_list COMMA RBRACE .)


state 370

    (185) element_initializer -> LBRACE expression_list RBRACE .

    RBRACE          reduce using rule 185 (element_initializer -> LBRACE expression_list RBRACE .)
    COMMA           reduce using rule 185 (element_initializer -> LBRACE expression_list RBRACE .)


state 371

    (179) initializer_value -> object_or_collection_initializer .

    RBRACE          reduce using rule 179 (initializer_value -> object_or_collection_initializer .)
    COMMA           reduce using rule 179 (initializer_value -> object_or_collection_initializer .)


state 372

    (177) member_initializer -> identifier EQUALS initializer_value .

    RBRACE          reduce using rule 177 (member_initializer -> identifier EQUALS initializer_value .)
    COMMA           reduce using rule 177 (member_initializer -> identifier EQUALS initializer_value .)


state 373

    (178) initializer_value -> expression .

    RBRACE          reduce using rule 178 (initializer_value -> expression .)
    COMMA           reduce using rule 178 (initializer_value -> expression .)


state 374

    (160) object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .

    LBRACKET        reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MEMBERACCESS    reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    INCREMENT       reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LPAREN          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    DECREMENT       reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    EQUALS          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    PLUSEQUAL       reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MINUSEQUAL      reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    TIMES           reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    DIVIDE          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MOD             reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    PLUS            reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    MINUS           reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LSHIFT          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RSHIFT          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LT              reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    GT              reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    LEQ             reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    GEQ             reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    EQ              reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    NE              reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    AND             reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    XOR             reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    OR              reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    CONAND          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    CONOR           reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    TERMINATOR      reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RBRACE          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    COMMA           reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RPAREN          reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)
    RBRACKET        reduce using rule 160 (object_creation_expression -> NEW type LPAREN argument_list RPAREN object_or_collection_initializer .)


state 375

    (117) if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE . embedded_statement
    (84) embedded_statement -> . block
    (85) embedded_statement -> . TERMINATOR
    (86) embedded_statement -> . statement_expression TERMINATOR
    (87) embedded_statement -> . if_statement
    (88) embedded_statement -> . iteration_statement
    (89) embedded_statement -> . break_statement
    (90) embedded_statement -> . continue_statement
    (91) embedded_statement -> . return_statement
    (78) block -> . LBRACE RBRACE
    (79) block -> . LBRACE statement_list RBRACE
    (105) statement_expression -> . object_creation_expression
    (106) statement_expression -> . assignment
    (107) statement_expression -> . invocation_expression
    (108) statement_expression -> . post_increment_expression
    (109) statement_expression -> . post_decrement_expression
    (116) if_statement -> . IF LPAREN expression RPAREN embedded_statement
    (117) if_statement -> . IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement
    (118) iteration_statement -> . WHILE LPAREN expression RPAREN embedded_statement
    (92) break_statement -> . BREAK TERMINATOR
    (93) continue_statement -> . CONTINUE TERMINATOR
    (94) return_statement -> . RETURN TERMINATOR
    (95) return_statement -> . RETURN expression TERMINATOR
    (160) object_creation_expression -> . NEW type LPAREN argument_list RPAREN object_or_collection_initializer
    (161) object_creation_expression -> . NEW type LPAREN argument_list RPAREN
    (162) object_creation_expression -> . NEW type LPAREN RPAREN
    (163) object_creation_expression -> . NEW type object_or_collection_initializer
    (121) assignment -> . unary_expression assignment_operator expression
    (122) assignment -> . identifier assignment_operator expression
    (110) invocation_expression -> . primary_expression LPAREN argument_list RPAREN
    (111) invocation_expression -> . primary_expression LPAREN RPAREN
    (112) invocation_expression -> . identifier LPAREN RPAREN
    (113) invocation_expression -> . identifier LPAREN argument_list RPAREN
    (114) invocation_expression -> . proper_identifier LPAREN argument_list RPAREN
    (115) invocation_expression -> . proper_identifier LPAREN RPAREN
    (156) post_increment_expression -> . primary_expression INCREMENT
    (157) post_increment_expression -> . identifier INCREMENT
    (158) post_decrement_expression -> . primary_expression DECREMENT
    (159) post_decrement_expression -> . identifier DECREMENT
    (126) unary_expression -> . primary_expression
    (127) unary_expression -> . PLUS unary_expression
    (128) unary_expression -> . PLUS identifier
    (129) unary_expression -> . MINUS unary_expression
    (130) unary_expression -> . MINUS identifier
    (131) unary_expression -> . LNOT unary_expression
    (132) unary_expression -> . LNOT identifier
    (133) unary_expression -> . TILDE unary_expression
    (134) unary_expression -> . TILDE identifier
    (15) identifier -> . IDENTIFIER
    (135) primary_expression -> . primary_no_array_creation_expression
    (136) primary_expression -> . array_creation_expression
    (30) proper_identifier -> . prefix identifier
    (137) primary_no_array_creation_expression -> . literal
    (138) primary_no_array_creation_expression -> . parenthesized_expression
    (139) primary_no_array_creation_expression -> . member_access
    (140) primary_no_array_creation_expression -> . element_access
    (141) primary_no_array_creation_expression -> . post_increment_expression
    (142) primary_no_array_creation_expression -> . invocation_expression
    (143) primary_no_array_creation_expression -> . post_decrement_expression
    (144) primary_no_array_creation_expression -> . object_creation_expression
    (145) primary_no_array_creation_expression -> . typeof_expression
    (186) array_creation_expression -> . NEW non_array_type LBRACKET expression RBRACKET
    (187) array_creation_expression -> . NEW array_type array_initializer
    (31) prefix -> . identifier MEMBERACCESS
    (32) prefix -> . prefix identifier MEMBERACCESS
    (96) literal -> . INTCONST
    (97) literal -> . STRCONST
    (98) literal -> . CHARCONST
    (146) parenthesized_expression -> . LPAREN expression RPAREN
    (147) member_access -> . primary_expression MEMBERACCESS identifier
    (148) member_access -> . iMEMAi
    (149) member_access -> . predefined_type MEMBERACCESS identifier
    (152) element_access -> . primary_no_array_creation_expression LBRACKET expression_list RBRACKET
    (153) element_access -> . identifier LBRACKET expression_list RBRACKET
    (188) typeof_expression -> . TYPEOF LPAREN type RPAREN
    (189) typeof_expression -> . TYPEOF LPAREN unbound_type_name RPAREN
    (190) typeof_expression -> . TYPEOF LPAREN VOID RPAREN
    (193) iMEMAi -> . identifier MEMBERACCESS identifier
    (150) predefined_type -> . INT
    (151) predefined_type -> . CHAR

    TERMINATOR      shift and go to state 110
    LBRACE          shift and go to state 48
    IF              shift and go to state 113
    WHILE           shift and go to state 83
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 116
    RETURN          shift and go to state 77
    NEW             shift and go to state 87
    PLUS            shift and go to state 97
    MINUS           shift and go to state 89
    LNOT            shift and go to state 84
    TILDE           shift and go to state 99
    IDENTIFIER      shift and go to state 16
    INTCONST        shift and go to state 82
    STRCONST        shift and go to state 78
    CHARCONST       shift and go to state 109
    LPAREN          shift and go to state 111
    TYPEOF          shift and go to state 104
    INT             shift and go to state 51
    CHAR            shift and go to state 47

    object_creation_expression     shift and go to state 76
    unary_expression               shift and go to state 79
    proper_identifier              shift and go to state 141
    break_statement                shift and go to state 81
    prefix                         shift and go to state 31
    iMEMAi                         shift and go to state 85
    array_creation_expression      shift and go to state 86
    post_decrement_expression      shift and go to state 91
    predefined_type                shift and go to state 146
    iteration_statement            shift and go to state 88
    member_access                  shift and go to state 92
    embedded_statement             shift and go to state 376
    return_statement               shift and go to state 94
    literal                        shift and go to state 95
    continue_statement             shift and go to state 96
    statement_expression           shift and go to state 100
    invocation_expression          shift and go to state 101
    if_statement                   shift and go to state 103
    assignment                     shift and go to state 107
    primary_no_array_creation_expression shift and go to state 112
    primary_expression             shift and go to state 122
    parenthesized_expression       shift and go to state 106
    typeof_expression              shift and go to state 115
    post_increment_expression      shift and go to state 117
    element_access                 shift and go to state 108
    identifier                     shift and go to state 351
    block                          shift and go to state 121

state 376

    (117) if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .

    RBRACE          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    TERMINATOR      reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    LBRACE          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    IF              reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    WHILE           reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    BREAK           reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    CONTINUE        reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    RETURN          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    NEW             reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    OBJECT          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    IDENTIFIER      reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    INT             reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    CHAR            reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    PLUS            reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    MINUS           reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    LNOT            reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    TILDE           reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    INTCONST        reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    STRCONST        reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    CHARCONST       reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    LPAREN          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    TYPEOF          reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)
    ELSE            reduce using rule 117 (if_statement -> IF LPAREN expression RPAREN embedded_statement ELSE embedded_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 120 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 173 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 362 resolved as shift
