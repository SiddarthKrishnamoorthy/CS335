
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'compilation_unitleftCONORleftCONANDleftORleftXORleftANDleftEQNEleftGTGEQLTLEQleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMODrightTILDELNOTleftMEMBERACCESSINCREMENTDECREMENTIDENTIFIER INTCONST CHARCONST STRCONST MEMBERACCESS INCREMENT DECREMENT LNOT TILDE TIMES DIVIDE MOD PLUS MINUS LSHIFT RSHIFT EQUALS PLUSEQUAL MINUSEQUAL NEWLINE COMMENTDELIM COMMENTSLINE SINGLEQUOTE DOUBLEQUOTE BACKSLASH LT GT LEQ GEQ EQ NE LPAREN RPAREN LBRACE RBRACE LBRACKET RBRACKET COMMA TERMINATOR COLON AND XOR OR CONAND CONOR GOTO CHAR OBJECT NULL BREAK SHORT STRING PRIVATE CLASS INT WHILE NEW CONTINUE IF RETURN ELSE PUBLIC USING VOID SIZEOFstart : compilation_unit\n\tcompilation_unit : class_declarations\n\tclass_declarations : class_declarations class_declaration \n\t\t\t\t\t\t\t| class_declaration\n\n\tclass_declaration : class_modifiers CLASS identifier class_body TERMINATOR\n\t\t\t\t\t\t\t| CLASS identifier class_body TERMINATOR\n\t\t\t\t\t\t\t| CLASS identifier class_body\n\t\t\t\t\t\t\t| class_modifiers CLASS identifier class_body\n\tclass_modifiers : class_modifier\n\t\t\t\t\t\t| class_modifiers class_modifier\n\tclass_modifier : PUBLIC\n\t\t\t\t\t\t| PRIVATE\n\tclass_body : LBRACE class_member_declarations RBRACE \n\t\t\t\t\t| LBRACE RBRACE\n\tidentifier : IDENTIFIER\n\tclass_member_declarations : class_member_declaration\n\t\t\t\t\t\t\t\t\t| class_member_declarations class_member_declaration\n\tclass_member_declaration : field_declaration\n\t\t\t\t\t\t\t\t\t| method_declaration\n\t\t\t\t\t\t\t\t\t| constructor_declaration\n\t\t\t\t\t\t\t\t\t| destructor_declaration\n\tfield_declaration : field_modifiers type variable_declarators TERMINATOR\n\t\t\t\t\t\t\t| type variable_declarators TERMINATOR\n\tfield_modifiers : field_modifier\n\t\t\t\t\t\t| field_modifiers field_modifier\n\tfield_modifier : PUBLIC \n\t\t\t\t\t\t| PRIVATE\n\ttype : reference_type\n\t\t\t| type_parameter\n\treference_type : class_type\n\t\t\t\t\t\t| array_type\n\tclass_type : type_name\n\t\t\t\t\t| OBJECT\n\ttype_name : proper_identifier\n\tproper_identifier : identifier\n\t\t\t\t\t\t\t| prefix identifier\n\tprefix : identifier MEMBERACCESS \n\t\t| prefix identifier MEMBERACCESS \n\tarray_type : non_array_type LBRACKET RBRACKET\n\tnon_array_type : type\n\ttype_parameter : identifier\n\t\t\t\t\t\t| INT\n\t\t\t\t\t\t| CHAR\n\tvariable_declarators : variable_declarator\n\t\t\t\t\t\t\t| variable_declarators COMMA variable_declarator\n\tvariable_declarator : identifier\n\t\t\t\t\t\t\t| identifier EQUALS variable_initializer\n\tvariable_initializer : expression\n\t\t\t\t\t\t\t| array_initializer\n\texpression : empty\n\tarray_initializer : LBRACE variable_initializer_list RBRACE\n\t\t\t\t\t\t\t| LBRACE RBRACE \n\t\t\t\t\t\t\t| LBRACE variable_initializer_list COMMA RBRACE\n\tvariable_initializer_list : variable_initializer\n\t\t\t\t\t\t\t\t\t| variable_initializer_list COMMA variable_initializer\n\tmethod_declaration : method_header\n\t\t\t\t\t\t\t| method_body\n\tmethod_header : method_modifiers return_type member_name LPAREN RPAREN\n\tmethod_modifiers : method_modifier\n\t\t\t\t\t\t| method_modifiers method_modifier\n\tmethod_modifier : PUBLIC\n\t\t\t\t\t\t| PRIVATE\n\treturn_type : type\n\t\t\t\t\t| VOID\n\tmember_name : identifier\n\tmethod_body : block\n\t\t\t\t\t| TERMINATOR\n\tfixed_parameters : fixed_parameter \n\t\t\t\t\t\t| fixed_parameters COMMA fixed_parameter\n\tfixed_parameter : type identifier default_argument\n\t\t\t\t\t\t| type identifier\n\tdefault_argument : EQUALS expression\n\tconstructor_declaration : constructor_declarator constructor_body\n\tconstructor_declarator : identifier LPAREN fixed_parameters RPAREN\n\t\t\t\t\t\t\t\t| identifier LPAREN  RPAREN\n\tconstructor_body : block\n\t\t\t\t\t\t| TERMINATOR\n\tdestructor_declaration : TILDE identifier LPAREN RPAREN destructor_body\n\tdestructor_body : block\n\t\t\t\t\t\t| TERMINATOR\n\tblock : LBRACE RBRACE\n\tliteral : INTCONST\n        | STRCONST\n        | CHARCONST\n        empty : \n\t'
    
_lr_action_items = {'INT':([14,17,20,21,22,24,27,29,31,32,35,37,39,40,41,43,49,53,54,57,59,60,62,63,64,65,66,72,75,83,92,101,103,107,108,109,],[18,-21,18,18,-18,-26,-19,-66,-56,-59,-16,-57,18,-20,-24,-27,-67,-60,-61,-62,-26,-25,-27,-73,-76,-77,-81,-17,18,-23,-22,18,-58,-79,-80,-78,]),'EQUALS':([10,68,102,],[-15,81,111,]),'RPAREN':([10,75,85,87,88,91,93,102,110,111,112,115,],[-15,86,99,-68,100,103,-50,-71,-69,-85,-70,-72,]),'RBRACE':([14,17,22,27,28,29,31,35,37,39,40,49,63,64,65,66,72,83,92,93,94,95,96,103,104,105,106,107,108,109,113,114,116,117,],[19,-21,-18,-19,66,-66,-56,-16,-57,71,-20,-67,-73,-76,-77,-81,-17,-23,-22,-50,105,-49,-48,-58,113,-52,-54,-79,-80,-78,-51,116,-53,-55,]),'IDENTIFIER':([7,10,12,14,17,18,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,74,75,82,83,84,89,90,92,101,103,107,108,109,],[10,-15,10,10,-21,-42,10,10,-18,-26,-33,-32,-19,-66,10,-56,-59,10,-30,-16,-31,-57,-43,10,-20,-24,10,-27,-29,-35,-28,-34,-67,-64,-60,-61,10,-63,-62,-35,-26,-25,10,-27,-73,-76,-77,-81,-36,-17,-37,10,10,-23,-38,10,-39,-22,10,-58,-79,-80,-78,]),'LBRACE':([10,11,14,16,17,22,23,27,29,31,35,37,39,40,49,63,64,65,66,72,81,83,86,92,94,99,100,103,107,108,109,114,],[-15,14,28,14,-21,-18,28,-19,-66,-56,-16,-57,28,-20,-67,-73,-76,-77,-81,-17,94,-23,-75,-22,94,28,-74,-58,-79,-80,-78,94,]),'VOID':([20,24,32,43,53,54,57,],[52,-61,-59,-62,-60,-61,-62,]),'MEMBERACCESS':([10,45,58,70,],[-15,74,74,84,]),'TILDE':([14,17,22,27,29,31,35,37,39,40,49,63,64,65,66,72,83,92,103,107,108,109,],[42,-21,-18,-19,-66,-56,-16,-57,42,-20,-67,-73,-76,-77,-81,-17,-23,-22,-58,-79,-80,-78,]),'CLASS':([0,1,2,3,4,5,8,9,13,15,19,50,51,71,77,],[7,-12,-9,-11,-4,7,12,-3,-10,-7,-14,-6,-8,-13,-5,]),'RBRACKET':([76,],[90,]),'LBRACKET':([10,18,25,26,30,34,36,38,44,45,46,47,48,56,58,61,70,89,90,],[-15,-42,-33,-32,-40,-30,-31,-43,-29,-35,76,-28,-34,-40,-35,-40,-36,-40,-39,]),'PRIVATE':([0,1,2,3,4,5,8,9,13,14,15,17,19,20,21,22,24,27,29,31,32,35,37,39,40,41,43,49,50,51,53,54,57,59,60,62,63,64,65,66,71,72,77,83,92,103,107,108,109,],[1,-12,-9,-11,-4,1,1,-3,-10,43,-7,-21,-14,57,62,-18,-26,-19,-66,-56,-59,-16,-57,43,-20,-24,-27,-67,-6,-8,-60,-61,-62,-26,-25,-27,-73,-76,-77,-81,-13,-17,-5,-23,-22,-58,-79,-80,-78,]),'$end':([4,5,6,9,15,19,50,51,71,77,],[-4,-2,0,-3,-7,-14,-6,-8,-13,-5,]),'PUBLIC':([0,1,2,3,4,5,8,9,13,14,15,17,19,20,21,22,24,27,29,31,32,35,37,39,40,41,43,49,50,51,53,54,57,59,60,62,63,64,65,66,71,72,77,83,92,103,107,108,109,],[3,-12,-9,-11,-4,3,3,-3,-10,24,-7,-21,-14,54,59,-18,-26,-19,-66,-56,-59,-16,-57,24,-20,-24,-27,-67,-6,-8,-60,-61,-62,-26,-25,-27,-73,-76,-77,-81,-13,-17,-5,-23,-22,-58,-79,-80,-78,]),'CHAR':([14,17,20,21,22,24,27,29,31,32,35,37,39,40,41,43,49,53,54,57,59,60,62,63,64,65,66,72,75,83,92,101,103,107,108,109,],[38,-21,38,38,-18,-26,-19,-66,-56,-59,-16,-57,38,-20,-24,-27,-67,-60,-61,-62,-26,-25,-27,-73,-76,-77,-81,-17,38,-23,-22,38,-58,-79,-80,-78,]),'OBJECT':([14,17,20,21,22,24,27,29,31,32,35,37,39,40,41,43,49,53,54,57,59,60,62,63,64,65,66,72,75,83,92,101,103,107,108,109,],[25,-21,25,25,-18,-26,-19,-66,-56,-59,-16,-57,25,-20,-24,-27,-67,-60,-61,-62,-26,-25,-27,-73,-76,-77,-81,-17,25,-23,-22,25,-58,-79,-80,-78,]),'LPAREN':([10,45,73,78,79,],[-15,75,85,91,-65,]),'TERMINATOR':([10,14,15,17,19,22,23,27,29,31,35,37,39,40,49,51,63,64,65,66,67,68,69,71,72,80,81,83,86,92,93,95,96,97,98,99,100,103,105,107,108,109,113,116,],[-15,49,50,-21,-14,-18,65,-19,-66,-56,-16,-57,49,-20,-67,77,-73,-76,-77,-81,-44,-46,83,-13,-17,92,-85,-23,-75,-22,-50,-49,-48,-47,-45,108,-74,-58,-52,-79,-80,-78,-51,-53,]),'COMMA':([10,67,68,69,80,81,87,88,93,94,95,96,97,98,102,104,105,106,110,111,112,113,114,115,116,117,],[-15,-44,-46,82,82,-85,-68,101,-50,-85,-49,-48,-47,-45,-71,114,-52,-54,-69,-85,-70,-51,-85,-72,-53,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'destructor_declaration':([14,39,],[17,17,]),'method_modifiers':([14,39,],[20,20,]),'member_name':([55,],[78,]),'class_modifier':([0,5,8,],[2,2,13,]),'field_modifiers':([14,39,],[21,21,]),'variable_declarator':([30,61,82,],[67,67,98,]),'field_declaration':([14,39,],[22,22,]),'constructor_declarator':([14,39,],[23,23,]),'fixed_parameter':([75,101,],[87,110,]),'method_declaration':([14,39,],[27,27,]),'fixed_parameters':([75,],[88,]),'default_argument':([102,],[112,]),'array_initializer':([81,94,114,],[95,95,95,]),'block':([14,23,39,99,],[29,64,29,107,]),'return_type':([20,],[55,]),'class_body':([11,16,],[15,51,]),'constructor_body':([23,],[63,]),'method_header':([14,39,],[31,31,]),'method_modifier':([14,20,39,],[32,53,32,]),'class_modifiers':([0,5,],[8,8,]),'variable_declarators':([30,61,],[69,80,]),'prefix':([14,20,21,39,75,101,],[33,33,33,33,33,33,]),'class_type':([14,20,21,39,75,101,],[34,34,34,34,34,34,]),'class_member_declaration':([14,39,],[35,72,]),'type_name':([14,20,21,39,75,101,],[26,26,26,26,26,26,]),'destructor_body':([99,],[109,]),'array_type':([14,20,21,39,75,101,],[36,36,36,36,36,36,]),'compilation_unit':([0,],[6,]),'empty':([81,94,111,114,],[93,93,93,93,]),'method_body':([14,39,],[37,37,]),'class_declarations':([0,],[5,]),'class_declaration':([0,5,],[4,9,]),'class_member_declarations':([14,],[39,]),'constructor_declaration':([14,39,],[40,40,]),'proper_identifier':([14,20,21,39,75,101,],[48,48,48,48,48,48,]),'variable_initializer':([81,94,114,],[97,106,117,]),'type':([14,20,21,39,75,101,],[30,56,61,30,89,89,]),'variable_initializer_list':([94,],[104,]),'type_parameter':([14,20,21,39,75,101,],[44,44,44,44,44,44,]),'expression':([81,94,111,114,],[96,96,115,96,]),'identifier':([7,12,14,20,21,30,33,39,42,55,61,75,82,89,101,],[11,16,45,58,58,68,70,45,73,79,68,58,68,102,58,]),'non_array_type':([14,20,21,39,75,101,],[46,46,46,46,46,46,]),'reference_type':([14,20,21,39,75,101,],[47,47,47,47,47,47,]),'field_modifier':([14,21,39,],[41,60,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compilation_unit","S'",1,None,None,None),
  ('start -> compilation_unit','start',1,'p_start','parser.py',30),
  ('compilation_unit -> class_declarations','compilation_unit',1,'p_compilation_unit','parser.py',34),
  ('class_declarations -> class_declarations class_declaration','class_declarations',2,'p_class_declarations','parser.py',38),
  ('class_declarations -> class_declaration','class_declarations',1,'p_class_declarations','parser.py',39),
  ('class_declaration -> class_modifiers CLASS identifier class_body TERMINATOR','class_declaration',5,'p_class_declaration','parser.py',43),
  ('class_declaration -> CLASS identifier class_body TERMINATOR','class_declaration',4,'p_class_declaration','parser.py',44),
  ('class_declaration -> CLASS identifier class_body','class_declaration',3,'p_class_declaration','parser.py',45),
  ('class_declaration -> class_modifiers CLASS identifier class_body','class_declaration',4,'p_class_declaration','parser.py',46),
  ('class_modifiers -> class_modifier','class_modifiers',1,'p_class_modifiers','parser.py',49),
  ('class_modifiers -> class_modifiers class_modifier','class_modifiers',2,'p_class_modifiers','parser.py',50),
  ('class_modifier -> PUBLIC','class_modifier',1,'p_class_modifier','parser.py',53),
  ('class_modifier -> PRIVATE','class_modifier',1,'p_class_modifier','parser.py',54),
  ('class_body -> LBRACE class_member_declarations RBRACE','class_body',3,'p_class_body','parser.py',58),
  ('class_body -> LBRACE RBRACE','class_body',2,'p_class_body','parser.py',59),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',63),
  ('class_member_declarations -> class_member_declaration','class_member_declarations',1,'p_class_member_declarations','parser.py',67),
  ('class_member_declarations -> class_member_declarations class_member_declaration','class_member_declarations',2,'p_class_member_declarations','parser.py',68),
  ('class_member_declaration -> field_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',72),
  ('class_member_declaration -> method_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',73),
  ('class_member_declaration -> constructor_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',74),
  ('class_member_declaration -> destructor_declaration','class_member_declaration',1,'p_class_member_declaration','parser.py',75),
  ('field_declaration -> field_modifiers type variable_declarators TERMINATOR','field_declaration',4,'p_field_declaration','parser.py',79),
  ('field_declaration -> type variable_declarators TERMINATOR','field_declaration',3,'p_field_declaration','parser.py',80),
  ('field_modifiers -> field_modifier','field_modifiers',1,'p_field_modifiers','parser.py',84),
  ('field_modifiers -> field_modifiers field_modifier','field_modifiers',2,'p_field_modifiers','parser.py',85),
  ('field_modifier -> PUBLIC','field_modifier',1,'p_field_modifier','parser.py',89),
  ('field_modifier -> PRIVATE','field_modifier',1,'p_field_modifier','parser.py',90),
  ('type -> reference_type','type',1,'p_type','parser.py',94),
  ('type -> type_parameter','type',1,'p_type','parser.py',95),
  ('reference_type -> class_type','reference_type',1,'p_reference_type','parser.py',98),
  ('reference_type -> array_type','reference_type',1,'p_reference_type','parser.py',99),
  ('class_type -> type_name','class_type',1,'p_class_type','parser.py',102),
  ('class_type -> OBJECT','class_type',1,'p_class_type','parser.py',103),
  ('type_name -> proper_identifier','type_name',1,'p_type_name','parser.py',107),
  ('proper_identifier -> identifier','proper_identifier',1,'p_proper_identifier','parser.py',111),
  ('proper_identifier -> prefix identifier','proper_identifier',2,'p_proper_identifier','parser.py',112),
  ('prefix -> identifier MEMBERACCESS','prefix',2,'p_prefix','parser.py',116),
  ('prefix -> prefix identifier MEMBERACCESS','prefix',3,'p_prefix','parser.py',117),
  ('array_type -> non_array_type LBRACKET RBRACKET','array_type',3,'p_array_type','parser.py',121),
  ('non_array_type -> type','non_array_type',1,'p_non_array_type','parser.py',125),
  ('type_parameter -> identifier','type_parameter',1,'p_type_parameter','parser.py',129),
  ('type_parameter -> INT','type_parameter',1,'p_type_parameter','parser.py',130),
  ('type_parameter -> CHAR','type_parameter',1,'p_type_parameter','parser.py',131),
  ('variable_declarators -> variable_declarator','variable_declarators',1,'p_variable_declarators','parser.py',145),
  ('variable_declarators -> variable_declarators COMMA variable_declarator','variable_declarators',3,'p_variable_declarators','parser.py',146),
  ('variable_declarator -> identifier','variable_declarator',1,'p_variable_declarator','parser.py',149),
  ('variable_declarator -> identifier EQUALS variable_initializer','variable_declarator',3,'p_variable_declarator','parser.py',150),
  ('variable_initializer -> expression','variable_initializer',1,'p_variable_initializer','parser.py',154),
  ('variable_initializer -> array_initializer','variable_initializer',1,'p_variable_initializer','parser.py',155),
  ('expression -> empty','expression',1,'p_expression','parser.py',159),
  ('array_initializer -> LBRACE variable_initializer_list RBRACE','array_initializer',3,'p_array_initializer','parser.py',172),
  ('array_initializer -> LBRACE RBRACE','array_initializer',2,'p_array_initializer','parser.py',173),
  ('array_initializer -> LBRACE variable_initializer_list COMMA RBRACE','array_initializer',4,'p_array_initializer','parser.py',174),
  ('variable_initializer_list -> variable_initializer','variable_initializer_list',1,'p_variable_initializer_list','parser.py',178),
  ('variable_initializer_list -> variable_initializer_list COMMA variable_initializer','variable_initializer_list',3,'p_variable_initializer_list','parser.py',179),
  ('method_declaration -> method_header','method_declaration',1,'p_method_declaration','parser.py',189),
  ('method_declaration -> method_body','method_declaration',1,'p_method_declaration','parser.py',190),
  ('method_header -> method_modifiers return_type member_name LPAREN RPAREN','method_header',5,'p_method_header','parser.py',200),
  ('method_modifiers -> method_modifier','method_modifiers',1,'p_method_modifiers','parser.py',204),
  ('method_modifiers -> method_modifiers method_modifier','method_modifiers',2,'p_method_modifiers','parser.py',205),
  ('method_modifier -> PUBLIC','method_modifier',1,'p_method_modifier','parser.py',209),
  ('method_modifier -> PRIVATE','method_modifier',1,'p_method_modifier','parser.py',210),
  ('return_type -> type','return_type',1,'p_return_type','parser.py',214),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',215),
  ('member_name -> identifier','member_name',1,'p_member_name','parser.py',219),
  ('method_body -> block','method_body',1,'p_method_body','parser.py',223),
  ('method_body -> TERMINATOR','method_body',1,'p_method_body','parser.py',224),
  ('fixed_parameters -> fixed_parameter','fixed_parameters',1,'p_fixed_parameters','parser.py',228),
  ('fixed_parameters -> fixed_parameters COMMA fixed_parameter','fixed_parameters',3,'p_fixed_parameters','parser.py',229),
  ('fixed_parameter -> type identifier default_argument','fixed_parameter',3,'p_fixed_parameter','parser.py',233),
  ('fixed_parameter -> type identifier','fixed_parameter',2,'p_fixed_parameter','parser.py',234),
  ('default_argument -> EQUALS expression','default_argument',2,'p_default_argument','parser.py',238),
  ('constructor_declaration -> constructor_declarator constructor_body','constructor_declaration',2,'p_constructor_declaration','parser.py',242),
  ('constructor_declarator -> identifier LPAREN fixed_parameters RPAREN','constructor_declarator',4,'p_constructor_declarator','parser.py',246),
  ('constructor_declarator -> identifier LPAREN RPAREN','constructor_declarator',3,'p_constructor_declarator','parser.py',247),
  ('constructor_body -> block','constructor_body',1,'p_constructor_body','parser.py',251),
  ('constructor_body -> TERMINATOR','constructor_body',1,'p_constructor_body','parser.py',252),
  ('destructor_declaration -> TILDE identifier LPAREN RPAREN destructor_body','destructor_declaration',5,'p_destructor_declaration','parser.py',256),
  ('destructor_body -> block','destructor_body',1,'p_destructor_body','parser.py',260),
  ('destructor_body -> TERMINATOR','destructor_body',1,'p_destructor_body','parser.py',261),
  ('block -> LBRACE RBRACE','block',2,'p_block','parser.py',264),
  ('literal -> INTCONST','literal',1,'p_literal','parser.py',268),
  ('literal -> STRCONST','literal',1,'p_literal','parser.py',269),
  ('literal -> CHARCONST','literal',1,'p_literal','parser.py',270),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',273),
]
